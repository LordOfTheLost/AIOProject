#!/sbin/sh

VAIOPFMD="10.04.22 (72)"

{ #TMPDIR, Magisk Default Var, BB & Other Useful Links
IPDLTMP="/data/local/tmp"
TMPDIR="$IPDLTMP/AIOPFMD"
ALTTMPDIR="/dev/AIOPFMD"
NVBASE="/data/adb"
SERVICED="$NVBASE/service.d"
POSTFSDATAD="$NVBASE/post-fs-data.d"
IN="$1"
OUTFD="$2"
ZIPFILE="$3"
ADDONS="$ALTTMPDIR/Addons"
AADDONS="$TMPDIR/AltAddons"
BB="$ALTTMPDIR/BB"
EVENTS="$BB/events"
UNTARXZ="$BB/tar"
UNZIP="$BB/unzip"
TIMEOUT="$BB/timeout"
ECHO="$BB/echo"
HEAD="$BB/head"
ZIPALIGN="$AADDONS/zipalign"
ZIPPACKER="$AADDONS/zip"
} #

{ #Version Or Date Of Patches In This Patch
#UI: Pills/NavBar/Gboard/Themes/BA/Sounds
IDPO="Pills"; VIPPO="v2.0"
IDPCO="PillsColors"; VIPPCO="v1.4"
IDPHOS="PillsHeight"; VIPPHO="v1.4"
IDPSHNB="ShowHideNavigationBar"; VIPPSHNB="v1.0"
IDBGDS="BackGestureDisabler"; VIPBGD="v1.0"
IDGBNBS="GboardNavBarSpacing"; VIPGBNBS="v1.2"
IDGBRC="GBoardRoundedCorners"; VIPGBRC="v1.1"
IDGBT="GBoardThemes"; VIPGBT="v1.4"
IDGBSTE="GboardSilkThemeChanger"; VIPGBSTE="v1.1"
IDSBINNI="SBINNI"; VIPSBINNI="v1.9"
IDGPPM="GPayPowerMenu"; VIPGPPM="v1.1"
IDRUI="RoundedUI"; VIPRUI="v2.8"
IDBIP="BurnInProtection"; VIPBIP="v1.7"
IDNSP="NotificationSidePaddings"; VIPNSP="v1.4"
IDSBIS="StatusBarIconSpace"; VIPSBIS="v1.3"
IDSBCS="StatusBarClockSize"; VIPSBCS="v1.1"
IDSUE="SingleUserEnabler"; VIPSUE="v1.1"
IDSBP="StatusBarPadding"; VIPSBP="v1.5"
IDQSCP="QSContentPadding"; VIPQSCP="v1.1"
IDSUIRSRS="SUIRoundedSize"; VIPSUIRSRS="v1.2"
IDQSCIAR="QSCountIconAndRows"; VIPQSCIAR="v1.4"
IDEBB="BackgroundBlur"; VIPEBB="v1.0"
IDBA="BootAnimation"; VIPBA="v1.4"
IDIOSEMOJI="IOSEmoji"; VIPIOSEMOJI="v1.1"
IDMUIS="MediaUISounds"; VIPMUIS="v1.4"
IDFDNI="ForceDisableNotificationIcons"; VIPFDNI="v1.0"
IDWFAMDQSSC="WFAMDQSSC"; VIPWFAMDQSSC="v1.1"
#Apps: Lawnchair/Shady/IA
IDSL="Systemless_Lawnchair"; VIPSL="v1.9"; VIPASLS="12 Alpha 5"
IDSSL="Systemless_ShadyLauncher"; VIPSSLQ="v1.5"; VCIPSSLQ="15"; VIPSSLR="v2021.11.28"; VCIPSSLR="20211128"
IDAIOIARPFMD="AIOIARPFMD"; VAIOIARPFMD="$VAIOPFMD"
#Audio: VFX(P)/NL/AIST/SAQ/IB/AML
IDVFXL="ViPER4AndroidFX-Legacy"; VIPVFXL="v2.5.0.5"; VCIPVFXL="86"
IDVFX="ViPER4AndroidFX"; VIPVFX="v2.7.1.6"; VCIPVFX="2716"
IDVFXP="V4AFXPresets"; VIPVFXP="v1.6"
IDNLS="NLSound"; VIPNLS="v3.2 STABLE"; VCIPNLS="7"
IDAIST="AIST"; VIPAIST="v1.4.30"; VCIPAIST="30"
IDSAQ="systemaudioquality2"; VIPSAQ="2.0"; VCIPSAQ="2"
IDIBS="IncreaseBitrate"; VIPIBS="v1.0"
IDAML="aml"; VIPAML="v4.1"; VCIPAML="56"
#AdBlock/Hosts
IDDAB="disableadblock"; VIPDAB="1.0"; VCIPDAB="1"
IDVAAH="AdAwayHosts"; VIPVAAH="07.04.2022"
IDVSH="SystemlessHostsUnified"; VIPVSH="17.0-220116"; VCIPVSH="170"
IDVOH="Hosts"; VIPVOH="v1.1"
#Net: GPS/WIFI/TTL/DNS/APAUSBTF
IDGPSP="GPSPatcher"; VIPGPSP="1.0"
IDWIFIP="WIFIPatcher"; VIPWIFIP="1.1"
IDTTLF="nfqttl"; VIPTTLF="v2.7"; VCIPTTLF="2"
IDNT="NetworkTweak"; VIPNT="v6"; VCIPNT="6"
IDAPAUSBTF="APAUSBTF"; VIPAPAUSBTF="v1.0"
#Utilities: BB/SELC/CC/MMFR
IDBB="busybox-brutal"; VIPBB="v1.35.0.1"; VCIPBB="13501"
IDSELC="SeLinuxChanger"; VIPSELC="v1.3"
IDCC="CacheCleaner"; VIPCC="v2.4"
IDMMFR="MMFR"; VIPMMFR="v1.0"
#Other: FA/FSFM/UAA/SBU/GASL
IDFPA="FingerprintActions"; VIPFPA="v1.1"
IDFSLFM="FSFM"; VIPFSLFM="v1.2"
#Riru/LSPosed
IDRIRU="riru-core"; VIPRIRU="v26.1.4.r522.8b379cedb5"; VCIPRIRU="522"
IDLSPOSEDR="riru_lsposed"; VIPLSPOSEDR="v1.8.1 (6499)"; VCIPLSPOSEDR="6499"
IDLSPOSEDZ="zygisk_lsposed"; VIPLSPOSEDZ="v1.8.1 (6499)"; VCIPLSPOSEDZ="6499"
#Tweaks: FGS/BP/LED/UGMSD/USGP/VS
IDFGS="ForceGoogleSync"; VIPFGS="v1.1"
IDFEG="ForceGestures"; VIPFEG="v1.1"
IDHAP="EnablingHiddenApiPolicy"; VIPHAP="v1.2"
IDAFUS="AFUSS"; VIPAFUS="v1.1"
IDBPT="BuildPropTweaks"; VIPBPT="v2.1"
IDKL="killlogger"; VIPKL="v1.5"; VCIPKL="6"
IDFMSAAS="ForceMSAASwitcher"; VIPFMSAAS="v1.0"
IDFDHWO="ForceDisableHWOverlays"; VIPFDHWO="v1.1"
IDFDEVADB="ForceDEVADB"; VIPFDEVADB="v1.5"
IDFMTP="ForceMTP"; VIPFMTP="v1.0"
IDSOOOFUIRC="SOOOFUIRC"; VIPSOOOFUIRC="v1.7"
IDFDM="ForceDarkMode"; VIPFDM="v1.0"
IDFDPP="ForceDisablingPlayProtect"; VIPFDPP="v1.0"
IDFI="ForceIdle"; VIPFI="v1.0"
IDCLEDLO="ChargingLEDLightOff"; VIPCLEDLO="v1.2"
IDLEDLA="LEDLightAnimation"; VIPLEDLA="v1.2"
IDUGMSD="UniversalGMSDoze"; VIPUGMSD="v1.8.5"; VCIPUGMSD="185"
IDUSGP="USGP"; VIPUSGP="v1.2"
IDAS="AnimationScale"; VIPAS="v1.1"
IDGPUR="GPURendering"; VIPGPUR="v1.0"
IDVS="VolumeSteps"; VIPVS="v1.2"
} #

{ #Helper Functions

BOOT_DETECTED() {
[ -z $BOOTMODE ] && ps | grep zygote | grep -qv grep && BOOTMODE=true
[ -z $BOOTMODE ] && ps -A 2>/dev/null | grep zygote | grep -qv grep && BOOTMODE=true
[ -z $BOOTMODE ] && BOOTMODE=false
}

APMSGASD() {
MSGSD="•"
MSGDELIMITER="••••••••••••••••••••••••••••••••••••••••••••••••••"
if $BOOTMODE; then
MSGVU="▲ ►"; MSGVD="▼ ►"
else
MSGVU="+ >"; MSGVD="- >"
fi
MSGDI="Install Done"
MSGDRM="Removing Done"
MSGDRP="Replace Done"
MSGDRS="Restore Done"
# MSGDD="Disable Done"
# MSGED="Enable Done"
MSGFI="Found Install"
MSGIIP="(I)"
MSGEFTC="(\)"
MSGNIS="(|)"
MSGNUS="(/)"
MSGEEFTC="(|\)"
MSGEND="(//)"
MSGRI="(R)"
MSGWDI="Community"
MSGFMM="For AOSP/LOS Based & Other Rom"
MSGPMODE="$MSGSD Opens Some Test Items/Patches - Set: U(ser) Or D(ebug)"
MSGKMETHOD="$MSGSD Force Switching Between Old And New \"KeyCheck\" Method - Set: N(ew), O(ld) Or A(lt)"
MSGTKEY="$MSGSD A Second Check Is Turned On For KMETHOD O(ld) - Set: false Or true"
MSGPDESIGN="$MSGSD Changes The \"Design\" Of The Patch - Set: N(ew) Or O(ld)"
MSGLEDCOLOR="$MSGSD This Is The Color Of Your Diode - Set: R(ed), G(reen), B(lue) Or W(hite)"
MSGHFMODE="$MSGSD Adds Tactile Feedback To Patch Selections - Set: Values From 1 To 255 For Weak/Strong Vibration"
MSGHFSMODE="$MSGSD Sets Values From HFMODE Not To duration, But To enable And/Or activate - Set: false Or true"
MSGMCMODE="$MSGSD Enables Or Disables The Choice In TWRP How To Install Via Magisk Or Not With DEBUGMODE - Set: false Or true"
MSGENDMODE="$MSGSD Allows You To Return To The Beginning Of The Patch Without Reselecting If You Missed Something - Set: false Or true"
MSGBIDMODE="$MSGSD Writes The ID Of The Buttons For Alt KMETHOD O(ld) Without A Bind - Default: ButtonIDUP=42 & ButtonIDDOWN=41"
MSGDRMODE="$MSGSD Display Resolution For Boot Animation"
MSGMMUPDC="$MSGSD Adds Version Checking Of Magisk Modules Between Patch And Installed - Set: false Or true"
MSGLEGACYMODE="$MSGSD Includes Showing Old/Obsolete Patches/Features - Set: false Or true"
MSGEVENTSMODE="$MSGSD Adds Events To The Patch - Set: false Or true"
}

IS_MOUNTED() {
grep -q " `readlink -f $1` " /proc/mounts 2>/dev/null
return $?
}

PARTITION_AND_MOUNTS() {
if $BOOTMODE; then
MSGDELIMITER
else
DABP=false
if [ -n "$(cat /proc/cmdline | grep slot_suffix)" ]; then
DABP=true; SYSTEM_MOUNT="/system"; SYSTEM="$SYSTEM_MOUNT/system"; VENDOR="/vendor/vendor"
elif [ -n "$(cat /etc/fstab | grep /system_root)" ]; then
SYSTEM_MOUNT="/system_root"; SYSTEM="$SYSTEM_MOUNT/system"; VENDOR="/vendor"
else
SYSTEM_MOUNT="/system"; SYSTEM="$SYSTEM_MOUNT"; VENDOR="/vendor"
fi
Mounts=""
for p in "$SYSTEM_MOUNT" "$VENDOR"; do
if [ -d "$p" ] && grep -q "$p" "/etc/fstab"; then
Mounts="$Mounts $p"
fi
done
for m in $Mounts; do
if IS_MOUNTED "$m"; then umount "$m"; fi
mount "$m"
done
grep -q "$SYSTEM_MOUNT.*\sro[\s,]" /proc/mounts && mount -o remount,rw $SYSTEM_MOUNT
UIP -d "Mounting$Mounts"
fi
if [ -f /system/system/build.prop ]; then SYSTEM="/system/system"; elif [ -f /system_root/system/build.prop ]; then SYSTEM="/system_root/system"; elif [ -f /system/build.prop ]; then SYSTEM="/system"; fi
if [ $BOOTMODE != true ] && [ -n "$(cat /etc/fstab | grep /vendor)" ]; then :; elif [ $BOOTMODE != true ] && [ -d $SYSTEM/vendor ]; then VENDOR="$SYSTEM/vendor"; else VENDOR="/vendor"; fi
}

IMPORTANT_VARIABLES() {
MODPATH="$NVBASE/modules"; MODPATHUPD="$NVBASE/modules_update"
MIPSV="/system/vendor"
IPSAX="$SYSTEM/apex"; MIPSAX="/system/apex"
IPSB="$SYSTEM/bin"; MIPSB="/system/bin"
IPSXB="$SYSTEM/xbin"; MIPSXB="/system/xbin"
IPSA="$SYSTEM/app"; MIPSA="/system/app"
IPSPA="$SYSTEM/priv-app"; MIPSPA="/system/priv-app"
IPSE="$SYSTEM/etc"; MIPSE="/system/etc"
IPSEID="$IPSE/init.d"; MIPSEID="$MIPSE/init.d"
IPSES="$IPSE/sysconfig"; MIPSES="$MIPSE/sysconfig"
IPSEP="$IPSE/permissions"; MIPSEP="$MIPSE/permissions"
IPSEDP="$IPSE/default-permissions"; MIPSEDP="$MIPSE/default-permissions"
IPSL="$SYSTEM/lib"; MIPSL="/system/lib"
IPSL64="$SYSTEM/lib64"; MIPSL64="/system/lib64"
IPSLM="$IPSL/modules"; MIPSLM="$MIPSL/modules"
IPSLS="$IPSL/soundfx"; MIPSLS="$MIPSL/soundfx"
IPSLS64="$IPSL64/soundfx"; MIPSLS64="$MIPSL64/soundfx"
IPSAD="$SYSTEM/addon.d"; MIPSAD="/system/addon.d"
IPSBP="$SYSTEM/build.prop"; MIPSBP="/system/build.prop"
IPSSP="$SYSTEM/product"; MIPSSP="/system/product"
IPSSPBP="$IPSSP/build.prop"; MIPSSPBP="$MIPSSP/build.prop"
IPSDP="$SYSTEM/default.prop"; MIPSDP="/system/default.prop"
IPSSPA="$IPSSP/app"; MIPSSPA="$MIPSSP/app"
IPSSPPA="$IPSSP/priv-app"; MIPSSPPA="$MIPSSP/priv-app"
IPSSPE="$IPSSP/etc"; MIPSSPE="$MIPSSP/etc"
IPSSPES="$IPSSPE/sysconfig"; MIPSSPES="$MIPSSPE/sysconfig"
IPSSPER="$IPSSPE/res"; MIPSSPER="$MIPSSPE/res"
IPSSPERVC="$IPSSPER/values/charger"; MIPSSPERVC="$MIPSSPER/values/charger"
IPSSPERIC="$IPSSPER/images/charger"; MIPSSPERIC="$MIPSSPER/images/charger"
IPSSPEP="$IPSSPE/permissions"; MIPSSPEP="$MIPSSPE/permissions"
IPSSE="$SYSTEM/system_ext"; MIPSSE="/system/system_ext"
IPSSEA="$IPSSE/app"; MIPSSEA="$MIPSSE/app"
IPSSEPA="$IPSSE/priv-app"; MIPSSEPA="$MIPSSE/priv-app"
IPSFW="$SYSTEM/framework"; MIPSFW="/system/framework"
IPSPO="$IPSSP/overlay"; MIPSPO="$MIPSSP/overlay"
IPSO="$SYSTEM/overlay"; MIPSO="/system/overlay"
IPSUKL="$SYSTEM/usr/keylayout"; MIPSUKL="/system/usr/keylayout"
IPSUSZI="$SYSTEM/usr/share/zoneinfo"; MIPSUSZI="/system/usr/share/zoneinfo"
IPSPM="$IPSSP/media"; MIPSPM="$MIPSSP/media"
IPSPMAU="$IPSPM/audio/ui"; MIPSPMAU="$MIPSPM/audio/ui"
IPSM="$SYSTEM/media"; MIPSM="/system/media"
IPSMAU="$IPSM/audio/ui"; MIPSMAU="$MIPSM/audio/ui"
IPSF="$SYSTEM/fonts"; MIPSF="/system/fonts"
IPSEDF="$IPSE/device_features"; MIPSEDF="$MIPSE/device_features"
IPVBP="$VENDOR/build.prop"; MIPSVBP="$MIPSV/build.prop"
IPVE="$VENDOR/etc"; MIPSVE="$MIPSV/etc"
IPVED="$IPVE/dirac"; MIPSVED="$MIPSVE/dirac"
IPVL="$VENDOR/lib"; MIPSVL="$MIPSV/lib"
IPVL64="$VENDOR/lib64"; MIPSVL64="$MIPSV/lib64"
IPVLRA="$IPVL/rfsa/adsp"; MIPSVLRA="$MIPSVL/rfsa/adsp"
IPVDA="$VENDOR/dsp/adsp"; IPSVDA="$MIPSV/dsp/adsp"
IPVLM="$IPVL/modules"; MIPSVLM="$MIPSVL/modules"
IPVLS="$IPVL/soundfx"; MIPSVLS="$MIPSVL/soundfx"
IPVLS64="$IPVL64/soundfx"; MIPSVLS64="$MIPSVL64/soundfx"
IPVO="$VENDOR/overlay"; MIPSVO="$MIPSV/overlay"
IPVUKL="$VENDOR/usr/keylayout"; MIPSVUKL="/vendor/usr/keylayout"
IPVF="$VENDOR/firmware"; MIPSVF="$MIPSV/firmware"
IPVA="$VENDOR/app"; MIPSVA="$MIPSV/app"
IPVPA="$VENDOR/priv-app"; MIPSVPA="$MIPSV/priv-app"
IPVEDF="$IPVE/device_features"; MIPSVEDF="$MIPSV/device_features"
IPDA="/data/app"
IPDD="/data/data"
IPDS="/data/system"
IPDSDE="/data/system_de"
IPDSU="$IPDS/users/0"
IPDSUDE="/data/user_de"
IPDSNS="$IPDS/netstats"
IPDBBN="/dev/block/by-name"
IPDM="/data/misc"
IPDMDE="/data/misc_de"
IPDRESC="/data/resource-cache"
STORAGE="/data/media/0"
ACXML="$(find $SYSTEM $VENDOR -type f -name "audio_configs*.xml")"
# ACCONF="$(find $SYSTEM $VENDOR -type f -name "audio_configs*.xml")"
# APIIEXML="$(find $SYSTEM $VENDOR -type f -name "audio_platform_info*.xml" -o -name "audio_platform_info_intcodec*.xml" -o -name "audio_platform_info_extcodec*.xml")"
APIXML="$(find $SYSTEM $VENDOR -type f -name "audio_platform_info*.xml")"
AECONFXML="$(find $SYSTEM $VENDOR -type f -name "*audio_effects*.conf" -o -name "*audio_effects*.xml")"
MPATHS="$(find $SYSTEM $VENDOR -type f -name "*mixer_paths*.xml")"
# STPI="$(find $SYSTEM $VENDOR -type f -name "sound_trigger_platform_info*.xml")"
AIPCONF="$(find $SYSTEM $VENDOR -type f -name "*audio_io_policy*.conf" -o -name "*audio_output_policy*.conf")"
AIPCONFA="$(find $SYSTEM $VENDOR -type f -name "audio_io_policy*.conf")"
APCXML="$(find $SYSTEM $VENDOR -type f -name "audio_policy_configuration.xml")"
MCGAX="$(find $SYSTEM $VENDOR -type f -name "*media_codecs_google_c2_audio*.xml" -o -name "*media_codecs_google_audio*.xml" -o -name "*media_codecs_vendor_audio*.xml")"
USBAPCXML="$(find $SYSTEM $VENDOR -type f -name "usb_audio_policy_configuration.xml")"
APCONF="$(find $SYSTEM $VENDOR -type f -name "*audio_*policy*.conf")"
APCONFXML="$(find $SYSTEM $VENDOR -type f -name "*audio_*policy*.conf" -o -name "*audio_*policy*.xml")"
MPXML="$(find $IPVE -type f -name "media_profiles*.xml")"
SNDTRGS="$(find $SYSTEM $VENDOR -type f -name "*sound_trigger_mixer_paths*.xml")"
WCNSQCCFGI="$(find $SYSTEM $VENDOR -type f -name "WCNSS_qcom_cfg.ini")"
GPSCONF="$(find $SYSTEM $VENDOR -type f -name "gps.conf")"
# SFXML="$(find $SYSTEM $VENDOR -type f -name "*SFXML_feature*.xml")"
# MGXML="$(find $SYSTEM $VENDOR -type f -name "*mixer_gains*.xml")"
# ADXML="$(find $SYSTEM $VENDOR -type f -name "*audio_device*.xml")"
# AETXML="$(find $SYSTEM $VENDOR -type f -name "*audio_effects_tune*.xml")"
SDEVFE="$IPSEDF/*.xml"; VDEVFE="$IPVEDF/*.xml"
XMLGLOBAL="$IPDSU/settings_global.xml"; XMLSECURE="$IPDSU/settings_secure.xml"; XMLSYSTEM="$IPDSU/settings_system.xml"
SPGLOBAL="settings put global"; SPSECURE="settings put secure"; SPSYSTEM="settings put system"
SGGLOBAL="settings get global"; SGSECURE="settings get secure"; SGSYSTEM="settings get system"
if [ -f $STORAGE/PATCHMODE* ]; then PATCHMODEFILE="$(find $STORAGE/PATCHMODE*)"; FINDPATCHMODE=true; else for f in $(ls $STORAGE); do if [ -f $STORAGE/$f/PATCHMODE* ]; then PATCHMODEFILE="$(find $STORAGE/$f/PATCHMODE*)"; FINDPATCHMODE=true; break; else FINDPATCHMODE=false; fi; done; fi; if [ $FINDPATCHMODE != true ]; then touch $STORAGE/PATCHMODE.conf; PATCHMODEFILE="$STORAGE/PATCHMODE.conf"; fi
case $PATCHMODEFILE in *sh*) mv $PATCHMODEFILE $STORAGE/PATCHMODE.conf; PATCHMODEFILE="$STORAGE/PATCHMODE.conf";; esac
PMODE="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "PMODE")"
HFDURATION="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "HFMODE")"
HFSWAPMODE="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "HFSMODE")"
PDESIGN="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "PDESIGN")"
LEDCOLOR="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "LEDCOLOR")"
KMETHOD="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "KMETHOD")"
TKEY="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "TKEY")"
MCMODE="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "MCMODE")"
ENDMODE="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "ENDMODE")"
BUTTONIDUP="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "ButtonIDUP")"
BUTTONIDDOWN="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "ButtonIDDOWN")"
DRMODE="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "DRMODE")"
MMUPDC="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "MMUPDC")"
LEGACYMODE="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "LEGACYMODE")"
EVENTSMODE="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "EVENTSMODE")"
PROPFILES="$IPSBP $IPVBP"
DMYHMS="$( date +"%d-%m-%Y-%H:%M:%S" )"; TIMED="$( date +"%d" )"; TIMEM="$( date +"%m" )"; TIMEY="$( date +"%Y" )"
GBSTEXML="$IPDD/com.google.android.inputmethod.latin/shared_prefs/flag_value.xml"
SYSCL="/sys/class/leds"
LEDLSC="chmod 755 /sys/class/*/*/* /sys/module/*/*/*"
LEDMBRED="$SYSCL/red/max_brightness"
LEDMBGREEN="$SYSCL/green/max_brightness"
LEDMBBLUE="$SYSCL/blue/max_brightness"
LEDMBWHITE="$SYSCL/white/max_brightness"
LEDRED="$SYSCL/red/brightness"
LEDGREEN="$SYSCL/green/brightness"
LEDBLUE="$SYSCL/blue/brightness"
LEDWHITE="$SYSCL/white/brightness"
FLASHLIGHT="$SYSCL/flashlight/brightness"
BUTTONBACKLIGHT="$SYSCL/button-backlight/brightness"
if [ -d $IPSPO ] && [ -d $IPVO ]; then IPPSO="$IPSPO"; MIPPSO="$MIPSPO"; IPPVO="$IPVO"; MIPPVO="$MIPSVO"; elif [ -d $IPSPO ]; then IPPSO="$IPSPO"; MIPPSO="$MIPSPO"; IPPVO="$IPSPO"; MIPPVO="$MIPSPO"; elif [ -d $IPSO ]; then IPPSO="$IPSO"; MIPPSO="$MIPSO"; IPPVO="$IPSO"; MIPPVO="$MIPSO"; fi
if [ -d $IPSPMAU ]; then IPPMU="$IPSPMAU"; MIPPMU="$MIPSPMAU"; elif [ -d $IPSMAU ]; then IPPMU="$IPSMAU"; MIPPMU="$MIPSMAU"; fi
if [ -d $IPSPM ]; then IPPM="$IPSPM"; MIPPM="$MIPSPM"; elif [ -d $IPSM ]; then IPPM="$IPSM"; MIPPM="$MIPSM"; fi
for f in Fox TWRP SHRP PBRP; do if [ -d $STORAGE/$f ]; then PLOGS="$STORAGE/$f/AIOLogs"; FPLOGS=true; break; else FPLOGS=false; fi; done; if [ $FPLOGS != true ]; then PLOGS="$STORAGE/AIOLogs"; fi
if [ ! -d $IPSXB ] && [ $BOOTMODE != true ]; then mkdir -p $IPSXB; IPPSXB=$IPSXB; IPPSXBM=$MIPSXB; BINPATH=xbin; elif [ ! -d $IPSXB ] && $BOOTMODE; then IPPSXB=$IPSB; IPPSXBM=$MIPSB; BINPATH=bin; else IPPSXB=$IPSXB; IPPSXBM=$MIPSXB; BINPATH=xbin; fi
if $BOOTMODE; then MAGISKMP=$(find `magisk --path` -type d -name "mirror" | head -n 1); else MAGISKMP=""; fi
}

APP_LIST() {

STOCKLISTNOMIUI="
Calculator
Calendar
Contacts
DeskClock
FileExplorer
FileExplorerGlobal
MiuiCamera
Mms
"

STOCKLIST="
404Clock
AEXPapers
ANGLE
APlayer
AbleMusic
Abstruct
AccuweatherPhone2015_MASS_HD_SWS
AdAway
Aegis
AirDots
AirDotsPlugin
AnalyticsCore
AncientClockWidget
AndroidAutoPrebuilt
AndroidAutoStub
AndroidAutoStubPrebuilt
AndroidForWork
AudioFX
BatteryTile
BookmarkProvider
Books
BooksPhone
BooksStub
Browser
Browser2
BrowserXposed
CMFileManager
CalculatorGoogle
CalculatorGooglePrebuilt
CalendarGoogle
CalendarGooglePrebuilt
Camera2
CameraGo
CarHomeGoogle
CarrierServices
CatchLog
CellBroadcastApp
ChocoEUKor
Chrome
Chrome-Stub
ChromeCustomizations
ClockPackage_MASS_Le
CloudPrint
CloudPrint2
ColtPapers
CtsShimPrivPrebuilt
DeskClockGoogle
DevicePersonalizationPrebuiltPixel2020
DevicePersonalizationPrebuiltPixel2021
DevicePersonalizationPrebuiltPixel4
DevicePolicyPrebuilt
DiagMonAgent
DiagnosticsToolPrebuilt
Dialer
DigitalClockEasy_L
DigitalClock_L
DotFEWallpapers
DotWallpapers
Drive
DualClockDigital_L
DuckDuckGo
Duo
EasterEgg
EasymodeContactsWidget
Eleven
Email
EmergencyInfo
EngineerMode
Etar
ExactCalculator
Excel_SamsungStub
Exchange2
FBAppManager_NS
FBInstaller_NS
FDroid
FDroidPrivilegedExtension
FM
FM2
FMRadio
FM_TEST
Facebook_stub
FilesPrebuilt
Firewall
FitnessPrebuilt
Focus
FotaAgent
GCS
GCam
GCamGOPrebuilt
GCamGo
Galaxy4
GalaxyApps
Gallery
Gallery2
GalleryGo
GalleryGoPrebuilt
GalleryGoogle
GalleryPrebuilt
GameCenter
GameCenterGlobal
Gboard
Gcam
GenieWidget
GlobalTrendNews
GlobalUserGuide
Gmail
Gmail2
GoogleCalendar
GoogleCamera
GoogleCameraGo
GoogleCameraLegacy
GoogleCloudPrint
GoogleContacts
GoogleDialer
GoogleEars
GoogleEarth
GoogleFeedback
GoogleHangouts
GoogleHindiIME
GoogleHome
GoogleJapaneseInput
GoogleKeep
GoogleKeyboard
GoogleLatinIme
GoogleMusic
GoogleNow
GoogleNowVoiceSearch
GooglePinyinIME
GooglePlus
GooglePrintRecommendationService
GoogleTTS
GoogleVrCore
GrapheneCamera
HTMLViewer
Hangouts
HangoutsDialer
Health
HelpRtcPrebuilt
HoloSpiralWallpaper
HotwordEnrollment
HotwordEnrollmentOKGoogle*
HotwordEnrollmentXGoogle*
HybridAccessory
HybridPlatform
HybridRadio2015
HyconWallpapers
IdMipay
InMipay
Jelly
Joyose
KLMSAgent
Keep
KimciRecorder
KoreanIME
KoreanIMEStub
LPaper-v1.0.0-release
LPaper-v2.0-release
LatinIME
LatinIMEGooglePrebuild
LatinIMEGooglePrebuilt
LatinImeDictionaryPack
LatinImeGoogle
LatinImeGoogleWithLatinIME
LatinImeTutorial
Lawnfeed
Leaflet
Lens
MSA-Global
MSSkype_stub
MaestroPrebuilt
Maps
MatLog
MatchmakerPrebuilt
MatchmakerPrebuiltPixel4
Megogo
Megogo_vender
Messages
Messaging
MiBrowser
MiBrowserGlobal
MiDrive
MiDrop
MiGalleryLockscreen
MiHealth
MiMover
MiMusic
MiPicks
MiService
MiShare
MiVideo
Mimoji
MiuiBugReport
MiuiCompass
MiuiScanner
MiuiSuperMarket
MiuiVideo
MiuiVideoGlobal
MiuiVideoPlayer
MozillaNlpBackend
Music
Music2
MusicFX
MusicPlayerGO
MyVerizonServices
NeMate
Netflix_activation
NewsWeather
Newsstand
NewsstandStub
NextPay
NexusLauncherIcons
NexusWallpapersStubPrebuilt2017
NexusWallpapersStubPrebuilt2019
NezukoMusic
NoiseField
Notes
NovaBugreportWrapper
ONESettings
OPFileManager
OPIconpackOnePlus
OPIconpackOxygen
OPIconpackRound
OPScreenRecord
OPScreenRecorder
OPWeather
OPWidget
OmniSwitch
OneNote
OneOSLogcat
OneOSSTATS
OneOSSpace
Opera
OperaMax
OperaMax_PreinstallProvider
Opera_data
Ornament
Papers
PartnerBookmarksProvider
PaymentService
PersonalAssistant
PersonalAssistantGlobal
PhaseBeam
Phonograph
PhotoTable
Photos
PicoTts
PixelLiveWallpaperPrebuilt
PixelWallpapers2020
PixelWallpapers2021
PlayGames
PowerPoint_SamsungStub
PrebuiltBugle
PrebuiltBugleStub
PrebuiltDeskClockGoogle
PrebuiltEmailGoogle
PrebuiltExchange3Google
PrebuiltGmail
PrebuiltGoogleTelemetryTvp
PulseMusic
PureBrowser
QPGallery
QuickAccessWallet
QuickSearchBox
RRWallpapers
Recorder
RecorderPrebuilt
RetroMusicPlayer
RetroMusicPlayerPrebuilt
RevengeMessages
RevengeOSCalculator
RockClient
RomStats
RoseEUKor
SBrowser_3.0.38_MASS_LATEST
SOAgent
SPPPushClient_Prod
SPenSdk3
SPlannerWidget_Essential
SPlanner_Essential
SafetyHubPrebuilt
SamsungIMEv2
SamsungSans
SamsungTTS
ScribePrebuilt
SecCalculator2_L
SecEmailComposer-mass
SecEmailProvider-mass
SecEmailSync-mass
SecEmailUI-mass
SecEmailWidget-mass
SecHTMLViewer
SecMyFiles2015_ESS
SecSetupWizard2015
SecurityHubPrebuilt
SecurityLogAgent
ShiftPapers
Simple-Calendar
SimpleCalendar
SimpleGallery
SimpleGalleryPro
SmartManagerSDK
SmartManager_OLEDHD
Snap
SnapdragonMusic
SoundAmplifierPrebuilt
SprdQuickSearchBox
StatusBarLyricExt
Street
Superiorwalls
Talk
TeamOctavi
Terminal
TipsPrebuilt
TouchAssistant
Traceur
Translate
TranslatePrebuilt
Turbo
TurboAdapter
TurboPrebuilt
Tycho
UPTsmService
Velvet
Velvet_update
Via
ViaBrowser
Videos
VinylMusicPlayer
VoiceSearch
VoiceSearchStub
Wallet
Wallpaper
WallpapersBReel2017
WallpapersBReel2019
WallpapersBReel2020
WallpapersBReel2020a
WarpShare
WaveWidget
WeatherDaemon
WeatherTile
WebManual
Wellbeing
WellbeingPrebuilt
Word_SamsungStub
XiaomiKeyboard
YGPS
YellowPage
YouDaoEngine
YouTube
YouTubeMusicPrebuilt
YouTubeVanced
ZVideoMass
arcore
com.google.ar.core
crDroidMusic
facebook-appmanager
facebook-installer
facebook-services
greenguard
iWnnIME
iWnnIME_Kbd_White
mab
madCamera
madLauncher
madWallpapers
messaging
stats
talkback
"

EXPERIMENTALLIST="
AmbientSensePrebuilt
AndroidMigratePrebuilt
AndroidPlatformServices
BackupRestoreConfirmation
BasicDreams
BrowserProviderProxy
BuiltInPrintService
CalendarProvider
CellBroadcastReceiver
ChromeBookmarksSyncAdapter
ConfigUpdater
ConnMO
Currents
DMAgent
EditorsDocs
EditorsDocsStub
EditorsSheets
EditorsSheetsStub
EditorsSlides
EditorsSlidesStub
EuiccGoogle
ExchangeServices
FOTAKill
FaceLock
Finsky
GmsCore
GmsCoreSetupPrebuilt
GmsCore_update
GoogleBackupTransport
GoogleCalendarSyncAdapter
GoogleContactsSyncAdapter
GoogleLoginService
GoogleOneTimeInitializer
GooglePartnerSetup
GooglePlay
GoogleQuickSearchBox
GoogleSearch
GoogleServicesFramework
GoogleZhuyinIME
LineageSetupWizard
LocationHistoryPrebuilt
Magazines
MarketUpdater
Markup
MarkupGoogle
MediaUploader
NetworkLocation
OccamQuickOffice
OneTimeInitializer
Phonesky
PlayAutoInstallConfig
PlayStore
PlusOne
PrebuiltGmsCore
PrebuiltGmsCorePix
PrebuiltGmsCoreQt
PrebuiltGmsCoreRvc
PrebuiltKeep
PrebuiltKeepStub
PrebuiltNewsWeather
PrintSpooler
QuickOffice
SPrintSpoolerLMR1
SamsungBilling
SettingsGoogle
SettingsIntelligenceGooglePrebuilt
SoundPicker
SoundPickerPrebuilt
Stk
Stk2
StorageManagerGoogle
Tag
TagGoogle
TrichromeLibrary
TrichromeLibrary-Stub
VZWAPNLib
Vending
WallpaperPickerGoogle
WallpaperPickerGooglePrebuilt
WallpaperPickerGoogleRelease
WallpaperPicker_Zero2
WebView
WebViewGoogle
WebViewGoogle-Stub
WebViewStub
"

LAUNCHERLIST="
AsusLauncher
AsusLauncherDev
EasyLauncher2_Zero
EnigmaLauncher
Launcher3QuickStep
Lawnchair
NeLauncher
NexusLauncher
NexusLauncherPrebuilt
NexusLauncherRelease
OPLauncher
OPLauncher2
OPLauncherReleases
ParanoidQuickStep
PixelLauncher
RevengeLauncherQuickStep
ShadyLauncher
ShadyQuickStep
TWLauncherESS
Trebuchet
TrebuchetQuickStep
"

MMLAUNCHERLIST="
$IDSL
Systemless_AsusLauncher
$IDSMLR
Systemless_OPLauncher
$Systemless_OneUIHome
Systemless_PixelLauncher
$IDSSL
MotoLauncher
OneUIHome
Systemless_Lawnchair_Plus
Systemless_PixelLauncherX
com.pixelated.launcher
quickstepswitcher
quickswitch_terminal
"
}

MIUI_CHECKER() {
if [ -d /data/miui ] || $(grep "ro.miui.ui.version.*|ro.product.brand=Xiaomi*" $PROPFILES) || grep "ro.miui.build.region" $IPSBP || grep "ro.miui.region" $IPSBP || grep "ro.miui.ui.version*" $IPSBP || grep "ro.miui.ui.version.name*" $IPSBP; then MIUI=true; else MIUI=false; fi
}

BB_CHECKER() {
if [ -f $IPSB/busybox ]; then
BUSYBOX=/bin; FBUSYBOX=true
elif [ -f $IPSXB/busybox ]; then
BUSYBOX=/xbin; FBUSYBOX=true
elif [ -d $MODPATH/$IDBB ] || [ -d $MODPATHUPD/$IDBB ] || [ -d $MODPATH/busybox-ndk ] || [ -d $MODPATHUPD/busybox-ndk ]; then
FBUSYBOX=true
else
FBUSYBOX=false
fi
}

ARCH_CHECKER() {
DARCH="$(GREP_PROP "ro.product.cpu.abi")"
case "$DARCH" in
*arm64*) arch="arm64"; libarch="lib64";;
*armeabi*) arch="arm"; libarch="lib";;
*) arch="unknown"; UIP -d "Warning! $arch Not Supported/Found!";;
esac
AAPT="$AADDONS/aapt-$arch"
XMLSTARLET="$AADDONS/xmlstarlet-$arch"
FKEYCHECK="$ADDONS/keycheck-$arch"
}

SELINUX_CHECKER() {
if grep -q "1" /sys/fs/selinux/enforce || [ $BOOTMODE != true ]; then SELINUX=true; SELINUXP=false; SELINUXS='Enforcing'; SELINUXSN='1'; elif grep -q "0" /sys/fs/selinux/enforce; then SELINUX=false; SELINUXP=true; SELINUXS='Permissive'; SELINUXSN='0'; fi
}

SOC_CHECKER() {
SD617=$(grep "ro.board.platform=msm8952" $PROPFILES)
SD625=$(grep "ro.board.platform=msm8953" $PROPFILES)
SD660=$(grep "ro.board.platform=sdm660" $PROPFILES)
SD662=$(grep "ro.board.platform=bengal" $PROPFILES)
SD665=$(grep "ro.board.platform=trinket" $PROPFILES)
SD670=$(grep "ro.board.platform=sdm670" $PROPFILES)
SD690=$(grep "ro.board.platform=lito" $PROPFILES)
SD710=$(grep "ro.board.platform=sdm710" $PROPFILES)
SD720G=$(grep "ro.board.platform=atoll" $PROPFILES)
SD730=$(grep "ro.board.platform=sm6150" $PROPFILES)
SD730G=$(grep "ro.board.platform=sm6150" $PROPFILES)
SD765G=$(grep "ro.board.platform=lito" $PROPFILES)
SD810=$(grep "ro.board.platform=msm8994" $PROPFILES)
SD820=$(grep "ro.board.platform=msm8996" $PROPFILES)
SD835=$(grep "ro.board.platform=msm8998" $PROPFILES)
SD845=$(grep "ro.board.platform=sdm845" $PROPFILES)
SD855=$(grep "ro.board.platform=msmnile" $PROPFILES)
SD865=$(grep "ro.board.platform=kona" $PROPFILES)
SD888=$(grep "ro.board.platform=lahaina" $PROPFILES)
SM8450=$(grep "ro.board.platform=taro" $PROPFILES)
if [ "$SD662" ] || [ "$SD665" ] || [ "$SD670" ] || [ "$SD690" ] || [ "$SD710" ] || [ "$SD720G" ] || [ "$SD730" ] || [ "$SD730G" ] || [ "$SD765G" ] || [ "$SD820" ] || [ "$SD835" ] || [ "$SD845" ] || [ "$SD855" ] || [ "$SD865" ] || [ "$SD888" ] || [ "$SM8450" ]; then HIFI=true; else HIFI=false; fi
SNAPSOC=false; MTKSOC=false; EXYSOC=false; KIRSOC=false
if [ "$(grep -E "ro.board.platform=apq.*|ro.board.platform=msm.*|ro.board.platform=sdm.*" $PROPFILES)" ] || [ "$(grep "ro.board.platform=msm*" $PROPFILES)" ] || [ "$(grep "ro.board.platform=sdm*" $PROPFILES)" ] || [ "$SD617" ] || [ "$SD625" ] || [ "$SD660" ] || [ "$SD662" ] || [ "$SD665" ] || [ "$SD670" ] || [ "$SD690" ] || [ "$SD710" ] || [ "$SD720G" ] || [ "$SD730" ] || [ "$SD730G" ] || [ "$SD765G" ] || [ "$SD810" ] || [ "$SD820" ] || [ "$SD835" ] || [ "$SD845" ] || [ "$SD855" ] || [ "$SD865" ] || [ "$SD888" ]; then
SNAPSOC=true
elif "$(grep -E "ro.mediatek.version.*|ro.hardware=mt*" $PROPFILES)" ] ||  [ "$(grep "ro.board.platform=mt*" $PROPFILES)" ] || [ "$(grep "ro.board.platform=MT*" $PROPFILES)" ] || [ "$(grep "Build.BRAND=MTK*" $PROPFILES)" ]; then
MTKSOC=true
elif "$(grep -E "ro.chipname=exynos*|ro.board.platform=exynos*" $PROPFILES)"; then
EXYSOC=true
elif "$(grep -E "ro.board.platform=hi.*|ro.board.platform=kirin*" $PROPFILES)"; then
KIRSOC=true
fi
}

GAPPS_CHECKER() {
FINDGAPPS=false
for f in "$IPSA" "$IPSPA" "$IPSSPA" "$IPSSPPA" "$IPSSEA" "$IPSSEPA"; do
for gms in "GmsCore" "PrebuiltGmsCore" "GoogleServicesFramework" "Phonesky"; do
if [ -d $f/$gms ]; then FINDGAPPS=true; break 2; fi
done
done
if [ $FINDGAPPS != true ]; then
for gms in "*bitgapps*.sh" "*flame*.sh" "*nikgapps*.sh" "*gapps*.sh"; do
if find $IPSAD -type f -name $gms >/dev/null; then FINDGAPPS=true; break; fi
done
fi
}

PATCHMODE() {
case "$PMODE" in
D) DEBUGMODE=true; TESTMODE=false; MSGPMODE=", Debug Mode";;
T) TESTMODE=true; DEBUGMODE=true; MSGPMODE=", Test Mode";;
U) MSGPMODE=", User Mode"; DEBUGMODE=false; TESTMODE=false;;
*) echo -e "$MSGPMODE\nPMODE=D" >> $PATCHMODEFILE; MSGPMODE=", Debug Mode"; DEBUGMODE=true; TESTMODE=false;;
esac
case "$MCMODE" in
"true") MCMODE=true;;
"false") MCMODE=false;;
*) echo -e "$MSGMCMODE\nMCMODE=false" >> $PATCHMODEFILE; MCMODE=false;;
esac
if find /sys/class -name leds >/dev/null; then
LEDPATH="$(find /sys/class -name leds)"
case "$LEDCOLOR" in
R) LEDCOLOR=red;;
G) LEDCOLOR=green;;
B) LEDCOLOR=blue;;
W) LEDCOLOR=white;;
"false") BLINKMODE=false;;
*) BLINKMODE=false; echo -e "$MSGLEDCOLOR\nLEDCOLOR=false" >> $PATCHMODEFILE;;
esac
if [ -f $LEDPATH/$LEDCOLOR/blink ]; then echo -n 1 > $LEDPATH/$LEDCOLOR/blink; BLINKMODE=true; fi
fi
case "$HFDURATION" in
"false") HFMODE=false;;
[0-255]*) HFMODE=true; HFPATH="$(find /sys/class -name vibrator)"; if [ -f $HFPATH/duration ]; then echo -n $HFDURATION > $HFPATH/duration; fi; if [ -f $HFPATH/activate ]; then HFFPATH=$HFPATH/activate; elif [ -f $HFPATH/enable ]; then HFFPATH=$HFPATH/enable; fi;;
*) HFMODE=false; echo -e "$MSGHFMODE\nHFMODE=false" >> $PATCHMODEFILE;;
esac
case "$HFSWAPMODE" in
"true") HFSWAPMODE=true;;
"false") HFSWAPMODE=false;;
*) echo -e "$MSGHFSMODE\nHFSMODE=false" >> $PATCHMODEFILE; HFSWAPMODE=false;;
esac
case "$PDESIGN" in
N) PDESIGN=true;;
O) PDESIGN=false;;
*) PDESIGN=true; echo -e "$MSGPDESIGN\nPDESIGN=N" >> $PATCHMODEFILE;;
esac
case "$KMETHOD" in
N) AKOLD=false; KNEW=true; KOLD=false;;
O) AKOLD=false; KNEW=false; KOLD=true;;
A) AKOLD=true; KNEW=false; KOLD=false;;
"false") AKOLD=false; KOLD=false; KNEW=false;;
*) echo -e "$MSGKMETHOD\nKMETHOD=false" >> $PATCHMODEFILE; AKOLD=false; KOLD=false; KNEW=false;;
esac
case "$TKEY" in
"true") TKEYCHECK=true;;
"false") TKEYCHECK=false;;
*) TKEYCHECK=false; echo -e "$MSGTKEY\nTKEY=false" >> $PATCHMODEFILE;;
esac
case "$ENDMODE" in
"true") ENDMODE=true;;
"false") ENDMODE=false;;
*) ENDMODE=true; echo -e "$MSGENDMODE\nENDMODE=true" >> $PATCHMODEFILE;;
esac
if grep ButtonIDUP $PATCHMODEFILE >/dev/null; then true; else echo -e "$MSGBIDMODE\nButtonIDUP=#UP\nButtonIDDOWN=#DOWN" >> $PATCHMODEFILE; fi
# case "$DRMODE" in
# "true") DRMODE=true; DISPLAYRESOLUTION="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "DisplayResolution")";;
# "false") DRMODE=false;;
# *) if $BOOTMODE; then echo -e "$MSGDRMODE\nDRMODE=true\n$(wm size)" >> $PATCHMODEFILE; sed -i 's/Physical size: /DisplayResolution=/g' $PATCHMODEFILE; DISPLAYRESOLUTION="$(GET_FILE_PROP -pm "$PATCHMODEFILE" "DisplayResolution")"; DRMODE=true; else DRMODE=false; echo -e "$MSGDRMODE\nDRMODE=false" >> $PATCHMODEFILE; fi;;
# esac
case "$MMUPDC" in
"true") MMUPDC=true;;
"false") MMUPDC=false;;
*) MMUPDC=true; echo -e "$MSGMMUPDC\nMMUPDC=true" >> $PATCHMODEFILE;;
esac
case "$LEGACYMODE" in
"true") LEGACYMODE=true;;
"false") LEGACYMODE=false;;
*) LEGACYMODE=false; echo -e "$MSGLEGACYMODE\nLEGACYMODE=false" >> $PATCHMODEFILE;;
esac
case "$EVENTSMODE" in
"true") EVENTSMODE=true;;
"false") EVENTSMODE=false;;
*) EVENTSMODE=true; echo -e "$MSGEVENTSMODE\nEVENTSMODE=true" >> $PATCHMODEFILE;;
esac
if $EVENTSMODE; then
if [ $TIMEM == 10 ]; then
for t in $(seq 20 1 31); do
if [ $TIMED == $t ]; then
if $BOOTMODE; then
UIP "Happy Halloween 🎃!"
else
UIP "Happy Halloween!"
fi
fi
done
elif [ $TIMEM == 12 ]; then
for t in $(seq 20 1 31); do
if [ $TIMED == $t ]; then
UIP "Holiday Greetings!"
fi
done
elif [ $TIMEM == 01 ]; then
for t in 01; do
if [ $TIMED == $t ]; then
if $BOOTMODE; then
UIP "Happy New Year ❄!"
else
UIP "Happy New Year!"
fi
fi
done
for t in 02 03 04 05 06 07 08 09 10; do
if [ $TIMED == $t ]; then
UIP "Happy Holidays!"
fi
done
fi
fi
}

AIOPFMD() {
if $DEBUGMODE || $TESTMODE; then mkdir -p $PLOGS/RECOVERY $PLOGS/MM; fi; [ -d $TMPDIR ] && rm -rf $TMPDIR; mkdir -p $TMPDIR; [ -d $ALTTMPDIR ] && rm -rf $ALTTMPDIR; mkdir -p $ALTTMPDIR
UIP "Copy AIOPFMD To TMPDIR$MSGPMODE"
unzip -oq $ZIPFILE BB.zip Addons.tar.xz -d $ALTTMPDIR 2>/dev/null
unzip -oq $BB.zip -d $ALTTMPDIR 2>/dev/null; rm -f $BB.zip
chmod -R 777 $TMPDIR $ALTTMPDIR
$BB/busybox-$arch --install -s $BB
$UNTARXZ -xf $ADDONS.tar.xz -C $ALTTMPDIR; rm -f $ADDONS.tar.xz
AIOPFMDPH="$IPSB/aiopfmdph"; [ $BOOTMODE != true ] && mkdir -p $AIOPFMDPH
UZTPN "AltAddons" &
}

CHECK_AVERSION() {
ASDK="$(GREP_PROP "ro.build.version.sdk")"
AVERSION="$(GREP_PROP "ro.build.version.release")"
ATEN=false; AELEVEN=false; ATWELVE=false; ATWELVEL=false
if [ "$ASDK" = "29" ]; then ATEN=true; ACNV="Q"
elif [ "$ASDK" = "30" ]; then AELEVEN=true; ACNV="R"
elif [ "$ASDK" = "31" ]; then UIP -d "Warning! SDK $ASDK Is Not Fully Support!"; ATWELVE=true; ACNV="S"
elif [ "$ASDK" = "32" ]; then UIP -d "Warning! SDK $ASDK Is Not Fully Support!"; ATWELVEL=true; ACNV="SL"
elif [ "$ASDK" = "33" ]; then UIP -d "Warning! SDK $ASDK Is Not Fully Support!"; ATHIRTEEN=true; ACNV="T"
fi
case $ASDK in
"19");; "21");; "22");; "23");; "24");; "25");; "26");; "27");; "28");; "29");; "30");; "31");; "32");; "33");; *) UIP -d "Warning! SDK Not Supported/Found!";;
esac
DYNLIB=true
[ $ASDK -lt 26 ] && DYNLIB=false
[ -z $DYNLIB ] && DYNLIB=false
if $DYNLIB; then DYNLIBPATCH="\/vendor"; else DYNLIBPATCH="\/system"; fi
}

CHECK_DEVICE() {
case $1 in
-x) MI8=$(grep -E "ro.product.vendor.device=dipper.*" $PROPFILES)
MI8P=$(grep -E "ro.product.vendor.device=equuleus.*" $PROPFILES)
MI9=$(grep -E "ro.product.vendor.name=cepheus.*|ro.product.name=cepheus.*" $PROPFILES)
MI9P=$(grep -E "ro.product.vendor.device=crux.*" $PROPFILES)
MIA2=$(grep -E "ro.product.vendor.device=jasmine.*" $PROPFILES)
POCOX3=$(grep -E "ro.product.vendor.device=surya.*" $PROPFILES)
RN5PRO=$(grep -E "ro.product.vendor.device=whyred.*" $PROPFILES);;
*) local PROPDEVICE=$(echo "$1" | tr '[:upper:]' '[:lower:]')
for i in $SYSTEM $VENDOR $IPSSP; do
if [ -f $i/build.prop ]; then
for j in "ro.product.device" "ro.build.product" "ro.product.vendor.device" "ro.vendor.product.device"; do
[ "$(sed -n "s/^$j=//p" $i/build.prop 2>/dev/null | head -n 1 | tr '[:upper:]' '[:lower:]')" == "$PROPDEVICE" ] && return 0
done
fi
done
return 1;;
esac
}

MAGISK_CHECKER() {
ZYGISK=false
if [ -d /data/magisk ] && [ -f /data/magisk/util_functions.sh ]; then
MAGISKFIRSTTIME=true; FINDMAGISK=true; MAGISK=true
MAGISKVC="$(GET_FILE_PROP "/data/magisk/util_functions.sh" "MAGISK_VER_CODE")"
elif [ -d $NVBASE/magisk ] && [ -f $NVBASE/magisk/util_functions.sh ]; then
MAGISKFIRSTTIME=false; FINDMAGISK=true; MAGISK=true
MAGISKVC="$(GET_FILE_PROP "$NVBASE/magisk/util_functions.sh" "MAGISK_VER_CODE")"
else
MAGISKFIRSTTIME=false; FINDMAGISK=false; MAGISK=false
fi
if $FINDMAGISK; then if [ $MAGISKVC -lt 23000 ]; then UIP "Found Old Magisk, Please Install Magisk v24.3+ (24300+)!"; elif [ $MAGISKVC -ge 23010 ]; then ZYGISK=true; fi; fi
if $FINDMAGISK && [ $BOOTMODE != true ] && $DEBUGMODE && $MCMODE; then
MSGDELIMITER
UIP "Found Magisk, Install Everything (M)?" "$MSGVU Yes $MSGRI" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then MAGISK=true; else MAGISK=false; fi
fi
if $MAGISK; then
mkdir -p $MODPATH $POSTFSDATAD $SERVICED
chmod 755 $MODPATH $POSTFSDATAD $SERVICED
IAMM="(M)"
else
IAMM=""
fi
}

HFBMODE() {
if $HFMODE; then if $HFSWAPMODE; then echo -n $HFDURATION > $HFFPATH; else echo -n 1 > $HFFPATH; fi; fi
}

UNMOUNT() {
if [ $BOOTMODE != true ]; then
UIP "UnMounting$Mounts"
for m in $Mounts; do
case $m in
$SYSTEM_MOUNT) if $DABP; then mount -o ro $SYSTEM_MOUNT; else umount $SYSTEM_MOUNT; fi;;
*) if IS_MOUNTED "$m"; then umount "$m"; fi;;
esac
done
fi
}

END() {
MSGDELIMITER
if $ENDMODE; then
UIP "It's Time To Choose:" "$MSGVU To The Beginning $MSGEFTC" "$MSGVD Exit $MSGEND"
if $KEYFUNCTION; then cd $TMPDIR; ls | grep -v AltAddons | xargs rm -rf; PRESETS; END; else ENDMODE=false; END; fi
else
UNMOUNT
if $DEBUGMODE; then
UIP "Clear TMPDIR, Copy Logs & Exit"; MSGDELIMITER
[ -d $PLOGS/TWRP ] && mv $PLOGS/TWRP $PLOGS/RECOVERY && rm -rf $PLOGS/TWRP; [ -d $PLOGS/RECOVERY/TWRP ] && rm -rf $PLOGS/RECOVERY/TWRP
if [ $BOOTMODE != true ]; then mkdir -p $PLOGS/RECOVERY/$( date +"%Y-%m" ); cp -f /tmp/recovery.log $PLOGS/RECOVERY/$( date +"%Y-%m" )/AIORecovery-$( date +"%d-%H:%M:%S" ).log; fi
if $BOOTMODE; then input tap 1040 140; fi
mkdir -p $PLOGS/MM/$( date +"%Y-%m" )
find $STORAGE/Download/ -type f -name 'magisk_install_log*.log' -exec mv {} $PLOGS/MM/$( date +"%Y-%m" )/AIOMagisk-$( date +"%d-%H:%M:%S" ).log \;
else
UIP "Clear TMPDIR & Exit"; MSGDELIMITER
fi
if $BLINKMODE; then echo -n 0 > $LEDPATH/$LEDCOLOR/blink; fi
rm -rf $TMPDIR $ALTTMPDIR && exit 0
fi
}

ui_print() {
$BOOTMODE && echo "$MSGSD $1" || echo -e "ui_print $MSGSD $1\nui_print" >> /proc/self/fd/$OUTFD
}

UIP() {
case $1 in
-d) MSGDELIMITER; for uip in "$2" "$3" "$4" "$5" "$6" "$7" "$8" "$9" "$10" "$11" ; do if [ "$uip" ]; then ui_print "$uip"; else break; fi; done;;
*) for uip in "$1" "$2" "$3" "$4" "$5" "$6" "$7" "$8" "$9" "$10"; do if [ "$uip" ]; then ui_print "$uip"; else break; fi; done;;
esac
}

MSGDELIMITER() {
$BOOTMODE && echo "$MSGDELIMITER" || echo -e "ui_print $MSGDELIMITER\nui_print" >> /proc/self/fd/$OUTFD
}

UNIVERSALUNZIP() {
cd $TMPDIR/$UPN && $ZIPPACKER -r -0 $TMPDIR/$UPN * >/dev/null
OFPATHZIP="$TMPDIR/$UPN"
mkdir -p $OFPATHZIP
$UNZIP -oq "$ZIPFILE" '$OFPATHZIP.zip' -d "$OFPATHZIP"
$UNZIP -oq "$OFPATHZIP.zip" 'META-INF/com/google/android/update-binary' -d "$OFPATHZIP"
chmod 755 "$OFPATHZIP/META-INF/com/google/android/update-binary"
sh $OFPATHZIP/META-INF/com/google/android/update-binary \
"$IN" "$OUTFD" "$OFPATHZIP.zip"
rm -rf $OFPATHZIP*
if [ $BOOTMODE != true ]; then UIP -d "ReMounting$Mounts"; PARTITION_AND_MOUNTS; fi
}

UCSA() {
case $1 in
-eno) UIP -d "$2" "$MSGVU Yes $MSGEEFTC" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then $3; else $4; fi;;
-ent) UIP -d "$2" "$MSGVU Yes $MSGEFTC" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then $3; else $4; fi;;
-s) UIP -d "$2" "$MSGVU Yes $3" "$MSGVD No $4"; if $KEYFUNCTION; then $5; else $6; fi;;
-a) MSGUCSF=true
local UCSFNMPC=$2
for UCSFNMC in $(echo $UCSFNMPC | cut -f 1 -d '_'); do
if $MSGUCSF; then
UIP -d "$3"
MSGUCSF=false
else
MSGDELIMITER
fi
UIP "$4 ($UCSFNMC)" "$MSGVU Yes"
MSGUCSFA="$MSGNIS"
case $UCSFNMC in
"$5") MSGUCSFA="$MSGNUS";;
esac
UIP "$MSGVD No $MSGUCSFA"
if $KEYFUNCTION; then
UCSFNM=true
break
else
UCSFNM=false
fi
done;;
*) UIP -d "$1" "$MSGVU Yes" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then $2; else $3; fi;;
esac
}

GREP_PROP() {
local REGEX="s/^$1=//p"
shift
local FILES=$@
[ -z "$FILES" ] && FILES="$PROPFILES"
sed -n "$REGEX" $FILES 2>/dev/null | head -n 1
}

GET_FILE_PROP() {
case $1 in
-pm) grep -m1 "^$3=" "$2" | cut -d= -f2 | cut -d ' ' -f1;;
*) grep -m1 "^$2=" "$1" | cut -d= -f2;;
esac
}

MKTOUCHER() {
mkdir -p ${1%/*} 2>/dev/null
[ -z $2 ] && touch $1 || echo $2 > $1
chmod 644 $1
}

REPLACER() {
case $1 in
-f) local REPLACE=$2; for TARGET in $REPLACE; do if find $SYSTEM -name $TARGET >/dev/null; then FIND=$(find $SYSTEM -name $TARGET); for TARGET in $FIND; do MKTOUCHER $MODPATH/$MODID$TARGET/.replace; done; fi; done;;
*) local REPLACE=$1; for TARGET in $REPLACE; do MKTOUCHER $MODPATH/$MODID$TARGET/.replace; done;;
esac
}

REMOVER() {
local REMOVE=$2
case $1 in
-rm) for TARGET in $REMOVE; do if [ -d $TARGET ]; then rm -rf $TARGET; fi; done;;
-mm) for TARGET in $REMOVE; do for MMP in $MODPATH $MODPATHUPD; do if [ -d $MMP/$TARGET ]; then rm -rf $MMP/$TARGET; fi; done; done;;
-e-mm) for TARGET in $REMOVE; do for MMP in $MODPATH $MODPATHUPD; do if [ -d $MMP/$TARGET ]; then local EXCEPT=$3; cd $MODPATH/$TARGET; ls | grep -v $EXCEPT | xargs rm -rf; fi; done; done;;
esac
}

BUCKUPER() {
local RORB=$2
for TARGET in $RORB; do
case $1 in
-r) if [ -f $TARGET.bak ]; then mv -f $TARGET.bak $TARGET; fi;;
-s) if [ -f $TARGET ]; then for SBT in $TARGET; do cp -f $SBT $SBT.bak; done; fi;;
-bp) if [ -f $TARGET ]; then cp -f $TARGET "$TARGET-$DMYHMS.bak"; fi;;
esac
done
}

FINDER() {
case $1 in
-mm) local FIND=$2; for TARGET in $FIND; do if [ -d $MODPATHUPD/$TARGET ] || [ -d $MODPATH/$TARGET ]; then return 0; break; fi; done; return 1;;
*) local FIND=$1; for TARGET in $FIND; do if [ -e $TARGET ]; then return 0; break; fi; done; return 1;;
esac
}

SET_PERM() {
chown $2:$3 $1 || return 1
chmod $4 $1 || return 1
CON=$5
[ -z $CON ] && CON=u:object_r:system_file:s0
chcon $CON $1 || return 1
}

SET_PERM_R() {
UIP "Setting Permissions"
find $1 -type d 2>/dev/null | while read dir; do
SET_PERM $dir $2 $3 $4 $6
done
find $1 -type f -o -type l 2>/dev/null | while read file; do
SET_PERM $file $2 $3 $5 $6
done
}

SET_PERM_RM() {
if $MAGISK; then SET_PERM_R $MODPATH/$MODID 0 0 0755 0644; [ -d $MODPATH/$MODID$MIPSB ] && chmod -R 777 $MODPATH/$MODID$MIPSB; [ -d $MODPATH/$MODID$MIPSXB ] && chmod -R 777 $MODPATH/$MODID$MIPSXB; fi
[ -f $MODPATH/$MODID/daemon ] && chmod 744 $MODPATH/$MODID/daemon
[ -f $MODPATH/$MODID/nfqttl ] && chmod 777 $MODPATH/$MODID/nfqttl
case $1 in -msgdi) UIP "$MSGDI";; esac
}

UZTPN() {
UPN="$1"
for F in "$1" "$2" "$3" "$4"; do
if [ "$F" ]; then
if [ ! -f $TMPDIR/$F.tar.xz ]; then $UNZIP -oq $ZIPFILE $F.tar.xz -d $TMPDIR 2>/dev/null; fi
$UNTARXZ -xf $TMPDIR/$F.tar.xz -C $TMPDIR
if [ ! -d $TMPDIR/$F ]; then
UIP "Unzip $F Error"
$UNTARXZ -xf $TMPDIR/$F.tar.xz -C $TMPDIR
if [ -d $TMPDIR/$F ]; then UIP "Unzip $F Completed"; fi
fi
rm -f $TMPDIR/$F.tar.xz
chmod -R 777 $TMPDIR/$F
else
break
fi
done
}

MOVERPATH() {
if [ $BOOTMODE != true ] && [ -d $MODPATH/$MODID/system_root/system ]; then
mkdir -p $MODPATH/$MODID/system; cp -rf $MODPATH/$MODID/system_root/system/* $MODPATH/$MODID/system; rm -rf $MODPATH/$MODID/system_root
fi
if [ -d $MODPATH/$MODID/vendor ]; then
mkdir -p $MODPATH/$MODID$MIPSV; cp -rf $MODPATH/$MODID/vendor/* $MODPATH/$MODID$MIPSV; rm -rf $MODPATH/$MODID/vendor
fi
if [ $BOOTMODE != true ] && [ -d $MODPATH/$MODID/system/system ]; then
mkdir -p $MODPATH/$MODID/system; cp -rf $MODPATH/$MODID/system/system/* $MODPATH/$MODID/system; rm -rf $MODPATH/$MODID/system/system
fi
if [ $BOOTMODE != true ] && [ -d $MODPATH/$MODID/system_root/system/system_ext ]; then
mkdir -p $MODPATH/$MODID/system/system_ext; cp -rf $MODPATH/$MODID/system_root/system/system_ext/* $MODPATH/$MODID/system/system_ext; rm -rf $MODPATH/$MODID/system_root
fi
}

APKINSTALLER() {
NAMEINSTALLAPP=$2; NAMEPATHOUT=$3
UIP "Installing $PACKAGENAME"
case $1 in
-d) if $BOOTMODE; then
pm install -r $NAMEINSTALLAPP >/dev/null
else
cp -f $STORAGE/Applications/$APKINPUT $IPDA/$PACKAGENAME.apk
SET_PERM_R $IPDA/$PACKAGENAME.apk 1000 1000 0771 0644
fi;;
-a) if $MAGISK; then
MODID="$IDAIOIARPFMD"
PATHINSTALLAPP=$MODPATH/$MODID$MIPSA/$NAMEINSTALLAPP
else
PATHINSTALLAPP=$IPSA/$NAMEINSTALLAPP
fi
rm -rf $PATHINSTALLAPP
mkdir -p $TMPDIR/Lib_$NAMEINSTALLAPP
for ARCH in "armeabi" "armeabi-v7a" "arm64-v8a"; do
$UNZIP -oq $ZIPFILE $NAMEPATHOUT/$NAMEINSTALLAPP.apk -d $TMPDIR 2>/dev/null
$UNZIP -oq $TMPDIR/$NAMEPATHOUT/$NAMEINSTALLAPP.apk lib/$ARCH/* -d $TMPDIR/Lib_$NAMEINSTALLAPP 2>/dev/null
case $ARCH in
"armeabi") ARCHOUT="arm";; "armeabi-v7a") ARCHOUT="arm";; "arm64-v8a") ARCHOUT="arm64";;
esac
if [ -d $TMPDIR/Lib_$NAMEINSTALLAPP/lib/$ARCH ]; then
mkdir -p $PATHINSTALLAPP/lib/$ARCHOUT
cp -f $TMPDIR/Lib_$NAMEINSTALLAPP/lib/$ARCH/* $PATHINSTALLAPP/lib/$ARCHOUT
else
mkdir -p $PATHINSTALLAPP
fi
cp -f $TMPDIR/$NAMEPATHOUT/$NAMEINSTALLAPP.apk $PATHINSTALLAPP
done
rm -rf $TMPDIR/Lib_$NAMEINSTALLAPP
if $MAGISK; then
MMPR -v "AIOIARPFMD" "$VAIOIARPFMD" "AIOIARPFMD - Systemless Apps"
touch $MODPATH/$MODID/update
APKPERM "$PATHINSTALLAPP/$NAMEINSTALLAPP.apk" "$MODPATH/$MODID$MIPSEP"; HAPWL "$MODPATH/$MODID$MIPSES"
SET_PERM_RM
else
APKPERM "$PATHINSTALLAPP/$NAMEINSTALLAPP.apk" "$IPSEP"; HAPWL "$IPSES"
SET_PERM_R $IPSA/$NAMEINSTALLAPP 0 0 0755 0644
fi;;
-s) rm -rf $PATHINSTALLAPP
mkdir -p $TMPDIR/Lib_$NAMEINSTALLAPP
for ARCH in "armeabi" "armeabi-v7a" "arm64-v8a"; do
$UNZIP -oq $NAMEPATHOUT/$NAMEINSTALLAPP.apk lib/$ARCH/* -d $TMPDIR/Lib_$NAMEINSTALLAPP 2>/dev/null
case $ARCH in
"armeabi") ARCHOUT="arm";; "armeabi-v7a") ARCHOUT="arm";; "arm64-v8a") ARCHOUT="arm64";;
esac
if [ -d $TMPDIR/Lib_$NAMEINSTALLAPP/lib/$ARCH ]; then
mkdir -p $PATHINSTALLAPP/lib/$ARCHOUT
cp -f $TMPDIR/Lib_$NAMEINSTALLAPP/lib/$ARCH/* $PATHINSTALLAPP/lib/$ARCHOUT
else
mkdir -p $PATHINSTALLAPP
fi
cp -f $NAMEPATHOUT/$NAMEINSTALLAPP.apk $PATHINSTALLAPP
done
rm -rf $TMPDIR/Lib_$NAMEINSTALLAPP;;
esac
}

APKBUILDER() {
[ -f $STORAGE/framework-res.apk ] && APKFRAME="$STORAGE/framework-res.apk" || APKFRAME="$IPSFW/framework-res.apk"
$AAPT p -f -v -M $1/AndroidManifest.xml \
-I $APKFRAME -S $1/res/ \
-F $1/unsigned.apk >/dev/null
# if $APKSIGN; then
# if [ -s $1/unsigned.apk ]; then
# UIP "Sign $2"
# DALVIKVM $1/unsigned.apk $1/signed.apk
# $ZIPALIGN -c 4 $1/signed.apk
# cp -f $1/signed.apk $2
# fi
# else
# # DALVIKVM() {
# # dalvikvm -Djava.io.tmpdir=. -Xnodex2oat -Xnoimage-dex2oat -cp $ZIPSIGNERJAR com.topjohnwu.utils.ZipSigner "$@" 2>/dev/null \
# # || dalvikvm -Djava.io.tmpdir=. -Xnoimage-dex2oat -cp $ZIPSIGNERJAR com.topjohnwu.utils.ZipSigner "$@";
# # }
UIP "No Sign $2"
$ZIPALIGN -c 4 $1/unsigned.apk
cp -f $1/unsigned.apk $2
# fi
}

APKPERM() {
APKINPUT=$1; APKDIROUTPUT=$2
PACKAGENAME=$($AAPT list -a $APKINPUT | awk -v FS='"' '/package=/{print $2}')
mkdir -p $APKDIROUTPUT
PERM=$($AAPT d permissions $APKINPUT | grep "uses-permission:" | \
     sed -r "s|.*='(.*)'|\1|")
APPPERM=$(echo "$PERM" | \
     sed -re "s|  ||g; s|^|        <permission name=\"|; s|$|\"/>|")
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
# <!--
# This XML file declares which signature|privileged permissions should be granted to privileged
# applications on GMS or Google-branded devices.
# It allows additional grants on top of privapp-permissions-platform.xml
# -->
<permissions>
    <privapp-permissions package=\"$PACKAGENAME\">
$APPPERM
    </privapp-permissions>
</permissions>" > $APKDIROUTPUT/privapp-permissions-$PACKAGENAME.xml
chmod 644 $APKDIROUTPUT/privapp-permissions-$PACKAGENAME.xml
}

HAPWL() {
APKDIROUTPUT=$1; mkdir -p $APKDIROUTPUT
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<!--
This XML file declares which platform apps that need to access internal APIs.
-->
<config>
  <hidden-api-whitelisted-app package=\"$PACKAGENAME\" />
</config>" > $APKDIROUTPUT/$PACKAGENAME-package-whitelist.xml
chmod 644 $APKDIROUTPUT/$PACKAGENAME-package-whitelist.xml
}

MMPR() {
local MMPROP="$MODPATH/$MODID/module.prop"
echo -e "id=$MODID\nname=$2\nversion=$3" > $MMPROP
case $1 in
-v) echo -e "author=$MSGWDI\ndescription=$4" >> $MMPROP;;
-vs) echo -e "author=$MSGWDI\ndescription=$4\nsupport=$5" >> $MMPROP;;
-vc) echo -e "versionCode=$4\nauthor=$5\ndescription=$6" >> $MMPROP;;
-vcuj) echo -e "versionCode=$4\nauthor=$5\ndescription=$6\nupdateJson=$7" >> $MMPROP;;
-vcs) echo -e "versionCode=$4\nauthor=$5\ndescription=$6\nsupport=$7" >> $MMPROP;;
-vcsuj) echo -e "versionCode=$4\nauthor=$5\ndescription=$6\nsupport=$7\nupdateJson=$8" >> $MMPROP;;
-vcmm) echo -e "versionCode=$4\nauthor=$5\ndescription=$6\nminMagisk=$7" >> $MMPROP;;
-vcma) echo -e "versionCode=$4\nauthor=$5\ndescription=$6\nminApi=$7" >> $MMPROP;;
-vcmma) echo -e "versionCode=$4\nauthor=$5\ndescription=$6\nminMagisk=$7\napi=$8" >> $MMPROP;;
-vcrapi) echo -e "versionCode=$4\nauthor=$5\ndescription=$6\nriruApi=$7\nriruMinApi=$8" >> $MMPROP;;
-vcsd) echo -e "versionCode=$4\nauthor=$5\ndescription=$6\nsupport=$7\ndonate=$8" >> $MMPROP;;
-vcse) echo -e "versionCode=$4\nauthor=$5\ndescription=$6\nminSdkVersion=$7\nentrypoint=$8" >> $MMPROP;;
-vcsdt) echo -e "versionCode=$4\nauthor=$5\ndescription=$6\nsupport=$7\ndonate=$8\ntemplate=$9" >> $MMPROP;;
esac
}

MSSERVICE() {
case $1 in
-s) echo -e "while true; do\nif [ \$(getprop sys.boot_completed) -eq 1 ]; then\n$2\nbreak\nfi\ndone" > $MODPATH/$MODID/service.sh;;
-u) echo -e "#/sbin/sh\nwhile true; do\nif [ ! -d $MODPATH/$MODID ] || [ -f $MODPATH/$MODID/remove ]; then\n$2\nrm -f $SERVICED/$3.sh\nbreak\nelse\nbreak\nfi\ndone" > $SERVICED/$3.sh;;
-uc) echo -e "#/sbin/sh\nwhile true; do\n$2nbreak\ndone" > $SERVICED/$3.sh;;
*) echo "#/sbin/sh\n\nwhile true; do\nif [ \$(getprop sys.boot_completed) -eq 1 ]; then\nif [ -f $MODPATH/$MODID/disable ] || [ ! -d $MODPATH/$MODID ]; then\n$1\nif [ ! -d $MODPATH/$MODID ]; then\nrm -f $SERVICED/$3.sh\nfi\nbreak\nelif [ -d $MODPATH/$MODID ]; then\n$2\nbreak\nfi\nfi\ndone" > $SERVICED/$3.sh;;
esac
[ -f $SERVICED/$3.sh ] && chmod 777 $SERVICED/$3.sh
}

OSP_DETECT() {
case $1 in
*.conf) local SPACES=$(sed -n "/^output_session_processing {/,/^}/ {/^ *music {/p}" $1 | sed -r "s/( *).*/\1/")
local EFFECTS=$(sed -n "/^output_session_processing {/,/^}/ {/^$SPACES\music {/,/^$SPACES}/p}" $1 | grep -E "^$SPACES +[A-Za-z]+" | sed -r "s/( *.*) .*/\1/g")
for EFFECT in $EFFECTS; do
local SPACES=$(sed -n "/^effects {/,/^}/ {/^ *$EFFECT {/p}" $1 | sed -r "s/( *).*/\1/")
[ "$EFFECT" != "atmos" ] && sed -i "/^effects {/,/^}/ {/^$SPACES$EFFECT {/,/^$SPACES}/ s/^/#/g}" $1
done;;
*.xml) local EFFECTS=$(sed -n "/^ *<postprocess>$/,/^ *<\/postprocess>$/ {/^ *<stream type=\"music\">$/,/^ *<\/stream>$/ {/<stream type=\"music\">/d; /<\/stream>/d; s/<apply effect=\"//g; s/\"\/>//g; p}}" $1)
for EFFECT in $EFFECTS; do
[ "$EFFECT" != "atmos" ] && sed -ri "s/^( *)<apply effect=\"$EFFECT\"\/>/\1<\!--<apply effect=\"$EFFECT\"\/>-->/" $1
done;;
esac
}

FPATCHER() {
UIP "Patching Needed Files..."
local FINDFPATH=$1; local FPATCCODE=$2
for FPATH in $FINDFPATH; do
UIP "Found $FPATH" "Patching..."
if $MAGISK; then
mkdir -p `dirname $MODPATH/$MODID/$FPATH`
cp -f $MAGISKMP$FPATH $MODPATH/$MODID/$FPATH
UIP "Files Found And Patched"
fi
done
if $MAGISK; then
for FCODE in $FPATCCODE; do
sed -i $FCODE $MODPATH/$MODID/$FPATH
done
MOVERPATH
SET_PERM_RM
else
for FCODE in $FPATCCODE; do
sed -i $FCODE $FPATH
done
fi
}

MAGISKHL() {
MZLIST="com.google.android.gsf_com.google.process.gapps com.google.android.gsf_com.google.process.gservices com.google.android.apps.walletnfcrel"; MHLIST="$MZLIST com.google.android.gms"
case $1 in
-rm) if $ZYGISK; then
UIP "UnHiding Packages With Using Zygisk & DenyList"
if $BOOTMODE; then
for mzrmhide in $2; do
magisk --denylist rm $(echo $mzrmhide | cut -f 1 -d '_') $(echo $mzrmhide | cut -f 2 -d '_')
if [ $? -eq 0 ]; then UIP "$mzrmhide: UnHide Done"; else UIP "$mzrmhide: UnHide Failed"; fi
done
else
echo -e "for mzrmhide in $2; do magisk --denylist rm \$(echo \$mzrmhide | cut -f 1 -d '_') \$(echo \$mzrmhide | cut -f 2 -d '_'); done" >> $MODPATH/$MODID/post-fs-data.sh
fi
else
UIP "UnHiding Packages With Using MagiskHide"
if $BOOTMODE; then
for mrmhide in $2; do
magiskhide rm $(echo $mrmhide | cut -f 1 -d '_') $(echo $i | cut -f 2 -d '_')
if [ $? -eq 0 ]; then UIP "$mrmhide: UnHide Done"; else UIP "$mrmhide: UnHide Failed"; fi
done
else
echo -e "for mrmhide in $2; do magiskhide rm \$(echo \$mrmhide | cut -f 1 -d '_') \$(echo \$mrmhide | cut -f 2 -d '_'); done" >> $MODPATH/$MODID/post-fs-data.sh
fi
fi;;
*) case $1 in -add) MZLIST=$2; MHLIST=$2;; esac
if $ZYGISK; then
UIP "Hiding Packages With Using Zygisk & DenyList"
if $BOOTMODE; then
magisk --denylist enable >/dev/null
for mzhide in $MZLIST; do
magisk --denylist add $(echo $mzhide | cut -f 1 -d '_') $(echo $mzhide | cut -f 2 -d '_')
if [ $? -eq 0 ]; then UIP "$mzhide: Hide Done"; else UIP "$mzhide: Hide Failed"; fi
done
else
echo -e "magisk --denylist enable; for mzhide in $MZLIST; do magisk --denylist add \$(echo \$mzhide | cut -f 1 -d '_') \$(echo \$mzhide | cut -f 2 -d '_'); done" >> $MODPATH/$MODID/post-fs-data.sh
fi
else
UIP "Hiding Packages With Using MagiskHide"
if $BOOTMODE; then
magiskhide enable >/dev/null
for mhide in $MHLIST; do
magiskhide add $(echo $mhide | cut -f 1 -d '_') $(echo $i | cut -f 2 -d '_')
if [ $? -eq 0 ]; then UIP "$mhide: Hide Done"; else UIP "$mhide: Hide Failed"; fi
done
else
echo -e "magiskhide enable; for mhide in $MHLIST; do magiskhide add \$(echo \$mhide | cut -f 1 -d '_') \$(echo \$mhide | cut -f 2 -d '_'); done" >> $MODPATH/$MODID/post-fs-data.sh
fi
fi;;
esac
}

WCANFTP() {
for c in $1; do
case $c in
-sl) SELINUX_CHECKER; if $SELINUX || [ $BOOTMODE != true ]; then if [ ! -d $MODPATH/$IDSELC ]; then UIP "Note $MSGRI: Change SELinux In Permissive!"; IPSELC; fi; fi;;
-bb) BB_CHECKER; if [ $FBUSYBOX != true ]; then UIP "Note $MSGRI: The Functionality Requires A BusyBox!"; IPBB; fi;;
-ehap) if [ ! -d $MODPATH/$IDHAP ]; then UIP "Note $MSGRI: The Functionality Requires A Enabling Hidden Api Policy!"; IPHAP; fi;;
-aml) local FILES="$(find $MODPATH/*/system -type f -name "usb_audio_policy_configuration.xml" -o -name "*audio_*policy*.conf" -o -name "*audio_effects*.conf" -o -name "*audio_effects*.xml" 2>/dev/null)"; if [ ! -z "$FILES" ] && [ ! "$(echo $FILES | grep '/aml/')" ]; then UIP "Conflicting Audio Mod Found!" "Note $MSGRI: Install Audio Modification Library (AML)!"; IPAML; fi;;
esac
done
}

ALBP() {
case $FILE in
*.conf) sed -i "/$1 {/,/}/d" $FILE
sed -i "/$2 {/,/}/d" $FILE
sed -i "s/^effects {/effects {\n  $1 {\n    library $2\n    uuid $5\n  }/g" $FILE
sed -i "s/^libraries {/libraries {\n  $2 {\n    path $3\/$4\n  }/g" $FILE;;
*.xml) sed -i "/$1/d" $FILE
sed -i "/$2/d" $FILE
sed -i "/<libraries>/ a\        <library name=\"$2\" path=\"$4\"\/>" $FILE
sed -i "/<effects>/ a\        <effect name=\"$1\" library=\"$2\" uuid=\"$5\"\/>" $FILE;;
esac
}

PROCESSING_PATCH() {
case $1 in
-pre) CONF=pre_processing; XML=preprocess;;
-post) CONF=output_session_processing; XML=postprocess;;
esac
case $2 in
*.conf) if [ ! "$(sed -n "/^$CONF {/,/^}/p" $2)" ]; then
echo -e "\n$CONF {\n    $3 {\n        $4 {\n        }\n    }\n}" >> $2
elif [ ! "$(sed -n "/^$CONF {/,/^}/ {/$3 {/,/^    }/p}" $2)" ]; then
sed -i "/^$CONF {/,/^}/ s/$CONF {/$CONF {\n    $3 {\n        $4 {\n        }\n    }/" $2
elif [ ! "$(sed -n "/^$CONF {/,/^}/ {/$3 {/,/^    }/ {/$4 {/,/}/p}}" $2)" ]; then
sed -i "/^$CONF {/,/^}/ {/$3 {/,/^    }/ s/$3 {/$3 {\n        $4 {\n        }/}" $2
fi;;
*.xml) if [ ! "$(sed -n "/^ *<$XML>/,/^ *<\/$XML>/p" $2)" ]; then
sed -i "/<\/audio_effects_conf>/i\    <$XML>\n       <stream type=\"$3\">\n            <apply effect=\"$4\"\/>\n        <\/stream>\n    <\/$XML>" $2
elif [ ! "$(sed -n "/^ *<$XML>/,/^ *<\/$XML>/ {/<stream type=\"$3\">/,/<\/stream>/p}" $2)" ]; then
sed -i "/^ *<$XML>/,/^ *<\/$XML>/ s/    <$XML>/    <$XML>\n        <stream type=\"$3\">\n            <apply effect=\"$4\"\/>\n        <\/stream>/" $2
elif [ ! "$(sed -n "/^ *<$XML>/,/^ *<\/$XML>/ {/<stream type=\"$3\">/,/<\/stream>/ {/^ *<apply effect=\"$4\"\/>/p}}" $2)" ]; then
sed -i "/^ *<$XML>/,/^ *<\/$XML>/ {/<stream type=\"$3\">/,/<\/stream>/ s/<stream type=\"$3\">/<stream type=\"$3\">\n            <apply effect=\"$4\"\/>/}" $2
fi;;
esac
}

PXMLNLS() {
local Name0=$(echo "$3" | sed -r "s|^.*/.*\[@(.*)=\".*\".*$|\1|")
local Value0=$(echo "$3" | sed -r "s|^.*/.*\[@.*=\"(.*)\".*$|\1|")
[ "$(echo "$4" | grep '=')" ] && Name1=$(echo "$4" | sed "s|=.*||") || local Name1="value"
local Value1=$(echo "$4" | sed "s|.*=||")
case $1 in
"-s"|"-u"|"-i")
local SNP=$(echo "$3" | sed -r "s|(^.*/.*)\[@.*=\".*\".*$|\1|")
local NP=$(dirname "$SNP")
local SN=$(basename "$SNP")
if [ "$5" ]; then
[ "$(echo "$5" | grep '=')" ] && local Name2=$(echo "$5" | sed "s|=.*||") || local Name2="value"
local Value2=$(echo "$5" | sed "s|.*=||")
fi
if [ "$6" ]; then
[ "$(echo "$6" | grep '=')" ] && local Name3=$(echo "$6" | sed "s|=.*||") || local Name3="value"
local Value3=$(echo "$6" | sed "s|.*=||")
fi
if [ "$7" ]; then
[ "$(echo "$7" | grep '=')" ] && local Name4=$(echo "$7" | sed "s|=.*||") || local Name4="value"
local Value4=$(echo "$7" | sed "s|.*=||")
fi;;
esac
case "$1" in
"-d") $XMLSTARLET ed -L -d "$3" "$2";;
"-u") $XMLSTARLET ed -L -u "$3/@$Name1" -v "$Value1" "$2";;
"-s")
if [ "$($XMLSTARLET sel -t -m "$3" -c . "$2")" ]; then
$XMLSTARLET ed -L -u "$3/@$Name1" -v "$Value1" "$2"
else
$XMLSTARLET ed -L -s "$NP" -t elem -n "$SN-$MODID" \
-i "$SNP-$MODID" -t attr -n "$Name0" -v "$Value0" \
-i "$SNP-$MODID" -t attr -n "$Name1" -v "$Value1" \
-r "$SNP-$MODID" -v "$SN" "$2"
fi;;
"-i")
if [ "$($XMLSTARLET sel -t -m "$3[@$Name1=\"$Value1\"]" -c . "$2")" ]; then
$XMLSTARLET ed -L -d "$3[@$Name1=\"$Value1\"]" "$2"
fi
if [ -z "$Value3" ]; then
$XMLSTARLET ed -L -s "$NP" -t elem -n "$SN-$MODID" \
-i "$SNP-$MODID" -t attr -n "$Name0" -v "$Value0" \
-i "$SNP-$MODID" -t attr -n "$Name1" -v "$Value1" \
-i "$SNP-$MODID" -t attr -n "$Name2" -v "$Value2" \
-r "$SNP-$MODID" -v "$SN" "$2"
elif [ "$Value4" ]; then
$XMLSTARLET ed -L -s "$NP" -t elem -n "$SN-$MODID" \
-i "$SNP-$MODID" -t attr -n "$Name0" -v "$Value0" \
-i "$SNP-$MODID" -t attr -n "$Name1" -v "$Value1" \
-i "$SNP-$MODID" -t attr -n "$Name2" -v "$Value2" \
-i "$SNP-$MODID" -t attr -n "$Name3" -v "$Value3" \
-i "$SNP-$MODID" -t attr -n "$Name4" -v "$Value4" \
-r "$SNP-$MODID" -v "$SN" "$2"
elif [ "$Value3" ]; then
$XMLSTARLET ed -L -s "$NP" -t elem -n "$SN-$MODID" \
-i "$SNP-$MODID" -t attr -n "$Name0" -v "$Value0" \
-i "$SNP-$MODID" -t attr -n "$Name1" -v "$Value1" \
-i "$SNP-$MODID" -t attr -n "$Name2" -v "$Value2" \
-i "$SNP-$MODID" -t attr -n "$Name3" -v "$Value3" \
-r "$SNP-$MODID" -v "$SN" "$2"
fi;;
esac
}

PATCH_DEEP_BUFFER() {
UIP "Start PATCH_DEEP_BUFFER" "Patching Needed Files..."
case $1 in
-nl) echo -e "\n#PATCH DEEP BUFFER\naudio.deep_buffer.media=false\nvendor.audio.deep_buffer.media=false\nqc.audio.deep_buffer.media=false\nro.qc.audio.deep_buffer.media=false\npersist.vendor.audio.deep_buffer.media=false\nvendor.audio.feature.deepbuffer_as_primary.enable=false" >> $MODPATH/$MODID/system.prop
esac
for OACONF in $ACXML; do
UIP "Found $OACONF" "Patching..."
ACONF="$MODPATH/$MODID$(echo $OACONF | sed "s|^/vendor|$MIPSV|g")"
case $1 in
-nl) PXMLNLS -u $ACONF '/configs/property[@name="audio.deep_buffer.media"]' "false";;
-aist) PXMLNLS -u $ACONF '/configs/property[@name="audio.offload.video"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="audio.deep_buffer.media"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.offload.track.enable"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.offload.multiple.enabled"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.av.streaming.offload.enable"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.voice.path.for.pcm.voip"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.use.sw.alac.decoder"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.use.sw.ape.decoder"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.use.sw.mpegh.decoder"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.flac.sw.decoder.24bit"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.hw.aac.encoder"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="a2dp_offload_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="anc_headset_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/flag[@name="custom_stereo_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/flag[@name="battery_listener_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/flag[@name="aac_adts_offload_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="alac_offload_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="ape_offload_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="flac_offload_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="pcm_offload_enabled_16"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="pcm_offload_enabled_24"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="qti_flac_decoder"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="vorbis_offload_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="wma_offload_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="audio_zoom_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/flag[@name="audiosphere_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/flag[@name="ext_hw_plugin_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/flag[@name="ext_qdsp_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/flag[@name="ext_spkr_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/flag[@name="ext_spkr_tfa_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/flag[@name="receiver_aided_stereo"]' "false"
PXMLNLS -u $ACONF '/configs/flag[@name="hfp_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="hifi_audio_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="hwdep_cal_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="multi_voice_session"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="maxx_audio_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="usb_offload_burst_mode"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="usb_offload_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="usb_offload_sidetone_vol_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="keep_alive_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="kpi_optimize_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="spkr_prot_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/flag[@name="vbat_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/flag[@name="snd_monitor_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/flag[@name="dynamic_ecns_enabled"]' "true";;
esac
UIP "Files Found And Patched"
done
}
	
PATCH_VOLUMES() {
UIP "Start PATCH_VOLUMES" "Patching Needed Files..."
for OMIX in $MPATHS; do
UIP "Found $OMIX" "Patching..."
MIX="$MODPATH/$MODID$(echo $OMIX | sed "s|^/vendor|$MIPSV|g")"
case $1 in
-nl) PXMLNLS -u $MIX '/mixer/ctl[@name="RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX4 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX5 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX6 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX7 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX8 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX0 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX1 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX2 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX3 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX4 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX5 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX6 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX7 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX8 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX4 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX5 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX6 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX7 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX8 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX4 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX5 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX6 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX7 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX8 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX0 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX1 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX2 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX3 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX4 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX5 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX6 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX7 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX8 Mix Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX4 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX5 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX6 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX7 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX8 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_RX3 Digital Volume"]' "90";;
-aist) if $HIFI; then
PXMLNLS -u $MIX '/mixer/ctl[@name="RX0 Digital Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX4 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX5 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX6 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX7 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX8 Digital Volume"]' "90"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX8 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX3 Digital Volume"]' "90"
PXMLNLS -s $MIX '/mixer/ctl[@name="WSA_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX3 Digital Volume"]' "90"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX4 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX5 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX6 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX7 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX8 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX4 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX5 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX6 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX7 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX8 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="WSA_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="WSA_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="WSA_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="WSA_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX4 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX5 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX6 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX7 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX8 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="WSA_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="WSA_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="WSA_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="WSA_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX4 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX5 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX6 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX7 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX8 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="WSA_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="WSA_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="WSA_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="WSA_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="LINEOUT1 Volume"]' "16"
PXMLNLS -u $MIX '/mixer/ctl[@name="LINEOUT2 Volume"]' "16"
else
PXMLNLS -u $MIX '/mixer/ctl[@name="RX0 Digital Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX4 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX5 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX6 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX7 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX8 Digital Volume"]' "90"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX8 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_RX3 Digital Volume"]' "90"
PXMLNLS -s $MIX '/mixer/ctl[@name="WSA_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_RX3 Digital Volume"]' "90"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX4 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX5 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX6 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX7 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX8 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_RX0 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_RX1 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_RX2 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_RX3 Digital Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="LINEOUT1 Volume"]' "16"
PXMLNLS -u $MIX '/mixer/ctl[@name="LINEOUT2 Volume"]' "16"
fi;;
esac
UIP "Files Found And Patched"
done
}

PATCH_MICROPHONE() {
UIP "Start PATCH_MICROPHONE" "Patching Needed Files..."
for OMIX in $MPATHS; do
UIP "Found $OMIX" "Patching..."
MIX="$MODPATH/$MODID$(echo $OMIX | sed "s|^/vendor|$MIPSV|g")"
case $1 in
-nl) if $HIFI; then
PXMLNLS -u $MIX '/mixer/ctl[@name="ADC1 Volume"]' "12"
PXMLNLS -u $MIX '/mixer/ctl[@name="ADC2 Volume"]' "12"
PXMLNLS -u $MIX '/mixer/ctl[@name="ADC3 Volume"]' "12"
PXMLNLS -u $MIX '/mixer/ctl[@name="ADC4 Volume"]' "12"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC0 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC1 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC2 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC3 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC4 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC5 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC6 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC7 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC8 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC0 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC1 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC2 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC3 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC4 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC5 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC6 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC7 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC8 Volume"]' "88"
else
PXMLNLS -u $MIX '/mixer/ctl[@name="ADC1 Volume"]' "12"
PXMLNLS -u $MIX '/mixer/ctl[@name="ADC2 Volume"]' "12"
PXMLNLS -u $MIX '/mixer/ctl[@name="ADC3 Volume"]' "12"
PXMLNLS -u $MIX '/mixer/ctl[@name="ADC4 Volume"]' "12"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC0 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC1 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC2 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC3 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC4 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC5 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC6 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC7 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC8 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC0 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC1 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC2 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC3 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC4 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC5 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC6 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC7 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC8 Volume"]' "90"
fi
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="ADC1 Volume"]' "12"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="ADC2 Volume"]' "12"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="ADC3 Volume"]' "12"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="ADC1 Volume"]' "12"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="ADC3 Volume"]' "12"
PXMLNLS -u $MIX '/mixer/ctl[@name="DMIC MUX0"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="DMIC MUX1"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="DMIC MUX2"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="DMIC MUX3"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="DMIC MUX4"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="DMIC MUX5"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="DMIC MUX6"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="DMIC MUX7"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="DMIC MUX8"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="DMIC MUX9"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="DMIC MUX10"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="DMIC MUX11"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMIC MUX0"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMIC MUX1"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMIC MUX2"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMIC MUX3"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMIC MUX4"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMIC MUX5"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMIC MUX6"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMIC MUX7"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMIC MUX8"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMIC MUX9"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMIC MUX10"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMIC MUX11"]' "ZERO";;
-aist) if $HIFI; then
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC0 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC1 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC2 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC3 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC4 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC5 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC6 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC7 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC8 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC0 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC1 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC2 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC3 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC4 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC5 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC6 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC7 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC8 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="VA_DEC0 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="VA_DEC1 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="VA_DEC2 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="VA_DEC3 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="VA_DEC4 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="VA_DEC5 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="VA_DEC6 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="VA_DEC7 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/ctl[@name="VA_DEC8 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/path[@name="headset-mic"]/ctl[@name="TX_DEC0 Volume"]' "88"
PXMLNLS -u $MIX '/mixer/path[@name="voice-tty-full-headset-mic"]/ctl[@name="TX_DEC5 Volume"]' "88"
else
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC0 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC1 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC2 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC3 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC4 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC5 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC6 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC7 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="DEC8 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC0 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC1 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC2 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC3 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC4 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC5 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC6 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC7 Volume"]' "94"
PXMLNLS -u $MIX '/mixer/ctl[@name="TX_DEC8 Volume"]' "94"
fi;;
esac
UIP "Files Found And Patched"
done
}

PATCH_IIR() {
UIP "Start PATCH_IIR" "Patching Needed Files..."
for OMIX in $MPATHS; do
UIP "Found $OMIX" "Patching..."
MIX="$MODPATH/$MODID$(echo $OMIX | sed "s|^/vendor|$MIPSV|g")"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band1"][@id="0"]' "268833620"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band1"][@id="1"]' "537398060"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band1"][@id="2"]' "267510580"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band1"][@id="3"]' "537398060"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band1"][@id="4"]' "267908744"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band2"][@id="0"]' "266468108"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band2"][@id="1"]' "544862876"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band2"][@id="2"]' "262421829"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band2"][@id="3"]' "544862876"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band2"][@id="4"]' "260454481"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band3"][@id="0"]' "262913321"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band3"][@id="1"]' "559557058"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band3"][@id="2"]' "252311547"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band3"][@id="3"]' "559557058"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band3"][@id="4"]' "246789412"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band4"][@id="0"]' "294517138"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band4"][@id="1"]' "572289454"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band4"][@id="2"]' "210943778"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band4"][@id="3"]' "572289454"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band4"][@id="4"]' "237025461"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band5"][@id="0"]' "329006442"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band5"][@id="1"]' "711929387"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band5"][@id="2"]' "110068469"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band5"][@id="3"]' "711929387"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band5"][@id="4"]' "170639455"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Enable Band0"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Enable Band1"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Enable Band2"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Enable Band3"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Enable Band4"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Enable Band5"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP0 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP1 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP2 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP3 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP4 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP5 Volume"]' "90"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP1 MUX"]' "RX1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP2 MUX"]' "RX1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP3 MUX"]' "RX1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP1 MUX"]' "RX2"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP2 MUX"]' "RX2"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP3 MUX"]' "RX2"
UIP "Files Found And Patched"
done
}

PATCH_AUDIO_PLATFORM_INFO() {
UIP "Start PATCH_AUDIO_PLATFORM_INFO" "Patching Needed Files..."
case $1 in
-nl) for OAPLI in $APIXML; do
UIP "Found $OAPLI" "Patching..."
APLI="$MODPATH/$MODID$(echo $OAPLI | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $APLI`
cp -f $MAGISKMP$OAPLI $APLI
sed -i 's/\t/  /g' $APLI
PXMLNLS -s $APLI '/audio_platform_info/bit_width_configs/device[@name="SND_DEVICE_OUT_HEADPHONES"]' 24
PXMLNLS -u $APLI '/audio_platform_info/app_types/app[@mode="default"]' 'bit_width=24'
PXMLNLS -u $APLI '/audio_platform_info/app_types/app[@mode="default"]' 'max_rate=192000'
if [ ! "$P1" ] && [ ! "$P1XL" ] && [ ! "$P2XL" ] && [ ! "$P2" ] && [ ! "$PXL3XL" ]; then
if [ ! "$(grep '<app_types>' $APLI)" ]; then
sed -i "s/<\/audio_platform_info>/  <app_types><!--$MODID-->\n    <app uc_type=\"PCM_PLAYBACK\" mode=\"default\" bit_width=\"24\" id=\"69936\" max_rate=\"192000\" \/><!--$MODID-->\n    <app uc_type=\"PCM_PLAYBACK\" mode=\"default\" bit_width=\"24\" id=\"69940\" max_rate=\"192000\" \/><!--$MODID-->\n  <app_types><!--$MODID-->\n<\/audio_platform_info>/" $APLI
else
for i in 69936 69940; do
[ "$($XMLSTARLET sel -t -m "/audio_platform_info/app_types/app[@uc_type=\"PCM_PLAYBACK\"][@mode=\"default\"][@id=\"$i\"]" -c . $APLI)" ] || sed -i "/<audio_platform_info>/,/<\/audio_platform_info>/ {/<app_types>/,/<\/app_types>/ s/\(^ *\)\(<\/app_types>\)/\1  <app uc_type=\"PCM_PLAYBACK\" mode=\"default\" bit_width=\"24\" id=\"$i\" max_rate=\"192000\" \/><!--$MODID-->\n\1\2/}" $APLI
done
fi
fi
sed -i 's/AUDIO_MICROPHONE_CHANNEL_MAPPING_PROCESSED/AUDIO_MICROPHONE_CHANNEL_MAPPING_DIRECT/g' $APLI
UIP "Files Found And Patched"
done
for OMIX in $MPATHS; do
UIP "Found $OMIX" "Patching..."
MIX="$MODPATH/$MODID$(echo $OMIX | sed "s|^/vendor|$MIPSV|g")"
PXMLNLS -s $MIX '/mixer/ctl[@name="EC Reference Bit Format"]' "S24_LE"
PXMLNLS -s $MIX '/mixer/ctl[@name="EC Reference SampleRate"]' "KHZ_192"
PXMLNLS -s $MIX '/mixer/path[@name="echo-reference"]/ctl[@name="EC Reference Bit Format"]' "S24_LE"
PXMLNLS -s $MIX '/mixer/path[@name="echo-reference"]/ctl[@name="EC Reference SampleRate"]' "KHZ_192"
PXMLNLS -s $MIX '/mixer/path[@name="echo-reference a2dp"]/ctl[@name="EC Reference Bit Format"]' "S24_LE"
PXMLNLS -s $MIX '/mixer/path[@name="echo-reference a2dp"]/ctl[@name="EC Reference SampleRate"]' "KHZ_96"
PXMLNLS -s $MIX '/mixer/ctl[@name="Display Port RX Bit Format"]' "S24_3LE"
PXMLNLS -s $MIX '/mixer/ctl[@name="Display Port RX SampleRate"]' "KHZ_192"
PXMLNLS -s $MIX '/mixer/ctl[@name="SEC_MI2S_RX Format"]' "S24_3LE"
PXMLNLS -s $MIX '/mixer/ctl[@name="SEC_MI2S_RX SampleRate"]' "KHZ_192"
PXMLNLS -s $MIX '/mixer/ctl[@name="WSA_CDC_DMA_0 RX Format"]' "DSD_DOP"
PXMLNLS -s $MIX '/mixer/ctl[@name="WSA_CDC_DMA_RX_0 Format"]' "S24_3LE"
PXMLNLS -s $MIX '/mixer/ctl[@name="WSA_CDC_DMA_RX_0 SampleRate"]' "KHZ_192"
PXMLNLS -s $MIX '/mixer/ctl[@name="WSA_CDC_DMA_0 TX Format"]' "DSD_DOP"
PXMLNLS -s $MIX '/mixer/ctl[@name="WSA_CDC_DMA_TX_0 Format"]' "S24_3LE"
PXMLNLS -s $MIX '/mixer/ctl[@name="WSA_CDC_DMA_TX_0 SampleRate"]' "KHZ_192"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX_CDC_DMA_0 RX Format"]' "DSD_DOP"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX_CDC_DMA_RX_0 Format"]' "S24_3LE"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX_CDC_DMA_RX_0 SampleRate"]' "KHZ_192"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX_CDC_DMA_RX_5 Channels"]' "Two"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX_CDC_DMA_5 RX Format"]' "DSD_DOP"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX_CDC_DMA_RX_5 Format"]' "S32_LE"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX_CDC_DMA_RX_5 SampleRate"]' "KHZ_192"
PXMLNLS -s $MIX '/mixer/ctl[@name="DSD_L Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="DSD_R Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="ASM Bit Width"]' "24"
PXMLNLS -s $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_CDC_DMA_0 RX Format"]' "DSD_DOP"
PXMLNLS -s $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_CDC_DMA_RX_0 Format"]' "S24_3LE"
PXMLNLS -s $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_CDC_DMA_RX_0 SampleRate"]' "KHZ_192"
PXMLNLS -s $MIX '/mixer/path[@name="handset"]/ctl[@name="RX_CDC_DMA_RX_0 Format"]' "S24_3LE"
PXMLNLS -s $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="SLIM_2_RX Format"]' "DSD_DOP"
if $HIFI; then
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIM_7_RX Format"]' "DSD_DOP"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIMBUS_7_RX Format"]' "S24_LE"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIMBUS_7_RX SampleRate"]' "KHZ_96"
PXMLNLS -s $MIX '/mixer/ctl[@name="headphones"]/ctl[@name="SLIM_5_RX Format"]' "DSD_DOP"
PXMLNLS -s $MIX '/mixer/ctl[@name="PRIM_MI2S_RX Format"]' "S24_3LE"
PXMLNLS -s $MIX '/mixer/ctl[@name="PRIM_MI2S_TX Format"]' "S24_3LE"
fi
if [ "$RN5PRO" ] || [ "$MI9" ] || [ "$MI8" ] || [ "$MI8P" ] || [ "$MI9P" ] || [ "$MIA2" ]; then
PXMLNLS -s $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="SLIM_5_RX Format"]' "S24_3LE"
fi
UIP "Files Found And Patched"
done
for OSNDTRG in $SNDTRGS; do
UIP "Found $OSNDTRG" "Patching..."
STG="$MODPATH/$MODID$(echo $OSNDTRG | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $STG`
cp -f $MAGISKMP$OSNDTRG $STG
sed -i 's/\t/  /g' $STG
PXMLNLS -s $STG '/mixer/path[@name="echo-reference"]/ctl[@name="EC Reference Bit Format"]' "S24_LE"
PXMLNLS -s $STG '/mixer/path[@name="echo-reference"]/ctl[@name="EC Reference SampleRate"]' "KHZ_192"
PXMLNLS -s $STG '/mixer/path[@name="echo-reference a2dp"]/ctl[@name="EC Reference Bit Format"]' "S24_LE"
PXMLNLS -s $STG '/mixer/path[@name="echo-reference a2dp"]/ctl[@name="EC Reference SampleRate"]' "KHZ_96"
UIP "Files Found And Patched"
done;;
-aist) for OAPLI in $APIXML; do
UIP "Found $OAPLI" "Patching..."
APLI="$MODPATH/$MODID$(echo $OAPLI | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $APLI`
cp -f $MAGISKMP$OAPLI $APLI
sed -i 's/\t/  /g' $APLI
PXMLNLS -s $APLI '/audio_platform_info_intcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_HEADPHONES"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_intcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_SPEAKER_REVERSE"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_intcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_SPEAKER_PROTECTED"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_intcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_HEADPHONES_44_1"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_intcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_GAME_SPEAKER"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_intcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_GAME_HEADPHONES"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_intcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_BT_A2DP"]' "FLOAT"
PXMLNLS -u $APLI '/audio_platform_info_intcodec/app_types/app[@mode="default"]' "bit_width=FLOAT"
PXMLNLS -u $APLI '/audio_platform_info_intcodec/app_types/app[@mode="default"]' "max_rate=192000"
PXMLNLS -s $APLI '/audio_platform_info_intcodec/app_types/app[@mode="default"]' "bit_width=FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_intcodec/app_types/app[@mode="default"]' "max_rate=192000"
PXMLNLS -s $APLI '/audio_platform_info_extcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_HEADPHONES"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_extcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_SPEAKER_REVERSE"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_extcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_SPEAKER_PROTECTED"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_extcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_HEADPHONES_44_1"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_extcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_GAME_SPEAKER"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_extcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_GAME_HEADPHONES"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_extcodec/bit_width_configs/device[@name="SND_DEVICE_OUT_BT_A2DP"]' "FLOAT"
PXMLNLS -u $APLI '/audio_platform_info_extcodec/app_types/app[@mode="default"]' "bit_width=FLOAT"
PXMLNLS -u $APLI '/audio_platform_info_extcodec/app_types/app[@mode="default"]' "max_rate=192000"
PXMLNLS -s $APLI '/audio_platform_info_extcodec/app_types/app[@mode="default"]' "bit_width=FLOAT"
PXMLNLS -s $APLI '/audio_platform_info_extcodec/app_types/app[@mode="default"]' "max_rate=192000"
PXMLNLS -s $APLI '/audio_platform_info/bit_width_configs/device[@name="SND_DEVICE_OUT_HEADPHONES"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info/bit_width_configs/device[@name="SND_DEVICE_OUT_SPEAKER_REVERSE"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info/bit_width_configs/device[@name="SND_DEVICE_OUT_SPEAKER_PROTECTED"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info/bit_width_configs/device[@name="SND_DEVICE_OUT_HEADPHONES_44_1"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info/bit_width_configs/device[@name="SND_DEVICE_OUT_GAME_SPEAKER"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info/bit_width_configs/device[@name="SND_DEVICE_OUT_GAME_HEADPHONES"]' "FLOAT"
PXMLNLS -s $APLI '/audio_platform_info/bit_width_configs/device[@name="SND_DEVICE_OUT_BT_A2DP"]' "FLOAT"	 
PXMLNLS -u $APLI '/audio_platform_info/app_types/app[@mode="default"]' "bit_width=FLOAT"
PXMLNLS -u $APLI '/audio_platform_info/app_types/app[@mode="default"]' "max_rate=192000"
PXMLNLS -s $APLI '/audio_platform_info/app_types/app[@mode="default"]' "bit_width=FLOAT"
PXMLNLS -s $APLI '/audio_platform_info/app_types/app[@mode="default"]' "max_rate=192000"
if [ ! "$(grep '<app_types>' $APLI)" ]; then
sed -i "s/<\/audio_platform_info>/  <app_types> \n    <app uc_type=\"PCM_PLAYBACK\" mode=\"default\" bit_width=\"FLOAT\" id=\"69936\" max_rate=\"384000\" \/> \n    <app uc_type=\"PCM_PLAYBACK\" mode=\"default\" bit_width=\"FLOAT\" id=\"69940\" max_rate=\"384000\" \/> \n  <app_types> \n<\/audio_platform_info>/" $APLI
sed -i "s/<\/audio_platform_info_intcodec>/  <app_types> \n    <app uc_type=\"PCM_PLAYBACK\" mode=\"default\" bit_width=\"FLOAT\" id=\"69936\" max_rate=\"384000\" \/> \n    <app uc_type=\"PCM_PLAYBACK\" mode=\"default\" bit_width=\"FLOAT\" id=\"69940\" max_rate=\"384000\" \/> \n  <app_types> \n<\/audio_platform_info_intcodec>/" $APLI
sed -i "s/<\/audio_platform_info_extcodec>/  <app_types> \n    <app uc_type=\"PCM_PLAYBACK\" mode=\"default\" bit_width=\"FLOAT\" id=\"69936\" max_rate=\"384000\" \/> \n    <app uc_type=\"PCM_PLAYBACK\" mode=\"default\" bit_width=\"FLOAT\" id=\"69940\" max_rate=\"384000\" \/> \n  <app_types> \n<\/audio_platform_info_extcodec>/" $APLI
else
for i in 69936 69940; do
[ "$(XMLSTARLET sel -t -m "/audio_platform_info/app_types/app[@uc_type=\"PCM_PLAYBACK\"][@mode=\"default\"][@id=\"$i\"]" -c . $APLI)" ] || sed -i "/<audio_platform_info>/,/<\/audio_platform_info>/ {/<app_types>/,/<\/app_types>/ s/\(^ *\)\(<\/app_types>\)/\1  <app uc_type=\"PCM_PLAYBACK\" mode=\"default\" bit_width=\"FLOAT\" id=\"$i\" max_rate=\"384000\" \/> \n\1\2/}" $APLI
[ "$(XMLSTARLET sel -t -m "/audio_platform_info_intcodec/app_types/app[@uc_type=\"PCM_PLAYBACK\"][@mode=\"default\"][@id=\"$i\"]" -c . $APLI)" ] || sed -i "/<audio_platform_info_intcodec>/,/<\/audio_platform_info_intcodec>/ {/<app_types>/,/<\/app_types>/ s/\(^ *\)\(<\/app_types>\)/\1  <app uc_type=\"PCM_PLAYBACK\" mode=\"default\" bit_width=\"FLOAT\" id=\"$i\" max_rate=\"384000\" \/> \n\1\2/}" $APLI
[ "$(XMLSTARLET sel -t -m "/audio_platform_info_extcodec/app_types/app[@uc_type=\"PCM_PLAYBACK\"][@mode=\"default\"][@id=\"$i\"]" -c . $APLI)" ] || sed -i "/<audio_platform_info_extcodec>/,/<\/audio_platform_info_extcodec>/ {/<app_types>/,/<\/app_types>/ s/\(^ *\)\(<\/app_types>\)/\1  <app uc_type=\"PCM_PLAYBACK\" mode=\"default\" bit_width=\"FLOAT\" id=\"$i\" max_rate=\"384000\" \/> \n\1\2/}" $APLI
done
fi
UIP "Files Found And Patched"
done;;
esac
}

PATCH_COMPANDERS() {
UIP "Start PATCH_COMPANDERS" "Patching Needed Files..."
for OMIX in $MPATHS; do
UIP "Found $OMIX" "Patching..."
MIX="$MODPATH/$MODID$(echo $OMIX | sed "s|^/vendor|$MIPSV|g")"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="asr-mic"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc1"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc2"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="adc3"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="va-enroll-mic"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-ce"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-no-ce"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-karaoke"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="true-native-mode"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-generic"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-anc-fb-headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="aac-initial"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-on"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc2-on"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-off-headphone-combo"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voiceanc-headphone"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ADSP testfwk"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="deep-buffer-playback headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="COMP0 RX2 Switch"]' "0"	
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP0 RX1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP0 RX2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP1"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP2"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP0 RX1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="COMP0 RX2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="low-latency-playback headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Compress Playback 16 Volume"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Compress Playback 15 Volume"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Compress Playback 29 Volume"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Compress Playback 30 Volume"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Compress Playback 31 Volume"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Compress Playback 32 Volume"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Compress Playback 41 Volume"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Compress Playback 42 Volume"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Compress Playback 43 Volume"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Compress Playback 44 Volume"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Compress Playback 45 Volume"]' "0"
UIP "Files Found And Patched"
done
}

PATCH_AUDIO_CODEC() {
UIP "Start PATCH_AUDIO_CODEC"
if FINDER "$ACXML"; then
UIP "Patching Needed Files..."
for OACONF in $ACXML; do
UIP "Found $OACONF" "Patching..."
ACONF="$MODPATH/$MODID$(echo $OACONF | sed "s|^/vendor|$MIPSV|g")"
PXMLNLS -u $ACONF '/configs/property[@name="audio.offload.disable"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="audio.offload.min.duration.secs"]' "30"
PXMLNLS -u $ACONF '/configs/property[@name="persist.vendor.audio.sva.conc.enabled"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="persist.vendor.audio.va_concurrency_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.av.streaming.offload.enable"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.offload.track.enable"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.offload.multiple.enabled"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.rec.playback.conc.disabled"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.voice.conc.fallbackpath"]' ""
PXMLNLS -u $ACONF '/configs/property[@name="vendor.voice.dsd.playback.conc.disabled"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.voice.path.for.pcm.voip"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.voice.playback.conc.disabled"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.voice.record.conc.disabled"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.voice.voip.conc.disabled"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="audio_extn_formats_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="audio_extn_hdmi_spk_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="use_xml_audio_policy_conf"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="voice_concurrency"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="afe_proxy_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="compress_voip_enabled"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="fm_power_opt"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="record_play_concurrency"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.use.sw.alac.decoder"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.use.sw.ape.decoder"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.use.sw.mpegh.decoder"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.flac.sw.decoder.24bit"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vendor.audio.hw.aac.encoder"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="aac_adts_offload_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="alac_offload_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="ape_offload_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="flac_offload_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="pcm_offload_enabled_16"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="pcm_offload_enabled_24"]' "false"
PXMLNLS -u $ACONF '/configs/property[@name="qti_flac_decoder"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="vorbis_offload_enabled"]' "true"
PXMLNLS -u $ACONF '/configs/property[@name="wma_offload_enabled"]' "true"
UIP "Files Found And Patched"
done
fi
}

PATCH_DEVICE_FEATURES() {
UIP "Start PATCH_DEVICE_FEATURES" "Patching Needed Files..."
for ODEFE in $SDEVFE $VDEVFE; do
UIP "Found $ODEFE" "Patching..."
PDF="$MODPATH/$MODID$(echo $ODEFE | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $PDF`
cp -f $MAGISKMP$ODEFE $PDF
sed -i 's/\t/  /g' $PDF
PXMLNLS -s $PDF '/features/bool[@name="support_a2dp_latency"]' "true"
PXMLNLS -s $PDF '/features/bool[@name="support_samplerate_48000"]' "true"
PXMLNLS -s $PDF '/features/bool[@name="support_samplerate_96000"]' "true"
PXMLNLS -s $PDF '/features/bool[@name="support_samplerate_192000"]' "true"
PXMLNLS -s $PDF '/features/bool[@name="support_low_latency"]' "true"
PXMLNLS -s $PDF '/features/bool[@name="support_mid_latency"]' "false"
PXMLNLS -s $PDF '/features/bool[@name="support_high_latency"]' "false"
PXMLNLS -s $PDF '/features/bool[@name="support_interview_record_param"]' "false"
UIP "Files Found And Patched"
done
}

PATCH_DIRAC() {
UIP "Start PATCH_DIRAC" "Patching Needed Files..."
for OFILE in $AECONFXML; do
UIP "Found $OFILE" "Patching..."
FILE="$MODPATH/$MODID$(echo $OFILE | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $FILE`
cp -f $MAGISKMP$OFILE $FILE
OSP_DETECT $FILE
ALBP "dirac_gef" "$MODID" "$DYNLIBPATCH\/lib\/soundfx" "libdiraceffect.so" "3799D6D1-22C5-43C3-B3EC-D664CF8D2F0D"
PROCESSING_PATCH -post "$FILE" "music" "dirac_gef"
UIP "Files Found And Patched"
done
mkdir -p $MODPATH/$MODID$MIPSVED $MODPATH/$MODID$MIPSVLRA $MODPATH/$MODID$MIPSVLS
cp -f $NEWDIRAC/diracvdd.bin $MODPATH/$MODID$MIPSVE
cp -f $NEWDIRAC/interfacedb $MODPATH/$MODID$MIPSVED
cp -f $NEWDIRAC/dirac_resource.dar $MODPATH/$MODID$MIPSVLRA
cp -f $NEWDIRAC/libdirac-capiv2.so $MODPATH/$MODID$MIPSVLRA/dirac.so
cp -f $NEWDIRAC/libdirac-capiv2.so $MODPATH/$MODID$MIPSVLRA
cp -f $NEWDIRAC/libdiraceffect.so $MODPATH/$MODID$MIPSVLS
echo -e "\n# Patch Dirac
persist.dirac.acs.controller=gef
persist.dirac.gef.oppo.syss=true
persist.dirac.config=64
persist.dirac.gef.exs.did=50,50
persist.dirac.gef.ext.did=500,500,500,500
persist.dirac.gef.ins.did=0,0,0
persist.dirac.gef.int.did=0,0,0,0
persist.dirac.gef.ext.appt=0x00011130,0x00011134,0x00011136
persist.dirac.gef.exs.appt=0x00011130,0x00011131
persist.dirac.gef.int.appt=0x00011130,0x00011134,0x00011136
persist.dirac.gef.ins.appt=0x00011130,0x00011131
persist.dirac.gef.exs.mid=268512739
persist.dirac.gef.ext.mid=268512737
persist.dirac.gef.ins.mid=268512738
persist.dirac.gef.int.mid=268512736
persist.dirac.path=/vendor/etc/dirac
ro.dirac.acs.storeSettings=1
persist.dirac.acs.ignore_error=1
ro.audio.soundfx.dirac=true
persist.audio.dirac.speaker=true" >> $MODPATH/$MODID/system.prop
}

PATCH_MIXER() {
UIP "Start PATCH_MIXER" "Patching Needed Files..."
case $1 in
-nl) if [ "$RN5PRO" ] || [ "$MI9" ] || [ "$MI8" ] || [ "$MI8P" ] || [ "$MI9P" ] || [ "$MIA2" ]; then echo -e "\n# PATCH MIXER\nro.sound.alsa=TAS2557" >> $MODPATH/$MODID/system.prop; fi
for OMIX in $MPATHS; do
UIP "Found $OMIX" "Patching..."
MIX="$MODPATH/$MODID$(echo $OMIX | sed "s|^/vendor|$MIPSV|g")"
if [ "$RN5PRO" ] || [ "$MI9" ] || [ "$MI8" ] || [ "$MI8P" ] || [ "$MI9P" ] || [ "$MIA2" ]; then
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS2557 ClassD Edge"]' "7"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS2557 Volume"]' "30"
fi
PXMLNLS -u $MIX '/mixer/ctl[@name="Tfa Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="TFA Profile"]' "music"
PXMLNLS -s $MIX '/mixer/ctl[@name="DK Profile"]' "receiver"
PXMLNLS -s $MIX '/mixer/ctl[@name="TFA987X_ALGO_STATUS"]' "ENABLE"
PXMLNLS -s $MIX '/mixer/ctl[@name="TFA987X_TX_ENABLE"]' "ENABLE"
PXMLNLS -s $MIX '/mixer/ctl[@name="headphones"]/ctl[@name="PowerCtrl"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX INT1 MIX3 DSD HPHL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX INT2 MIX3 DSD HPHR Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="DSD_L Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="DSD_R Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX INT0 DEM MUX"]' "CLSH_DSM_OUT"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX INT1 DEM MUX"]' "CLSH_DSM_OUT"
PXMLNLS -s $MIX '/mixer/ctl[@name="RCV AMP PCM Gain"]' "20"
PXMLNLS -s $MIX '/mixer/ctl[@name="AMP PCM Gain"]' "20"
PXMLNLS -s $MIX '/mixer/ctl[@name="RCV Boost Target Voltage"]' "170"
PXMLNLS -s $MIX '/mixer/ctl[@name="Boost Target Voltage"]' "170"
PXMLNLS -s $MIX '/mixer/ctl[@name="Amp DSP Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="BDE AMP Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="Amp Volume Location"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="Ext Spk Boost"]' "ENABLE"
PXMLNLS -s $MIX '/mixer/ctl[@name="PowerCtrl"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Adsp Working Mode"]' "full"
PXMLNLS -s $MIX '/mixer/ctl[@name="Adsp Working Mode"]' "full"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX_Native"]' "ON"
PXMLNLS -s $MIX '/mixer/ctl[@name="HPH Idle Detect"]' "ON"
PXMLNLS -s $MIX '/mixer/ctl[@name="Set Custom Stereo OnOff"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="HiFi Function"]' "On"
PXMLNLS -s $MIX '/mixer/ctl[@name="HiFi Filter"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="A2DP_SLIM7_UL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIM7_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM RX0 MUX"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM RX1 MUX"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM RX2 MUX"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM RX3 MUX"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM RX4 MUX"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM RX5 MUX"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM RX6 MUX"]' "ZERO"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM RX7 MUX"]' "ZERO"
PXMLNLS -s $MIX '/mixer/ctl[@name="App Type Gain"]' "8192"
PXMLNLS -s $MIX '/mixer/ctl[@name="Audiosphere Enable"]' "Off"
PXMLNLS -s $MIX '/mixer/ctl[@name="MSM ASphere Set Param"]' "0"
if [ "$POCOX3" ]; then
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X PLAYBACK VOLUME LEFT"]' "78"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X LIM MAX ATTN LEFT"]' "0"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X LIM INFLECTION POINT LEFT"]' "0"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X LIM ATTACT RATE LEFT"]' "0"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X LIM RELEASE RATE LEFT"]' "7"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X LIM ATTACK STEP LEFT"]' "0"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X LIM RELEASE STEP LEFT"]' "3"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X RX MODE LEFT"]' "Receiver"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X BOOST VOLTAGE LEFT"]' "15"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X BOOST CURRENT LEFT"]' "66"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X PLAYBACK VOLUME RIGHT"]' "66"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X LIM MAX ATTN RIGHT"]' "0"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X LIM INFLECTION POINT RIGHT"]' "0"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X LIM ATTACT RATE RIGHT"]' "0"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X LIM RELEASE RATE RIGHT"]' "7"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X LIM ATTACK STEP RIGHT"]' "0"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X LIM RELEASE STEP RIGHT"]' "3"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X BOOST VOLTAGE RIGHT"]' "15"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X BOOST CURRENT RIGHT"]' "66"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X VBAT LPF LEFT"]' "DISABLE"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256X VBAT LPF RIGHT"]' "DISABLE"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS256x Profile id"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS25XX_SMARTPA_ENABLE"]' "ENABLE"
PXMLNLS -s $MIX '/mixer/ctl[@name="Amp Output Level"]' "22"
PXMLNLS -s $MIX '/mixer/ctl[@name="TAS25XX_ALGO_PROFILE"]' "MUSIC"
fi
UIP "Files Found And Patched"
done;;
-aist) for OMIX in $MPATHS; do
UIP "Found $OMIX" "Patching..."
MIX="$MODPATH/$MODID$(echo $OMIX | sed "s|^/vendor|$MIPSV|g")"
if $HIFI; then
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="top-speaker"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="bottom-speaker"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="hph-hifi-mode"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -s $MIX '/mixer/path[@name="hph-hifi-mode"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="hph-highquality-mode"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -s $MIX '/mixer/path[@name="hph-highquality-mode"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="hph-lowpower-mode"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -s $MIX '/mixer/path[@name="hph-lowpower-mode"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="hph-class-ab-mode"]/ctl[@name="RX HPH Mode"]' "CLS_AB_HIFI"
PXMLNLS -s $MIX '/mixer/path[@name="hph-class-ab-mode"]/ctl[@name="RX HPH Mode"]' "CLS_AB_HIFI"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headset"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -s $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="RX HPH Mode"]' "CLS_H_LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="top-speaker"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="bottom-speaker"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="hph-hifi-mode"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -s $MIX '/mixer/path[@name="hph-hifi-mode"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="hph-highquality-mode"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -s $MIX '/mixer/path[@name="hph-highquality-mode"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="hph-lowpower-mode"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -s $MIX '/mixer/path[@name="hph-lowpower-mode"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headset"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -s $MIX '/mixer/path[@name="voice-headset"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
PXMLNLS -s $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="RX_HPH_PWR_MODE"]' "LOHIFI"
else
PXMLNLS -s $MIX '/mixer/ctl[@name="RX_HPH_PWR_MODE"]' "HIRES"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX HPH Mode"]' "HD2"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_HPH_PWR_MODE"]' "HIRES"
PXMLNLS -s $MIX '/mixer/ctl[@name="VBoost Ctrl"]' "AlwaysOn"
PXMLNLS -u $MIX '/mixer/ctl[@name="HPHL"]' "Switch"
PXMLNLS -u $MIX '/mixer/ctl[@name="HPHR"]' "Switch"
PXMLNLS -u $MIX '/mixer/ctl[@name="Load acoustic model"]' "1"
fi
PXMLNLS -u $MIX '/mixer/ctl[@name="Voice Sidetone Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="MSM ASphere Set Param"]' "0"
PXMLNLS -s $MIX '/mixer/ctl[@name="MSM ASphere Set Param"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Codec Wideband"]' "0"
PXMLNLS -s $MIX '/mixer/ctl[@name="Codec Wideband"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="Set Custom Stereo OnOff"]' "0"
PXMLNLS -s $MIX '/mixer/ctl[@name="Set Custom Stereo OnOff"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="HiFi Function"]' "On"
PXMLNLS -s $MIX '/mixer/ctl[@name="HiFi Function"]' "On"
PXMLNLS -u $MIX '/mixer/ctl[@name="Custom Filter"]' "ON"
PXMLNLS -s $MIX '/mixer/ctl[@name="Custom Filter"]' "ON"
PXMLNLS -u $MIX '/mixer/ctl[@name="Filter Shape"]' "Slow Rolloff"
PXMLNLS -s $MIX '/mixer/ctl[@name="Filter Shape"]' "Slow Rolloff"
PXMLNLS -u $MIX '/mixer/ctl[@name="EC Reference Channels"]' "Zero"
PXMLNLS -u $MIX '/mixer/ctl[@name="EC Reference Bit Format"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="EC Reference SampleRate"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="SpkrLeft BOOST Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SpkrRight BOOST Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SpkrLeft VISENSE Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SpkrRight VISENSE Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SpkrLeft SWR DAC_Port Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SpkrRight SWR DAC_Port Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="ANC OUT HPHL Enable Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="ANC OUT HPHR Enable Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="Virtual Bass Boost"]' "On"
PXMLNLS -s $MIX '/mixer/ctl[@name="Virtual Bass Boost"]' "On"
PXMLNLS -s $MIX '/mixer/ctl[@name="WSA_RX0 EC_HQ Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="WSA_RX1 EC_HQ Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="WSA_RX3 EC_HQ Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="WSA_RX4 EC_HQ Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX INT1 SEC MIX HPHL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX INT2 SEC MIX HPHR Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX INT3 SEC MIX LO1 Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX INT4 SEC MIX LO2 Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX INT1 MIX3 DSD HPHL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX INT2 MIX3 DSD HPHR Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX INT0 DEM MUX"]' "CLSH_DSM_OUT"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX INT1 DEM MUX"]' "CLSH_DSM_OUT"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX INT2 DEM MUX"]' "CLSH_DSM_OUT"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX INT3 DEM MUX"]' "CLSH_DSM_OUT"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX INT4 DEM MUX"]' "CLSH_DSM_OUT"
PXMLNLS -u $MIX '/mixer/ctl[@name="HPH Idle Detect"]' "ON"
PXMLNLS -s $MIX '/mixer/ctl[@name="HPH Idle Detect"]' "ON"
PXMLNLS -u $MIX '/mixer/ctl[@name="HPHL_RDAC Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="HPHR_RDAC Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="A2DP_SLIM7_UL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="PCM_RX_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="USB_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIM7_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="A2DP_SLIM7_UL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="PCM_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="USB_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM_7_RX Format"]' "S24_LE"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM_7_RX SampleRate"]' "KHZ_192"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM_7_RX Channels"]' "Two"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS_7_RX Format"]' "S24_LE"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS_7_RX SampleRate"]' "KHZ_192"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS_7_RX Channels"]' "Two"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIM_7_RX Format"]' "S24_LE"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIM_7_RX SampleRate"]' "KHZ_192"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIM_7_RX Channels"]' "Two"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIMBUS_7_RX Format"]' "S24_LE"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIMBUS_7_RX SampleRate"]' "KHZ_192"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIMBUS_7_RX Channels"]' "Two"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM7_RX ADM Format"]' "S24_LE"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM7_RX ADM SampleRate"]' "KHZ_192"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM7_RX ADM Channels"]' "Two"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS7_RX ADM Format"]' "S24_LE"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS7_RX ADM SampleRate"]' "KHZ_192"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS7_RX ADM Channels"]' "Two"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIM7_RX ADM Format"]' "S24_LE"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIM7_RX ADM SampleRate"]' "KHZ_192"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIM7_RX ADM Channels"]' "Two"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIMBUS7_RX ADM Format"]' "S24_LE"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIMBUS7_RX ADM SampleRate"]' "KHZ_192"
PXMLNLS -s $MIX '/mixer/ctl[@name="SLIMBUS7_RX ADM Channels"]' "Two"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIM7_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SCO_SLIM7_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="SCO_SLIM7_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="HFP_SLIM7_UL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="HFP_PRI_AUX_UL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="HFP_AUX_UL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="HFP_INT_UL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS0_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS1_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS2_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS3_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS4_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS5_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS6_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SLIMBUS7_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="INT0_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="INT1_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="INT2_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="INT3_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="INT4_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="PRI_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SEC_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="TERT_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="QUAT_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="QUIN_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="SEN_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_CDC_DMA_RX_0_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_CDC_DMA_RX_0_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_CDC_DMA_RX_1_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="RCV Boost Class-H Tracking Enable"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="TH Boost Class-H Tracking Enable"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="TL Boost Class-H Tracking Enable"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="BH Boost Class-H Tracking Enable"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="BL Boost Class-H Tracking Enable"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="echo-reference"]/ctl[@name="EC Reference Bit Format"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="echo-reference"]/ctl[@name="EC Reference SampleRate"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="echo-reference"]/ctl[@name="EC Reference Channels"]' "Zero"
PXMLNLS -u $MIX '/mixer/path[@name="echo-reference headset"]/ctl[@name="EC Reference Bit Format"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="echo-reference headset"]/ctl[@name="EC Reference SampleRate"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="echo-reference headset"]/ctl[@name="EC Reference Channels"]' "Zero"
PXMLNLS -u $MIX '/mixer/path[@name="echo-reference a2dp"]/ctl[@name="EC Reference Bit Format"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="echo-reference a2dp"]/ctl[@name="EC Reference SampleRate"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="echo-reference a2dp"]/ctl[@name="EC Reference Channels"]' "Zero"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-suspend"]/ctl[@name="Mi_Ultrasound Suspend"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-suspend"]/ctl[@name="Ultrasound Suspend"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS0_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS1_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS2_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS3_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS4_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS5_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS6_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS7_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="INT0_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="INT1_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="INT2_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="INT3_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="INT4_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="PRI_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SEC_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="TERT_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="QUAT_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="QUIN_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SEN_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="WSA_CDC_DMA_RX_0_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="WSA_CDC_DMA_RX_1_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="RX_CDC_DMA_RX_0_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="RX_CDC_DMA_RX_1_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="USB_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIM7_RX_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SCO_SLIM7_DL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="A2DP_SLIM7_UL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="HFP_SLIM7_UL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="HFP_PRI_AUX_UL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="HFP_AUX_UL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="HFP_INT_UL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS0_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS1_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS2_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS3_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS4_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS5_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS6_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIMBUS7_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="INT0_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="INT1_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="INT2_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="INT3_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="INT4_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="PRI_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SEC_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="TERT_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="QUAT_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="QUIN_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SEN_MI2S_RX_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="WSA_CDC_DMA_RX_0_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="WSA_CDC_DMA_RX_1_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="RX_CDC_DMA_RX_0_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="RX_CDC_DMA_RX_1_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="USB_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SLIM7_RX_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="SCO_SLIM7_DL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="A2DP_SLIM7_UL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="HFP_SLIM7_UL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="HFP_PRI_AUX_UL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="HFP_AUX_UL_HL Switch"]' "1"
PXMLNLS -s $MIX '/mixer/path[@name="ultrasound-proximity-output"]/ctl[@name="HFP_INT_UL_HL Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-and-headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="speaker-mono-2"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="handset"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="ultrasound-handset"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-and-haptics"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-44.1"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-dsd"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="anc-headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="voice-headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP3 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP4 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP5 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP6 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP7 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="COMP8 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="SpkrLeft COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="SpkrRight COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="WSA_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="WSA_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="RX_COMP1 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="RX_COMP2 Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="HPHL_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/path[@name="tty-headphones"]/ctl[@name="HPHR_COMP Switch"]' "0"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band1"][@id="0"]' "268833620"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band1"][@id="1"]' "537398060"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band1"][@id="2"]' "267510580"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band1"][@id="3"]' "537398060"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band1"][@id="4"]' "267908744"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band2"][@id="0"]' "266468108"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band2"][@id="1"]' "544862876"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band2"][@id="2"]' "262421829"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band2"][@id="3"]' "544862876"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band2"][@id="4"]' "260454481"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band3"][@id="0"]' "262913321"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band3"][@id="1"]' "559557058"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band3"][@id="2"]' "252311547"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band3"][@id="3"]' "559557058"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band3"][@id="4"]' "246789412"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band4"][@id="0"]' "294517138"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band4"][@id="1"]' "572289454"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band4"][@id="2"]' "210943778"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band4"][@id="3"]' "572289454"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band4"][@id="4"]' "237025461"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band5"][@id="0"]' "329006442"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band5"][@id="1"]' "711929387"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band5"][@id="2"]' "110068469"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band5"][@id="3"]' "711929387"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Band5"][@id="4"]' "170639455"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Enable Band0"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Enable Band1"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Enable Band2"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Enable Band3"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Enable Band4"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 Enable Band5"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP0 Volume"]' "92"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP1 Volume"]' "92"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP2 Volume"]' "92"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP3 Volume"]' "92"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP4 Volume"]' "92"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR0 INP5 Volume"]' "92"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band1"][@id="0"]' "268833620"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band1"][@id="1"]' "537398060"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band1"][@id="2"]' "267510580"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band1"][@id="3"]' "537398060"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band1"][@id="4"]' "267908744"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band2"][@id="0"]' "266468108"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band2"][@id="1"]' "544862876"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band2"][@id="2"]' "262421829"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band2"][@id="3"]' "544862876"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band2"][@id="4"]' "260454481"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band3"][@id="0"]' "262913321"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band3"][@id="1"]' "559557058"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band3"][@id="2"]' "252311547"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band3"][@id="3"]' "559557058"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band3"][@id="4"]' "246789412"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band4"][@id="0"]' "294517138"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band4"][@id="1"]' "572289454"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band4"][@id="2"]' "210943778"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band4"][@id="3"]' "572289454"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band4"][@id="4"]' "237025461"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band5"][@id="0"]' "329006442"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band5"][@id="1"]' "711929387"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band5"][@id="2"]' "110068469"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band5"][@id="3"]' "711929387"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Band5"][@id="4"]' "170639455"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Enable Band0"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Enable Band1"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Enable Band2"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Enable Band3"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Enable Band4"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 Enable Band5"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 INP0 Volume"]' "92"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 INP1 Volume"]' "92"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 INP2 Volume"]' "92"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 INP3 Volume"]' "92"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 INP4 Volume"]' "92"
PXMLNLS -u $MIX '/mixer/ctl[@name="IIR1 INP5 Volume"]' "92"
PXMLNLS -u $MIX '/mixer/ctl[@name="AUX_HPF Enable"]' "Off"
PXMLNLS -s $MIX '/mixer/ctl[@name="AUX_HPF Enable"]' "Off"
PXMLNLS -u $MIX '/mixer/ctl[@name="A2DP_HPF Enable"]' "Off"
PXMLNLS -s $MIX '/mixer/ctl[@name="A2DP_HPF Enable"]' "Off"
PXMLNLS -u $MIX '/mixer/ctl[@name="BT_HPF Enable"]' "Off"
PXMLNLS -s $MIX '/mixer/ctl[@name="BT_HPF Enable"]' "Off"
PXMLNLS -u $MIX '/mixer/ctl[@name="HPF Enable"]' "Off"
PXMLNLS -s $MIX '/mixer/ctl[@name="HPF Enable"]' "Off"
PXMLNLS -u $MIX '/mixer/ctl[@name="LDOH Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="LDOH Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="LPI Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="LPI Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="ST Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="ST Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="BDE Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="BDE AMP Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="BDE Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="BDE AMP Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="Amp DSP Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="Amp DSP Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="DRE En"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="DRE En"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RCV DRE DRE Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="RCV DRE DRE Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="TH DRE DRE Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="TH DRE DRE Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="TL DRE DRE Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="TL DRE DRE Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="BH DRE DRE Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="BH DRE DRE Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="BL DRE DRE Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="BL DRE DRE Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RCV Boost Class-H Tracking Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="RCV Boost Class-H Tracking Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RCV AMP Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="RCV AMP Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RCV AMP Enable Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="RCV AMP Enable Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="Boost Class-H Tracking Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="Boost Class-H Tracking Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMP Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="AMP Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="AMP Enable Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="AMP Enable Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="TH Boost Class-H Tracking Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="TH Boost Class-H Tracking Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="TH AMP Enable Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="TH AMP Enable Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="TL Boost Class-H Tracking Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="TL Boost Class-H Tracking Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="TL AMP Enable Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="TL AMP Enable Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="BH Boost Class-H Tracking Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="BH Boost Class-H Tracking Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="BH AMP Enable Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="BH AMP Enable Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="BL Boost Class-H Tracking Enable"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="BL Boost Class-H Tracking Enable"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="BL AMP Enable Switch"]' "1"
PXMLNLS -s $MIX '/mixer/ctl[@name="BL AMP Enable Switch"]' "1"
PXMLNLS -u $MIX '/mixer/ctl[@name="RX_FIR Filter"]' "ON"
PXMLNLS -s $MIX '/mixer/ctl[@name="RX_FIR Filter"]' "ON"
PXMLNLS -u $MIX '/mixer/path[@name="headphones-hifi-filter"]/ctl[@name="RX_FIR Filter"]' "ON"
PXMLNLS -s $MIX '/mixer/path[@name="headphones-hifi-filter"]/ctl[@name="RX_FIR Filter"]' "ON"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="AFE Input Channels"]' "Two"
PXMLNLS -s $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="AFE Input Channels"]' "Two"
PXMLNLS -u $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="TWS Channel Mode"]' "Two"
PXMLNLS -s $MIX '/mixer/path[@name="bt-a2dp"]/ctl[@name="TWS Channel Mode"]' "Two"
PXMLNLS -u $MIX '/mixer/ctl[@name="TWS Channel Mode"]' "Two"
PXMLNLS -s $MIX '/mixer/ctl[@name="TWS Channel Mode"]' "Two"
UIP "Files Found And Patched"
done;;
esac
if $PATCHMC && FINDER "$MCGAX"; then
UIP "Patching Needed Files..."
for MCGAXP in $MCGAX; do
UIP "Found $MCGAXP" "Patching..."
MCGAX="$MODPATH/$MODID$(echo $MCGAXP | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $MCGAX`
cp -f $MAGISKMP$MCGAXP $MCGAX
case $MCGAX in
*media_codecs_google_audio*.xml) sed -i 's/\" >/\">/g;/aac.encoder/,/c>/s/\">/\">\n            <Limit name=\"complexity\" range=\"0-8\"  default=\"8\"\/>/g;/aac.encoder/,/c>/s/\">/\">\n            <Feature name=\"bitrate-modes\" value=\"CQ\"\/>/g;/flac.encoder/,/<\/MediaCodec>/s/default.*/default=\"8\"\/>/g;/flac.encoder/,/<\/MediaCodec>/s/value.*/value=\"CQ\"\/>/g' $MCGAX
sed -i 's/\" >/\">/g;/vorbis.decoder/,/c>/s/\">/\">\n            <Limit name=\"complexity\" range=\"0-8\"  default=\"8\"\/>/g;/vorbis.decoder/,/c>/s/\">/\">\n            <Feature name=\"bitrate-modes\" value=\"CQ\"\/>/g;/flac.decoder/,/<\/MediaCodec>/s/default.*/default=\"8\"\/>/g;/flac.decoder/,/<\/MediaCodec>/s/value.*/value=\"CQ\"\/>/g' $MCGAX
sed -i 's/\" >/\">/g;/aac.decoder/,/c>/s/\">/\">\n            <Limit name=\"complexity\" range=\"0-8\"  default=\"8\"\/>/g;/aac.decoder/,/c>/s/\">/\">\n            <Feature name=\"bitrate-modes\" value=\"CQ\"\/>/g;/flac.encoder/,/<\/MediaCodec>/s/default.*/default=\"8\"\/>/g;/flac.encoder/,/<\/MediaCodec>/s/value.*/value=\"CQ\"\/>/g' $MCGAX;;
*media_codecs_google_c2_audio*.xml) sed -i 's/\" >/\">/g;/aac.encoder/,/c>/s/\">/\">\n            <Limit name=\"complexity\" range=\"0-8\"  default=\"8\"\/>/g;/aac.encoder/,/c>/s/\">/\">\n            <Feature name=\"bitrate-modes\" value=\"CQ\"\/>/g;/flac.encoder/,/<\/MediaCodec>/s/default.*/default=\"8\"\/>/g;/flac.encoder/,/<\/MediaCodec>/s/value.*/value=\"CQ\"\/>/g' $MCGAX
sed -i 's/\" >/\">/g;/vorbis.decoder/,/c>/s/\">/\">\n            <Limit name=\"complexity\" range=\"0-8\"  default=\"8\"\/>/g;/vorbis.decoder/,/c>/s/\">/\">\n            <Feature name=\"bitrate-modes\" value=\"CQ\"\/>/g;/flac.decoder/,/<\/MediaCodec>/s/default.*/default=\"8\"\/>/g;/flac.decoder/,/<\/MediaCodec>/s/value.*/value=\"CQ\"\/>/g' $MCGAX
sed -i 's/\" >/\">/g;/aac.encoder/,/c>/s/\">/\">\n            <Limit name=\"complexity\" range=\"0-8\"  default=\"8\"\/>/g;/aac.encoder/,/c>/s/\">/\">\n            <Feature name=\"bitrate-modes\" value=\"CQ\"\/>/g;/flac.encoder/,/<\/MediaCodec>/s/default.*/default=\"8\"\/>/g;/flac.encoder/,/<\/MediaCodec>/s/value.*/value=\"CQ\"\/>/g' $MCGAX;;
*media_codecs_vendor_audio*.xml) sed -i 's/\" >/\">/g;/aac.encoder/,/c>/s/\">/\">\n            <Limit name=\"complexity\" range=\"0-8\"  default=\"8\"\/>/g;/aac.encoder/,/c>/s/\">/\">\n            <Feature name=\"bitrate-modes\" value=\"CQ\"\/>/g;/flac.encoder/,/<\/MediaCodec>/s/default.*/default=\"8\"\/>/g;/flac.encoder/,/<\/MediaCodec>/s/value.*/value=\"CQ\"\/>/g' $MCGAX
sed -i 's/\" >/\">/g;/vorbis.decoder/,/c>/s/\">/\">\n            <Limit name=\"complexity\" range=\"0-8\"  default=\"8\"\/>/g;/vorbis.decoder/,/c>/s/\">/\">\n            <Feature name=\"bitrate-modes\" value=\"CQ\"\/>/g;/flac.decoder/,/<\/MediaCodec>/s/default.*/default=\"8\"\/>/g;/flac.decoder/,/<\/MediaCodec>/s/value.*/value=\"CQ\"\/>/g' $MCGAX
sed -i 's/\" >/\">/g;/aac.encoder/,/c>/s/\">/\">\n            <Limit name=\"complexity\" range=\"0-8\"  default=\"8\"\/>/g;/aac.encoder/,/c>/s/\">/\">\n            <Feature name=\"bitrate-modes\" value=\"CQ\"\/>/g;/flac.encoder/,/<\/MediaCodec>/s/default.*/default=\"8\"\/>/g;/flac.encoder/,/<\/MediaCodec>/s/value.*/value=\"CQ\"\/>/g' $MCGAX;;
esac
UIP "Files Found And Patched"
done
else
mkdir -p $MODPATH/$MODID$MIPSVE
cp -f $TMPDIR/NLSound/*.xml $MODPATH/$MODID$MIPSVE
fi
}

PATCH_IO_POLICY(){
UIP "Start PATCH_IO_POLICY" "Patching Needed Files..."
for OIOPOLICY in $AIPCONFA; do
UIP "Found $OIOPOLICY" "Patching..."
AIPCONFA="$MODPATH/$MODID$(echo $OIOPOLICY | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $AIPCONFA`
cp -f $MAGISKMP$OIOPOLICY $AIPCONFA
sed -i 's/AUDIO_OUTPUT_FLAG_DIRECT/AUDIO_OUTPUT_FLAG_DIRECT_PCM/g' $AIPCONFA
sed -i 's/AUDIO_OUTPUT_FLAG_DIRECT_PCM_PCM/AUDIO_OUTPUT_FLAG_DIRECT_PCM/g' $AIPCONFA
UIP "Files Found And Patched"
done
}

PATCH_AUDIO_POLICY() {
UIP "Start PATCH_AUDIO_POLICY" "Patching Needed Files..."
for OAUDIOPOLICY in $APCXML; do
UIP "Found $OAUDIOPOLICY" "Patching..."
APCXML="$MODPATH/$MODID$(echo $OAUDIOPOLICY | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $APCXML`
cp -f $MAGISKMP$OAUDIOPOLICY $APCXML
sed -i 's/speaker_drc_enabled="true"/speaker_drc_enabled="false"/g' $APCXML
UIP "Files Found And Patched"
done
}

PATCH_IMPROVE_BLUETOOTH() {
UIP "Start PATCH_IMPROVE_BLUETOOTH"
echo -e "\n# Improve Bluetooth
audio.effect.a2dp.enable=1
vendor.audio.effect.a2dp.enable=1
qcom.hw.aac.encoder=true
vendor.audio.hw.aac.encoder=true
persist.service.btui.use_aptx=1
persist.bt.enableAptXHD=true
persist.bt.a2dp.aptx_disable=false
persist.bt.a2dp.aptx_hd_disable=false
persist.bt.a2dp.aac_disable=false
persist.bt.sbc_hd_enabled=1
persist.vendor.btstack.enable.lpa=false
persist.vendor.bt.a2dp.aac_whitelist=false
persist.vendor.bt.aac_frm_ctl.enabled=true
persist.vendor.bt.aac_vbr_frm_ctl.enabled=true
persist.vendor.qcom.bluetooth.aac_frm_ctl.enabled=true
persist.vendor.btstack.enable.twsplussho=true
persist.vendor.qcom.bluetooth.twsp_state.enabled=false
persist.bluetooth.disableabsvol=true
persist.bluetooth.sbc_hd_higher_bitrate=1
persist.sys.fflag.override.settings_bluetooth_hearing_aid=true" >> $MODPATH/$MODID/system.prop
}

PUSBAPCXML() {
if [ "$($XMLSTARLET sel -t -m "$3" -c . $2)" ]; then
[ "$($XMLSTARLET sel -t -m "$3" -c . $2 | sed -r "s/.*samplingRates=\"([0-9]*)\".*/\1/")" == "48000" ] && return
case $1 in
-l) $XMLSTARLET ed -L -i "$3" -t elem -n "$MODID" $2
local LN=$(sed -n "/<$MODID\/>/=" $2)
for i in $LN; do
sed -i "$i d" $2
sed -i "$i p" $2
sed -ri "${i}s/(^ *)(.*)/\1<!--$MODID\2$MODID-->/" $2
sed -i "$((i+1))s/$/<!--$MODID-->/" $2
done;;
-f) $XMLSTARLET ed -L -u "$3/@samplingRates" -v "48000" $2;;
esac
else
case $1 in
-l) local NP=$(echo "$3" | sed -r "s|(^.*)/.*$|\1|"); local SNP=$(echo "$3" | sed -r "s|(^.*)\[.*$|\1|"); local SN=$(echo "$3" | sed -r "s|^.*/.*/(.*)\[.*$|\1|")
$XMLSTARLET ed -L -s "$NP" -t elem -n "$SN-$MODID" -i "$SNP-$MODID" -t attr -n "name" -v "" -i "$SNP-$MODID" -t attr -n "format" -v "AUDIO_FORMAT_PCM_16_BIT" -i "$SNP-$MODID" -t attr -n "samplingRates" -v "48000" -i "$SNP-$MODID" -t attr -n "channelMasks" -v "AUDIO_CHANNEL_OUT_STEREO" $2
$XMLSTARLET ed -L -r "$SNP-$MODID" -v "$SN" $2;;
-f) $XMLSTARLET ed -L -i "$3" -t elem -n "$MODID" $2
local LN=$(sed -n "/<$MODID\/>/=" $2)
for i in $LN; do
sed -i "$i d" $2
sed -ri "${i}s/$/<!--$MODID-->/" $2
done;;
esac
fi
case $1 in
-f) local LN=$(sed -n "/^ *<!--$MODID-->$/=" $2 | tac)
for i in $LN; do
sed -i "$i d" $2
sed -ri "$((i-1))s/$/<!--$MODID-->/" $2
done;;
esac
}

SP_CHECKER() {
if [ $BOOTMODE != true ] && [ ! -f $XMLSECURE ] && [ ! -f $XMLGLOBAL ] && [ ! -f $XMLSYSTEM ]; then
return 0
else
for f in $1; do
for af in $2; do
if [ -f $f ]; then
if grep $af $f >/dev/null; then
return 0
fi
fi
done
done
fi
return 1
}

MMUPD_LIST() {
#UI: Pills/NavBar/Gboard/Themes/BA/Sounds
MMUPD_CHECKER "$IDPO" "$VIPPO" "IPPOS"
MMUPD_CHECKER "$IDPCO" "$VIPPCO" "IPPCOS"
MMUPD_CHECKER "$IDPHOS" "$VIPPHO" "IPPHOS"
MMUPD_CHECKER "$IDPSHNB" "$VIPPSHNB" "IPPSHNBS"
MMUPD_CHECKER "$IDBGDS" "$VIPBGD" "IPBGDS"
MMUPD_CHECKER "$IDGBNBS" "$VIPGBNBS" "IPGBNBSS"
MMUPD_CHECKER "$IDGBRC" "$VIPGBRC" "IPGBRCS"
MMUPD_CHECKER "$IDGBT" "$VIPGBT" "IPGBTS"
MMUPD_CHECKER "$IDGBSTE" "$VIPGBSTE" "IPGBSTES"
MMUPD_CHECKER "$IDSBINNI" "$VIPSBINNI" "IPSBINNIS"
MMUPD_CHECKER "$IDGPPM" "$VIPGPPM" "IPGPPMS"
MMUPD_CHECKER "$IDRUI" "$VIPRUI" "IPRUIS"
MMUPD_CHECKER "$IDBIP" "$VIPBIP" "IPBIPS"
MMUPD_CHECKER "$IDNSP" "$VIPNSP" "IPNSPS"
MMUPD_CHECKER "$IDSBIS" "$VIPSBIS" "IPSBISS"
MMUPD_CHECKER "$IDSBCS" "$VIPSBCS" "IPSBCSS"
MMUPD_CHECKER "$IDSUE" "$VIPSUE" "IPSUES"
MMUPD_CHECKER "$IDSBP" "$VIPSBP" "IPSBPS"
MMUPD_CHECKER "$IDQSCP" "$VIPQSCP" "IPQSCPS"
MMUPD_CHECKER "$IDSUIRSRS" "$VIPSUIRSRS" "IPSUIRSRSS"
MMUPD_CHECKER "$IDQSCIAR" "$VIPQSCIAR" "IPQSCIARS"
MMUPD_CHECKER "$IDEBB" "$VIPEBB" "IPEBBS"
MMUPD_CHECKER "$IDBA" "$VIPBA" "IPBAS"
MMUPD_CHECKER "$IDIOSEMOJI" "$VIPIOSEMOJI" "IPIOSEMOJIS"
MMUPD_CHECKER "$IDMUIS" "$VIPMUIS" "IPMUISS"
MMUPD_CHECKER "$IDFDNI" "$VIPFDNI" "IPFDNIS"
MMUPD_CHECKER "$IDWFAMDQSSC" "$VIPWFAMDQSSC" "IPWFAMDQSSCS"
#Apps: Lawnchair/Shady/IA
MMUPD_CHECKER "$IDSL" "$VIPSL" "IPSLS"
if $AELEVEN; then MMUPD_CHECKER -c "$IDSSL" "$VIPSSLR" "$VCIPSSLR" "IPSLS"; fi
#Audio: VFX(P)/NL/AIST/SAQ/IB/AML
MMUPD_CHECKER -c "$IDVFXL" "$VIPVFXL" "$VCIPVFXL" "IPVFXS"
MMUPD_CHECKER -c "$IDVFX" "$VIPVFX" "$VCIPVFX" "IPVFXS"
MMUPD_CHECKER "$IDVFXP" "$VIPVFXP" "IPVFXPS"
MMUPD_CHECKER -c "$IDNLS" "$VIPNLS" "$VCIPNLS" "IPNLSS"
MMUPD_CHECKER -c "$IDAIST" "$VIPAIST" "$VCIPAIST" "IPAISTS"
MMUPD_CHECKER -c "$IDSAQ" "$VIPSAQ" "$VCIPSAQ" "IPSAQS"
MMUPD_CHECKER "$IDIBS" "$VIPIBS" "IPIBS"
MMUPD_CHECKER -c "$IDAML" "$VIPAML" "$VCIPAML" "IPAMLS"
#AdBlock/Hosts
MMUPD_CHECKER -c "$IDDAB" "$VIPDAB" "$VCIPDAB" "IPHFS"
MMUPD_CHECKER "$IDVAAH" "$VIPVAAH" "IPHFS"
MMUPD_CHECKER -c "$IDVSH" "$VIPVSH" "$VCIPVSH" "IPHFS"
MMUPD_CHECKER "$IDVOH" "$VIPVOH" "IPHFS"
#Net: GPS/WIFI/TTL/DNS/APAUSBTF
MMUPD_CHECKER "$IDGPSP" "$VIPGPSP" "IPGPSPS"
MMUPD_CHECKER "$IDWIFIP" "$VIPWIFIP" "IPWIFIPS"
MMUPD_CHECKER -c "$IDTTLF" "$VIPTTLF" "$VCIPTTLF" "IPTTLFS"
MMUPD_CHECKER -c "$IDNT" "$VIPNT" "$VCIPNT" "IPNTS"
MMUPD_CHECKER "$IDAPAUSBTF" "$VIPAPAUSBTF" "IPAPAUSBTFS"
#Utilities: BB/SELC/CC/MMFR
MMUPD_CHECKER -c "$IDBB" "$VIPBB" "$VCIPBB" "IPBBS"
MMUPD_CHECKER "$IDSELC" "$VIPSELC" "IPSELCS"
MMUPD_CHECKER "$IDCC" "$VIPCC" "IPCCS"
MMUPD_CHECKER "$IDMMFR" "$VIPMMFR" "IPMMFRS"
#Other: FA/FSFM/UAA/SBU/GASL
MMUPD_CHECKER "$IDFPA" "$VIPFPA" "IPFPAS"
MMUPD_CHECKER "$IDFSLFM" "$VIPFSLFM" "IPFSLFMS"
#Riru/LSPosed
if [ ! -f $MODPATH/$IDRIRU/legacy ]; then MMUPD_CHECKER -c "$IDRIRU" "$VIPRIRU" "$VCIPRIRU" "IPRIRUS"; fi
if [ -d $MODPATH/$IDRIRU ] && [ ! -f $MODPATH/$IDRIRU/legacy ]; then MMUPD_CHECKER -c "$IDLSPOSEDR" "$VIPLSPOSEDR" "$VCIPLSPOSEDR" "IPLSPOSEDS"; fi
if $ZYGISK; then MMUPD_CHECKER -c "$IDLSPOSEDZ" "$VIPLSPOSEDZ" "$VCIPLSPOSEDZ" "IPLSPOSEDS"; fi
#Tweaks: FGS/BP/LED/UGMSD/USGP/VS
MMUPD_CHECKER "$IDFGS" "$VIPFGS" "IPFGSS"
MMUPD_CHECKER "$IDFEG" "$VIPFEG" "IPFEGS"
MMUPD_CHECKER "$IDHAP" "$VIPHAP" "IPHAPS"
MMUPD_CHECKER "$IDAFUS" "$VIPAFUS" "IPAFUSS"
MMUPD_CHECKER "$IDBPT" "$VIPBPT" "IPBPTS"
MMUPD_CHECKER -c "$IDKL" "$VIPKL" "$VCIPKL" "IPKLS"
MMUPD_CHECKER "$IDFMSAAS" "$VIPFMSAAS" "IPFMSAASS"
MMUPD_CHECKER "$IDFDHWO" "$VIPFDHWO" "IPFDHWOS"
MMUPD_CHECKER "$IDFDEVADB" "$VIPFDEVADB" "IPFDEVADBS"
MMUPD_CHECKER "$IDFMTP" "$VIPFMTP" "IPFMTPS"
MMUPD_CHECKER "$IDSOOOFUIRC" "$VIPSOOOFUIRC" "IPSOOOFUIRCS"
MMUPD_CHECKER "$IDFDM" "$VIPFDM" "IPFDMS"
MMUPD_CHECKER "$IDFDPP" "$VIPFDPP" "IPFDPPS"
MMUPD_CHECKER "$IDFI" "$VIPFI" "IPFIS"
MMUPD_CHECKER "$IDCLEDLO" "$VIPCLEDLO" "IPCLEDLOS"
MMUPD_CHECKER "$IDLEDLA" "$VIPLEDLA" "IPLEDLAS"
MMUPD_CHECKER -c "$IDUGMSD" "$VIPUGMSD" "$VCIPUGMSD" "IPUGMSDS"
MMUPD_CHECKER "$IDUSGP" "$VIPUSGP" "IPUSGPS"
MMUPD_CHECKER "$IDAS" "$VIPAS" "IPASS"
MMUPD_CHECKER "$IDGPUR" "$VIPGPUR" "IPGPURS"
MMUPD_CHECKER "$IDVS" "$VIPVS" "IPVSS"
UIP "Other Updates Not Found"
}

MMUPD_CHECKER() {
TMODVERSION=false; TMODCVERSION=false
case "$1" in
-c) local MMUPDID="$2"; local MMUPDV="$3"; local MMUPDVC="$4"; if [ -d $MODPATH/$MMUPDID ]; then local MODVERSION="$(GET_FILE_PROP "$MODPATH/$MMUPDID/module.prop" "version")"; local MODCVERSION="$(GET_FILE_PROP "$MODPATH/$MMUPDID/module.prop" "versionCode")"; if [ "$MODVERSION" != "$MMUPDV" ]; then TMODVERSION=true; fi; if [ "$MODCVERSION" != "$MMUPDVC" ]; then TMODCVERSION=true; fi; fi;;
*) local MMUPDID="$1"; local MMUPDV="$2"; if [ -d $MODPATH/$MMUPDID ]; then local MODVERSION="$(GET_FILE_PROP "$MODPATH/$MMUPDID/module.prop" "version")"; if [ "$MODVERSION" != "$MMUPDV" ]; then TMODVERSION=true; fi; fi;;
esac
if $TMODVERSION || $TMODCVERSION; then
MSGDELIMITER
case "$1" in
-c) UIP "Found Update For $MMUPDID" "Version Installed: $MODVERSION $MODCVERSION" "New Version: $MMUPDV $MMUPDVC, Update?" "$MSGVU Yes" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then $5; fi;;
*) UIP "Found Update For $MMUPDID" "Version Installed: $MODVERSION" "New Version: $MMUPDV, Update?" "$MSGVU Yes" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then $3; fi;;
esac
fi
}

QCDFP() {
for f in $EQCDFP; do
if [ -f $f ]; then
if grep -m1 "^$1" $f >/dev/null; then
local g=$(grep -m1 "^$1" $f)
sed -i "s~$g~$1=$2~g" $f
elif grep -m1 "^#$1" $f >/dev/null; then
local g=$(grep -m1 "^#$1" $f)
sed -i "s~$g~$1=$2~g" $f
elif grep -m1 "^# $1" $f >/dev/null; then
local g=$(grep -m1 "^# $1" $f)
sed -i "s~$g~$1=$2~g" $f
else
echo -e "\n$3\n$1=$2" >> $f
fi
fi
done
}

PTMFI() {
case "$1" in
-nm) MODID="$2"; local IP="$3"; REMOVER -mm "$MODID"; for MP in $IP; do mkdir -p "$MODPATH/$MODID$MP"; done;;
-np) MODID="$2"; local DMM="$3"; REMOVER -mm "$MODID $DMM"; mkdir -p "$MODPATH/$MODID";;
-nmp) MODID="$2"; REMOVER -mm "$MODID"; mkdir -p "$MODPATH/$MODID";;
*) MODID="$1"; local DMM="$2"; local IP="$3"; REMOVER -mm "$MODID $DMM"; for MP in $IP; do mkdir -p "$MODPATH/$MODID$MP"; done;;
esac
touch $MODPATH/$MODID/update
}

} #

{ #KeyCheck

KEYTEST() {
UIP -d "Press Vol: Up Or Down"
if ($TIMEOUT 5 $KGETEVENT -lc 1 2>&1 | $KGREP VOLUME | $KGREP " DOWN" > $EVENTS); then HFBMODE && sed -i "s/KMETHOD=false/KMETHOD=N/g" $PATCHMODEFILE && return 0; else return 1; fi
}

CHOOSENEW() {
while true; do
$KGETEVENT -lc 1 2>&1 | $KGREP VOLUME | $KGREP " DOWN" > $EVENTS
if (`cat $EVENTS 2>/dev/null | $KGREP VOLUME >/dev/null`); then
break
fi
done
if (`cat $EVENTS 2>/dev/null | $KGREP VOLUMEUP >/dev/null`); then
HFBMODE && return 0
else
HFBMODE && return 1
fi
}

CHOOSEOLD() {
while true; do
if $TKEYCHECK; then $FKEYCHECK; fi; $FKEYCHECK
local SEL=$?
if [ "$1" == "UP" ]; then
HFBMODE && UP=$SEL && sed -i "s/ButtonIDUP=#UP/ButtonIDUP=$SEL/g" $PATCHMODEFILE
break
elif [ "$1" == "DOWN" ]; then
HFBMODE && DOWN=$SEL && if [ "$UP" -ne "$SEL" ]; then sed -i "s/ButtonIDDOWN=#DOWN/ButtonIDDOWN=$SEL/g" $PATCHMODEFILE; fi
break
elif [ $SEL -eq $UP ]; then
HFBMODE && return 0
elif [ $SEL -eq $DOWN ]; then
HFBMODE && return 1
fi
done
}

ALTCHOOSEOLD() {
while true; do
if $TKEYCHECK; then $FKEYCHECK; fi; $FKEYCHECK
local SEL=$?
if [ $SEL -eq $BUTTONIDUP ]; then
HFBMODE && return 0
elif [ $SEL -eq $BUTTONIDDOWN ]; then
HFBMODE && return 1
fi
done
}

KEYCHOOSEOLDBIND() {
UIP -d "Vol Key Programming Method" "Press Vol Up"
$KEYFUNCTION "UP"
UIP "Press Vol Down"
$KEYFUNCTION "DOWN"
if [ $UP = $DOWN ]; then
UIP "Two Identical Keys Are Tied! Try Again!" "Activated TKEY For CHOOSEOLD"
TKEYCHECK=true
UIP -d "Vol Key Programming Method" "Press Vol Up"
$KEYFUNCTION "UP"
UIP "Press Vol Down"
$KEYFUNCTION "DOWN"
if [ $UP = $DOWN ]; then
UIP "Two Identical Keys Are Tied! Try Again!" "Or Vol Key Not Detected!"
ENDMODE=false; END
else
sed -i "s/TKEY=false/TKEY=true/g" $PATCHMODEFILE
fi
fi
sed -i "s/KMETHOD=false/KMETHOD=O/g" $PATCHMODEFILE
}

KEYCHECK() {
if [ -f /sbin/getevent ] && [ -f /sbin/grep ]; then KGETEVENT="/sbin/getevent"; KGREP="/sbin/grep"; elif [ -f $IPSB/getevent ] && [ -f $IPSB/grep ]; then KGETEVENT="$IPSB/getevent"; KGREP="$IPSB/grep"; else KGETEVENT="getevent"; KGREP="grep"; fi
if $KOLD && [ $AKOLD != true ] && [ $KNEW != true ]; then
KEYFUNCTION=CHOOSEOLD; KEYCHOOSEOLDBIND
elif $KNEW && [ $AKOLD != true ] && [ $KOLD != true ]; then
KEYFUNCTION=CHOOSENEW
elif $AKOLD && [ $KNEW != true ] && [ $KOLD != true ]; then
KEYFUNCTION=ALTCHOOSEOLD
elif KEYTEST; then
KEYFUNCTION=CHOOSENEW
else
KEYFUNCTION=CHOOSEOLD; KEYCHOOSEOLDBIND
fi
}

} #

{ #All Otval

{ #UI: Pills/NavBar/Gboard/Themes/BA/Sounds

IPPO() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/pills ]; then
UIP -d "$MSGFI Pills, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Restore Stock Gestures Overlay..."
BUCKUPER -r "$IPPSO/NavigationBarModeGesturalWideBack/NavigationBarModeGesturalOverlayWideBack.apk $IPPSO/NavigationBarModeGesturalNarrowBack/NavigationBarModeGesturalOverlayNarrowBack.apk $IPPSO/NavigationBarModeGestural/NavigationBarModeGesturalOverlay.apk $IPPSO/NavigationBarModeGesturalExtraWideBack/NavigationBarModeGesturalOverlayExtraWideBack.apk"
rm -f $IPPSO/Pills.apk $AIOPFMDPH/pills
UIP "$MSGDRM"
fi
else
if [ $MIUI != true ] && [ "$ASDK" -ge 29 ]; then
UCSA -ent "Install Pills $VIPPO?" "IPPOS"
fi
fi
}

IPPOS() {
PILLSHIDE=false
UIP -d "Choose Variant Pills:" "$MSGVU Full Hide/Immersive" "$MSGVD More Other Variants"
if $KEYFUNCTION; then
PILLSHIDE=true; PFSGVFPX=true; POFSGC=true; IMMERSIVE="0dip"; FRAME="0dip"; PILLSWIDTHSIZE="0dip"; PILLSFATSIZE="0dip"
else
FRAME="48dip"
UIP -d "Transparent Variant:" "$MSGVU Transparent" "$MSGVD Not Transparent"
if $KEYFUNCTION; then
IMMERSIVE="0dip"
else
IMMERSIVE="16dip"
fi
UIP -d "Choose Width Size:" "$MSGVU 4dip/8dip (Dot)" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then
POFSGCDOT=true; PHOC=true; PILLSFATSIZE="4dip"; PILLSWIDTHSIZE="8dip"
else
POFSGCDOT=false
UIP -d "$MSGVU 0dip/0dip (Hide)" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then
POFSGC=true; PHOC=true; PILLSFATSIZE="0dip"; PILLSWIDTHSIZE="0dip"
else
PHOC=false
for PILLSWIDTHSIZE in "60dip" "120dip" "180dip" "240dip" "300dip"; do
UIP -d "$MSGVU $PILLSWIDTHSIZE"
MSGPOFSGA="$MSGNIS"
case $PILLSWIDTHSIZE in
"300dip") MSGPOFSGA="$MSGNUS";;
esac
UIP "$MSGVD No $MSGPOFSGA"
if $KEYFUNCTION; then
POFSGC=true
break
else
POFSGC=false
fi
done
fi
fi
if $POFSGC && [ $POFSGCDOT != true ] || [ $PHOC != true ]; then
if $POFSGC && [ $PHOC != true ]; then
MSGPOFSG=true
for PILLSFATSIZE in "1dip" "2dip" "3dip" "4dip"; do
if $MSGPOFSG; then
UIP -d "Choose Fat Size:"
MSGPOFSG=false
else
MSGDELIMITER
fi
UIP "$MSGVU $PILLSFATSIZE"
MSGPOFSGA="$MSGNIS"
case $PILLSFATSIZE in
"4.0dp") MSGPOFSGA="$MSGNUS";;
esac
UIP "$MSGVD No $MSGPOFSGA"
if $KEYFUNCTION; then
PFSGVFPX=true
break
else
PFSGVFPX=false
fi
done
fi
fi
fi
if $POFSGC && $PFSGVFPX; then
UIP "Installing Pills $IAMM"
UZTPN "Pills"
if $MAGISK; then
PTMFI "$IDPO" "PillsOverlay HideNavBar HideGesBar HidePillsOverlay" "$MIPPSO"
REPLACER -f "NavigationBarModeGesturalWideBack NavigationBarModeGesturalNarrowBack NavigationBarModeGesturalExtraWideBack NavigationBarModeGestural"
cp -f $TMPDIR/$MODID/NavigationBarModeGesturalOverlayWideBack-$IMMERSIVE-$FRAME-32dip.apk $MODPATH/$MODID$MIPPSO
cp -f $TMPDIR/$MODID/NavigationBarModeGesturalOverlayNarrowBack-$IMMERSIVE-$FRAME-18dip.apk $MODPATH/$MODID$MIPPSO
cp -f $TMPDIR/$MODID/NavigationBarModeGesturalOverlayExtraWideBack-$IMMERSIVE-$FRAME-40dip.apk $MODPATH/$MODID$MIPPSO
cp -f $TMPDIR/$MODID/NavigationBarModeGesturalOverlay-$IMMERSIVE-$FRAME-24dip.apk $MODPATH/$MODID$MIPPSO
cp -f $TMPDIR/$MODID/Pills-$PILLSFATSIZE-$PILLSWIDTHSIZE.apk $MODPATH/$MODID$MIPPSO
if $PILLSHIDE; then
MMPR -v "Pills" "$VIPPO" "Pills $MSGFMM - Full Hide/Immersive"
else
MMPR -v "Pills" "$VIPPO" "Pills $MSGFMM - Size $PILLSFATSIZE/$PILLSWIDTHSIZE"
fi
else
BUCKUPER -s "$IPPSO/NavigationBarModeGesturalWideBack/NavigationBarModeGesturalOverlayWideBack.apk $IPPSO/NavigationBarModeGesturalNarrowBack/NavigationBarModeGesturalOverlayNarrowBack.apk $IPPSO/NavigationBarModeGestural/NavigationBarModeGesturalOverlay.apk $IPPSO/NavigationBarModeGesturalExtraWideBack/NavigationBarModeGesturalOverlayExtraWideBack.apk"
cp -f $TMPDIR/$IDPO/NavigationBarModeGesturalOverlayWideBack-$IMMERSIVE-$FRAME-32dip.apk $IPPSO/NavigationBarModeGesturalWideBack/NavigationBarModeGesturalOverlayWideBack.apk
cp -f $TMPDIR/$IDPO/NavigationBarModeGesturalOverlayNarrowBack-$IMMERSIVE-$FRAME-18dip.apk $IPPSO/NavigationBarModeGesturalNarrowBack/NavigationBarModeGesturalOverlayNarrowBack.apk
cp -f $TMPDIR/$IDPO/NavigationBarModeGesturalOverlayExtraWideBack-$IMMERSIVE-$FRAME-40dip.apk $IPPSO/NavigationBarModeGesturalExtraWideBack/NavigationBarModeGesturalOverlayExtraWideBack.apk
cp -f $TMPDIR/$IDPO/NavigationBarModeGesturalOverlay-$IMMERSIVE-$FRAME-24dip.apk $IPPSO/NavigationBarModeGestural/NavigationBarModeGesturalOverlay.apk
cp -f $TMPDIR/$IDPO/Pills-$PILLSFATSIZE-$PILLSWIDTHSIZE.apk $IPPSO/Pills.apk
touch $AIOPFMDPH/pills
fi
SET_PERM_RM -msgdi
fi
}

IPPCO() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/pillscolors ]; then
UIP -d "$MSGFI Pills Colors, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
rm -f $IPPSO/PillsColors.apk $AIOPFMDPH/pillscolors
UIP "$MSGDRM"
fi
else
if [ $MIUI != true ] && [ "$ASDK" -ge 29 ]; then
UCSA -ent "Install Pills Colors $VIPPCO?" "IPPCOS"
fi
fi
}

IPPCOS() {
UIP -d "Choose Variant:" "$MSGVU Choose One Color" "$MSGVD Choose Two Color Separately"
if $KEYFUNCTION; then COLORVARIANT=" "; IPPCOAS; PILLSLIGHTCOLORS=$PILLSCOLORS; PILLSDARKCOLORS=$PILLSCOLORS; else COLORVARIANT=" Light: "; IPPCOAS; if $PCOFSGC; then PILLSLIGHTCOLORS=$PILLSCOLORS; COLORVARIANT=" Dark: "; IPPCOAS; PILLSDARKCOLORS=$PILLSCOLORS; fi; fi
if $PCOFSGC; then
UIP "Installing Pills Colors $IAMM"
UZTPN "PillsColors"
if $MAGISK; then
PTMFI "$IDPCO" "PillsColorsOverlay" "$MIPPSO"
cp -f $TMPDIR/$MODID/PillsColors-$PILLSLIGHTCOLORS-$PILLSDARKCOLORS.apk $MODPATH/$MODID$MIPPSO
MMPR -v "Pills Colors" "$VIPPCO" "Pills Colors $MSGFMM - Colors Light: $PILLSLIGHTCOLORS & Dark: $PILLSDARKCOLORS"
else
cp -f $TMPDIR/PillsColors/PillsColors-$PILLSLIGHTCOLORS-$PILLSDARKCOLORS.apk $IPPSO/PillsColors.apk
touch $AIOPFMDPH/pillscolors
fi
SET_PERM_RM -msgdi
fi
}

IPPCOAS() {
for PILLSCOLORS in "ff1a73e8" "ff5e97f6" "ffb31818" "ffff4151" "ff1ed760" "ff47ae84" "ffffa842" "ffff8055" "ffa86bd5"; do
case $PILLSCOLORS in
"ff1a73e8") NAMEPILLSCOLORS="Blue";;
"ff5e97f6") NAMEPILLSCOLORS="Light Blue";;
"ffb31818") NAMEPILLSCOLORS="Red";;
"ffff4151") NAMEPILLSCOLORS="Light Red";;
"ff1ed760") NAMEPILLSCOLORS="Green";;
"ff47ae84") NAMEPILLSCOLORS="Light Green";;
"ffffa842") NAMEPILLSCOLORS="Yellow";;
"ffff8055") NAMEPILLSCOLORS="Orange";;
"ffa86bd5") NAMEPILLSCOLORS="Violet";;
esac
UIP -d "$MSGVU$COLORVARIANT$NAMEPILLSCOLORS ($PILLSCOLORS)"
MSGPCOFSGA="$MSGNIS"
case $PILLSCOLORS in
"ffa86bd5") MSGPCOFSGA="$MSGNUS";;
esac
UIP "$MSGVD No $MSGPCOFSGA"
if $KEYFUNCTION; then
PCOFSGC=true
break
else
PCOFSGC=false
fi
done
}

IPPHO() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/pillsheight ]; then
UIP -d "$MSGFI Pills Height, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
rm -f $IPPSO/PillsHeight.apk $AIOPFMDPH/pillsheight
UIP "$MSGDRM"
fi
else
if [ $MIUI != true ] && [ "$ASDK" -ge 29 ]; then
UCSA -ent "Install Pills Height $VIPPHO?" "IPPHOS"
fi
fi
}

IPPHOS() {
UCSA -a "0dip 1dip 2dip 3dip 4dip 5dip 6dip 7dip 8dip 9dip 10dip" "Choose Pills Height:" "Height" "10dip"
if $UCSFNM; then
UIP "Installing Pills Height $IAMM"
UZTPN "PillsHeight"
if $MAGISK; then
PTMFI "$IDPHOS" "PillsHeightOverlay" "$MIPPSO"
cp -f $TMPDIR/$MODID/PillsHeight-$UCSFNMC.apk $MODPATH/$MODID$MIPPSO
MMPR -v "Pills Height" "$VIPPHO" "Pills Height $MSGFMM - Height $UCSFNMC"
else
cp -f $TMPDIR/PillsHeight/PillsHeight-$UCSFNMC.apk $IPPSO/PillsHeight.apk
touch $AIOPFMDPH/pillsheight
fi
SET_PERM_RM -msgdi
fi
}

IPPSHNB() {
UCSA "Install Show/Hide Navigation Bar $VIPPSHNB?" "IPPSHNBS"
}

IPPSHNBS() {
UIP -d "Choose Variant:" "$MSGVU Show" "$MSGVD Hide"
if $KEYFUNCTION; then ISHNBPVN="0"; ISHNBPV="Show"; else ISHNBPVN="1"; ISHNBPV="Hide"; fi
UIP "Installing Show/Hide Navigation Bar $IAMM"
if $MAGISK; then
PTMFI -np "$IDPSHNB" "HideNavigationBar ShowNavigationBar"
echo "qemu.hw.mainkeys=$ISHNBPVN" > $MODPATH/$MODID/system.prop
MMPR -v "$ISHNBPV Navigation Bar" "$VIPPSHNB" "$ISHNBPV Navigation Bar"
else
BUCKUPER -bp "$IPSBP"
export newprop=$(echo qemu.hw.mainkeys=$ISHNBPVN | cut -d '=' -f1)
sed -i "/qemu.hw.mainkeys=0/d" $IPSBP; sed -i "/qemu.hw.mainkeys=1/d" $IPSBP
echo -e "# Show/Hide Navigation Bar\nqemu.hw.mainkeys=$ISHNBPVN" >> $IPSBP
fi
SET_PERM_RM -msgdi
}

IPBGD() {
if $MAGISK && [ $MIUI != true ] && [ "$ASDK" -ge 29 ] && SP_CHECKER "$XMLSECURE" "back_gesture_inset_scale_left back_gesture_inset_scale_right"; then
UCSA "Install Back Gesture Disabler $VIPBGD?" "IPBGDS"
fi
}

IPBGDS() {
UIP -d "Disable Left Gesture?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then BGISL=0; else BGISL=1; fi
UIP -d "Disable Right Gesture?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then BGISR=0; else BGISR=1; fi
UIP "Installing Back Gesture Disabler $IAMM"
PTMFI -nmp "$IDBGDS"
MSSERVICE "$SPSECURE back_gesture_inset_scale_left 1; $SPSECURE back_gesture_inset_scale_right 1" "$SPSECURE back_gesture_inset_scale_left $BGISL; $SPSECURE back_gesture_inset_scale_right $BGISR" "BGDS"
if $BOOTMODE; then UIP "Back Gesture Disabler Activated Right Now"; $SPSECURE back_gesture_inset_scale_left $BGISL; $SPSECURE back_gesture_inset_scale_right $BGISR; fi
MMPR -v "Back Gesture Disabler" "$VIPBGD" "Back Gesture Disabler $MSGFMM"; SET_PERM_RM -msgdi
}

IPGBNBS() {
if [ "$ASDK" -ge 29 ]; then
UCSA -ent "Install GBoard NavBar Space $VIPGBNBS?" "IPGBNBSS"
fi
}

IPGBNBSS() {
UCSA -a "$(seq 0 5 40)" "Choose NavBar Space Size:" "NavBar Space" "40"
if $UCSFNM; then
UIP "Installing GBoard NavBar Space $IAMM"
if $MAGISK; then
PTMFI -np "$IDGBNBS" "NavBar_Space gboardnavbar"
echo "ro.com.google.ime.kb_pad_port_b=$UCSFNMC" > $MODPATH/$MODID/system.prop
MMPR -v "Gboard NavBar Spacing" "$VIPGBNBS" "Gboard NavBar Spacing - Set On $UCSFNMC"
else
BUCKUPER -bp "$IPSBP"
echo -e "# Gboard NavBar Spacing\nro.com.google.ime.kb_pad_port_b=$UCSFNMC" >> $IPSBP
fi
SET_PERM_RM -msgdi
fi
}

IPGBRC() {
if [ "$ASDK" -ge 29 ]; then
UCSA -ent "Install GBoard Rounded Corners $VIPGBRC?" "IPGBRCS"
fi
}

IPGBRCS() {
UCSA -a "$(seq 0 5 50)" "Choose Rounded Size:" "Rounded Size" "50"
if $UCSFNM; then
UIP "Installing GBoard Rounded Corners $IAMM"
if $MAGISK; then
PTMFI -nmp "$IDGBRC"
echo "ro.com.google.ime.corner_key_r=$UCSFNMC" > $MODPATH/$MODID/system.prop
MMPR -v "GBoard Rounded Corners" "$VIPGBRC" "GBoard Rounded Corners $MSGFMM - Set On $UCSFNMC"
else
BUCKUPER -bp "$IPSBP"
echo -e "# GBoard NavBar Space Remover\nro.com.google.ime.corner_key_r=$UCSFNMC" >> $IPSBP
fi
SET_PERM_RM -msgdi
fi
}

IPGBT() {
UCSA "Install GBoard Themes $VIPGBT?" "IPGBTS"
}

IPGBTS() {
UCSA -a "$(seq 0 5 30)" "Choose Key Rounded Size:" "Rounded Size" "30"
if $UCSFNM; then
UIP "Installing GBoard Themes $IAMM"
UZTPN "GBoardThemes"
mkdir -p $TMPDIR/GBoardThemes/Compile $TMPDIR/GBoardThemes/gboard_theme
for f in "1A73E8" "B31818" "1ED760" "FFA842" "FF8055" "A86BD5" "FF4151" "5E97F6" "47AE84"; do
for s  in "MD2B" "MD2W" "3DB" "3DW" "FB" "FW"; do
case $s in
"MD2B") g="md2b";;
"MD2D") g="md2d";;
"MD2W") g="md2w";;
"3DB") g="3db";;
"3DW") g="3dw";;
"FB") g="fb";;
"FW") g="fw";;
esac
local n="$(< /dev/urandom tr -cd "a b c d e f g h i j k l m n o p q r s t u v w x y z" | $HEAD -c 6)"
cp -rf  $TMPDIR/GBoardThemes/$s/* $TMPDIR/GBoardThemes/Compile
sed -i "s/#ROUNDED/$UCSFNMC/g" $TMPDIR/GBoardThemes/Compile/style_sheet.css
sed -i "s/#ACCENT/#$f\FF/g" $TMPDIR/GBoardThemes/Compile/style_sheet.css
[ -f $TMPDIR/GBoardThemes/Compile/style_sheet_border.css ] && sed -i "s/#ACCENT/#$f\FF/g" $TMPDIR/GBoardThemes/Compile/style_sheet_border.css
sed -i "s/#ID/$g$n/g" $TMPDIR/GBoardThemes/Compile/metadata.json
sed -i "s/#NAME/$g$n/g" $TMPDIR/GBoardThemes/Compile/metadata.json
cd $TMPDIR/GBoardThemes/Compile
$ZIPPACKER -r -0 $TMPDIR/GBoardThemes/Compile * >/dev/null
mv $TMPDIR/GBoardThemes/Compile.zip $TMPDIR/GBoardThemes/gboard_theme/$s-$f.zip
rm -rf $TMPDIR/GBoardThemes/Compile/*
done
done
if $MAGISK; then
PTMFI "$IDGBT" "rboard-themes" "$MIPSE"
cp -rf $TMPDIR/GBoardThemes/gboard_theme $MODPATH/$MODID$MIPSE
echo -e "ro.com.google.ime.theme_file=MD2B-1A73E8.zip\nro.com.google.ime.themes_dir=$MIPSE/gboard_theme" > $MODPATH/$MODID/system.prop
MMPR -v "GBoard Themes" "$VIPGBT" "GBoard Themes $MSGFMM"
else
BUCKUPER -bp "$IPSBP"
echo -e "\n# GBoard Themes\nro.com.google.ime.theme_file=MD2B-1A73E8.zip\nro.com.google.ime.themes_dir=$MIPSE/gboard_theme" >> $IPSBP
cp -rf $TMPDIR/GBoardThemes/gboard_theme $IPSE
SET_PERM_R $IPSE/gboard_theme 0 0 0755 0644
fi
SET_PERM_RM -msgdi
fi
}

IPGBSTE() {
UCSA "Install GBoard Silk Theme Changer $VIPGBSTE?" "IPGBSTES"
}

IPGBSTES() {
UIP -d "Enable Or Disable Silk Theme?" "$MSGVU Enable" "$MSGVD Disable"
if $KEYFUNCTION; then
GBSTF="false"; GBSTT="true"; GBSTS="Enabled"
else
GBSTF="true"; GBSTT="false"; GBSTS="Disabled"
fi
UIP -d "Enable Or Disable Key Shadows?" "$MSGVU Enable" "$MSGVD Disable"
if $KEYFUNCTION; then
GBSTKSF="true"; GBSTKST="false"
else
GBSTKSF="false"; GBSTKST="true"
fi
UIP -d "Enable Or Disable Shaped Key?" "$MSGVU Enable" "$MSGVD Disable"
if $KEYFUNCTION; then
GBSTSKF="false"; GBSTSKT="true"
else
GBSTSKF="true"; GBSTSKT="false"
fi
UIP "Installing GBoard Silk Theme Changer $IAMM"
if $MAGISK; then
PTMFI -np "$IDGBSTE" "gboard-silk-theme"
MMPR -v "Gboard Silk Theme Changer" "$VIPGBSTE" "Gboard Silk Theme Changer $MSGFMM - Silk Theme $GBSTS"
MSSERVICE "sed -i -e \"s/\\\"animate_first_content_suggestion_results\\\" value=\\\"$GBSTT\\\"/\\\"animate_first_content_suggestion_results\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"branding_fadeout_delay_ms\\\" value=\\\"9000000\\\"/\\\"branding_fadeout_delay_ms\\\" value=\\\"900\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"concept_prediction_sample_emoji_by_popularity\\\" value=\\\"$GBSTF\\\"/\\\"concept_prediction_sample_emoji_by_popularity\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"disable_vocabulary_capitalization\\\" value=\\\"$GBSTF\\\"/\\\"disable_vocabulary_capitalization\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_animated_whatsapp_sticker_webp\\\" value=\\\"$GBSTT\\\"/\\\"enable_animated_whatsapp_sticker_webp\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_fake_app_completion\\\" value=\\\"$GBSTT\\\"/\\\"enable_fake_app_completion\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_inline_suggestions_on_client_side\\\" value=\\\"$GBSTT\\\"/\\\"enable_inline_suggestions_on_client_side\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_inline_suggestions_on_decoder_side\\\" value=\\\"$GBSTT\\\"/\\\"enable_inline_suggestions_on_decoder_side\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_inline_suggestions_space_tooltip\\\" value=\\\"$GBSTT\\\"/\\\"enable_inline_suggestions_space_tooltip\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_inline_suggestions_tooltip\\\" value=\\\"$GBSTT\\\"/\\\"enable_inline_suggestions_tooltip\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_inline_suggestions_tooltip\\\" value=\\\"$GBSTT\\\"/\\\"enable_inline_suggestions_tooltip\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_keyboard_redesign\\\" value=\\\"$GBSTT\\\"/\\\"enable_keyboard_redesign\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_keyboard_redesign_theme\\\" value=\\\"$GBSTT\\\"/\\\"enable_keyboard_redesign_theme\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_matched_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTT\\\"/\\\"enable_matched_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_multiword_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTT\\\"/\\\"enable_multiword_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_multiword_suggestions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTT\\\"/\\\"enable_multiword_suggestions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_new_spellchecker\\\" value=\\\"$GBSTT\\\"/\\\"enable_new_spellchecker\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_nga\\\" value=\\\"$GBSTT\\\"/\\\"enable_nga\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_send_swipe_on_space_to_app\\\" value=\\\"$GBSTT\\\"/\\\"enable_send_swipe_on_space_to_app\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_single_word_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTT\\\"/\\\"enable_single_word_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_single_word_suggestions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTT\\\"/\\\"enable_single_word_suggestions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_spacebar_mixed_model\\\" value=\\\"$GBSTT\\\"/\\\"enable_spacebar_mixed_model\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_spell_checker_extension\\\" value=\\\"$GBSTT\\\"/\\\"nable_spell_checker_extension\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_spellchecker_chips_ui\\\" value=\\\"$GBSTT\\\"/\\\"enable_spellchecker_chips_ui\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_sticker_candidates\\\" value=\\\"$GBSTT\\\"/\\\"enable_sticker_candidates\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_tflite_triggering_model\\\" value=\\\"$GBSTT\\\"/\\\"enable_tflite_triggering_model\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_trigger_spell_check_in_composing\\\" value=\\\"$GBSTT\\\"/\\\"enable_trigger_spell_check_in_composing\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_trigger_spell_check_in_sentence\\\" value=\\\"$GBSTT\\\"/\\\"enable_trigger_spell_check_in_sentence\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_user_history_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTT\\\"/\\\"enable_user_history_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"extends_touch_below_space\\\" value=\\\"$GBSTT\\\"/\\\"extends_touch_below_space\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"fast_access_bar_enable_frequently_used\\\" value=\\\"$GBSTT\\\"/\\\"fast_access_bar_enable_frequently_used\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"fast_access_bar_enable_instantly_remove\\\" value=\\\"$GBSTT\\\"/\\\"fast_access_bar_enable_instantly_remove\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"keyboard_redesign_forbid_key_shadows\\\" value=\\\"$GBSTKST\\\"/\\\"keyboard_redesign_forbid_key_shadows\\\" value=\\\"$GBSTKSF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"keyboard_redesign_google_sans\\\" value=\\\"$GBSTT\\\"/\\\"keyboard_redesign_google_sans\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"lm_personalization_enabled\\\" value=\\\"$GBSTT\\\"/\\\"lm_personalization_enabled\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"native_language_hint_by_system_locales\\\" value=\\\"$GBSTT\\\"/\\\"native_language_hint_by_system_locales\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"nebulae_enable_input_action_collection\\\" value=\\\"$GBSTT\\\"/\\\"nebulae_enable_input_action_collection\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"nwp_threshold_for_two_words_completions\\\" value=\\\"-0.3\\\"/\\\"nwp_threshold_for_two_words_completions\\\" value=\\\"-0.4\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"pill_shaped_key\\\" value=\\\"$GBSTSKT\\\"/\\\"pill_shaped_key\\\" value=\\\"$GBSTSKF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"pseudo_spellchecker_mode\\\" value=\\\"0\\\"/\\\"pseudo_spellchecker_mode\\\" value=\\\"1\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"show_branding_interval_seconds\\\" value=\\\"0\\\"/\\\"show_branding_interval_seconds\\\" value=\\\"86400000\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"show_branding_on_space\\\" value=\\\"$GBSTT\\\"/\\\"show_branding_on_space\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"silk_on_all_pixel\\\" value=\\\"$GBSTT\\\"/\\\"silk_on_all_pixel\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"silk_theme\\\" value=\\\"$GBSTT\\\"/\\\"silk_theme\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"spellchecker_enable_language_trigger\\\" value=\\\"$GBSTT\\\"/\\\"spellchecker_enable_language_trigger\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"spellchecker_enable_rule_trigger\\\" value=\\\"$GBSTT\\\"/\\\"spellchecker_enable_rule_trigger\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"supports_battery_saver_theme\\\" value=\\\"$GBSTT\\\"/\\\"supports_battery_saver_theme\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"threshold_for_single_word_completions\\\" value=\\\"-5.0\\\"/\\\"threshold_for_single_word_completions\\\" value=\\\"-8.0\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"time_interval_percentile\\\" value=\\\"90\\\"/\\\"time_interval_percentile\\\" value=\\\"67\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"trigger_spell_check_in_composing_delay\\\" value=\\\"1500\\\"/\\\"trigger_spell_check_in_composing_delay\\\" value=\\\"3000\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"trigger_spell_check_in_sentence_delay\\\" value=\\\"1000\\\"/\\\"trigger_spell_check_in_sentence_delay\\\" value=\\\"2000\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"use_keyboard_redesign_on_existing_theme\\\" value=\\\"$GBSTT\\\"/\\\"use_keyboard_redesign_on_existing_theme\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"use_keyboard_redesign_on_existing_theme_on_all_users\\\" value=\\\"$GBSTT\\\"/\\\"use_keyboard_redesign_on_existing_theme_on_all_users\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"use_keyboard_redesign_theme_by_default\\\" value=\\\"$GBSTT\\\"/\\\"use_keyboard_redesign_theme_by_default\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"use_silk_theme_by_default\\\" value=\\\"$GBSTT\\\"/\\\"use_silk_theme_by_default\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML" "sed -i -e \"s/\\\"animate_first_content_suggestion_results\\\" value=\\\"$GBSTF\\\"/\\\"animate_first_content_suggestion_results\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"branding_fadeout_delay_ms\\\" value=\\\"900\\\"/\\\"branding_fadeout_delay_ms\\\" value=\\\"9000000\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"concept_prediction_sample_emoji_by_popularity\\\" value=\\\"$GBSTT\\\"/\\\"concept_prediction_sample_emoji_by_popularity\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"disable_vocabulary_capitalization\\\" value=\\\"$GBSTT\\\"/\\\"disable_vocabulary_capitalization\\\" value=\\\"$GBSTF\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_animated_whatsapp_sticker_webp\\\" value=\\\"$GBSTF\\\"/\\\"enable_animated_whatsapp_sticker_webp\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_fake_app_completion\\\" value=\\\"$GBSTF\\\"/\\\"enable_fake_app_completion\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_inline_suggestions_on_client_side\\\" value=\\\"$GBSTF\\\"/\\\"enable_inline_suggestions_on_client_side\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_inline_suggestions_on_decoder_side\\\" value=\\\"$GBSTF\\\"/\\\"enable_inline_suggestions_on_decoder_side\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_inline_suggestions_space_tooltip\\\" value=\\\"$GBSTF\\\"/\\\"enable_inline_suggestions_space_tooltip\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_inline_suggestions_tooltip\\\" value=\\\"$GBSTF\\\"/\\\"enable_inline_suggestions_tooltip\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_inline_suggestions_tooltip\\\" value=\\\"$GBSTF\\\"/\\\"enable_inline_suggestions_tooltip\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_keyboard_redesign\\\" value=\\\"$GBSTF\\\"/\\\"enable_keyboard_redesign\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_keyboard_redesign_theme\\\" value=\\\"$GBSTF\\\"/\\\"enable_keyboard_redesign_theme\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_matched_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTF\\\"/\\\"enable_matched_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_multiword_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTF\\\"/\\\"enable_multiword_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_multiword_suggestions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTF\\\"/\\\"enable_multiword_suggestions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_new_spellchecker\\\" value=\\\"$GBSTF\\\"/\\\"enable_new_spellchecker\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_nga\\\" value=\\\"$GBSTF\\\"/\\\"enable_nga\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_send_swipe_on_space_to_app\\\" value=\\\"$GBSTF\\\"/\\\"enable_send_swipe_on_space_to_app\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_single_word_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTF\\\"/\\\"enable_single_word_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_single_word_suggestions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTF\\\"/\\\"enable_single_word_suggestions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_spacebar_mixed_model\\\" value=\\\"$GBSTF\\\"/\\\"enable_spacebar_mixed_model\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_spell_checker_extension\\\" value=\\\"$GBSTF\\\"/\\\"nable_spell_checker_extension\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_spellchecker_chips_ui\\\" value=\\\"$GBSTF\\\"/\\\"enable_spellchecker_chips_ui\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_sticker_candidates\\\" value=\\\"$GBSTF\\\"/\\\"enable_sticker_candidates\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_tflite_triggering_model\\\" value=\\\"$GBSTF\\\"/\\\"enable_tflite_triggering_model\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_trigger_spell_check_in_composing\\\" value=\\\"$GBSTF\\\"/\\\"enable_trigger_spell_check_in_composing\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_trigger_spell_check_in_sentence\\\" value=\\\"$GBSTF\\\"/\\\"enable_trigger_spell_check_in_sentence\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"enable_user_history_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTF\\\"/\\\"enable_user_history_predictions_as_inline_from_crank_cifg\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"extends_touch_below_space\\\" value=\\\"$GBSTF\\\"/\\\"extends_touch_below_space\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"fast_access_bar_enable_frequently_used\\\" value=\\\"$GBSTF\\\"/\\\"fast_access_bar_enable_frequently_used\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"fast_access_bar_enable_instantly_remove\\\" value=\\\"$GBSTF\\\"/\\\"fast_access_bar_enable_instantly_remove\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"keyboard_redesign_forbid_key_shadows\\\" value=\\\"$GBSTKSF\\\"/\\\"keyboard_redesign_forbid_key_shadows\\\" value=\\\"$GBSTKST\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"keyboard_redesign_google_sans\\\" value=\\\"$GBSTF\\\"/\\\"keyboard_redesign_google_sans\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"lm_personalization_enabled\\\" value=\\\"$GBSTF\\\"/\\\"lm_personalization_enabled\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"native_language_hint_by_system_locales\\\" value=\\\"$GBSTF\\\"/\\\"native_language_hint_by_system_locales\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"nebulae_enable_input_action_collection\\\" value=\\\"$GBSTF\\\"/\\\"nebulae_enable_input_action_collection\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"nwp_threshold_for_two_words_completions\\\" value=\\\"-0.4\\\"/\\\"nwp_threshold_for_two_words_completions\\\" value=\\\"-0.3\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"pill_shaped_key\\\" value=\\\"$GBSTSKF\\\"/\\\"pill_shaped_key\\\" value=\\\"$GBSTSKT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"pseudo_spellchecker_mode\\\" value=\\\"0\\\"/\\\"pseudo_spellchecker_mode\\\" value=\\\"1\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"show_branding_interval_seconds\\\" value=\\\"86400000\\\"/\\\"show_branding_interval_seconds\\\" value=\\\"0\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"show_branding_on_space\\\" value=\\\"$GBSTF\\\"/\\\"show_branding_on_space\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"silk_on_all_pixel\\\" value=\\\"$GBSTF\\\"/\\\"silk_on_all_pixel\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"silk_theme\\\" value=\\\"$GBSTF\\\"/\\\"silk_theme\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"spellchecker_enable_language_trigger\\\" value=\\\"$GBSTF\\\"/\\\"spellchecker_enable_language_trigger\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"spellchecker_enable_rule_trigger\\\" value=\\\"$GBSTF\\\"/\\\"spellchecker_enable_rule_trigger\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"supports_battery_saver_theme\\\" value=\\\"$GBSTF\\\"/\\\"supports_battery_saver_theme\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"threshold_for_single_word_completions\\\" value=\\\"-8.0\\\"/\\\"threshold_for_single_word_completions\\\" value=\\\"-5.0\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"time_interval_percentile\\\" value=\\\"90\\\"/\\\"time_interval_percentile\\\" value=\\\"67\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"trigger_spell_check_in_composing_delay\\\" value=\\\"3000\\\"/\\\"trigger_spell_check_in_composing_delay\\\" value=\\\"1500\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"trigger_spell_check_in_sentence_delay\\\" value=\\\"2000\\\"/\\\"trigger_spell_check_in_sentence_delay\\\" value=\\\"1000\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"use_keyboard_redesign_on_existing_theme\\\" value=\\\"$GBSTF\\\"/\\\"use_keyboard_redesign_on_existing_theme\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"use_keyboard_redesign_on_existing_theme_on_all_users\\\" value=\\\"$GBSTF\\\"/\\\"use_keyboard_redesign_on_existing_theme_on_all_users\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"use_keyboard_redesign_theme_by_default\\\" value=\\\"$GBSTF\\\"/\\\"use_keyboard_redesign_theme_by_default\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML
sed -i -e \"s/\\\"use_silk_theme_by_default\\\" value=\\\"$GBSTF\\\"/\\\"use_silk_theme_by_default\\\" value=\\\"$GBSTT\\\"/g\" $GBSTEXML" "GSTE"
fi
if [ -f $GBSTEXML ]; then
sed -i -e "s/\"animate_first_content_suggestion_results\" value=\"$GBSTF\"/\"animate_first_content_suggestion_results\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"branding_fadeout_delay_ms\" value=\"900\"/\"branding_fadeout_delay_ms\" value=\"9000000\"/g" $GBSTEXML
sed -i -e "s/\"concept_prediction_sample_emoji_by_popularity\" value=\"$GBSTT\"/\"concept_prediction_sample_emoji_by_popularity\" value=\"$GBSTF\"/g" $GBSTEXML
sed -i -e "s/\"disable_vocabulary_capitalization\" value=\"$GBSTT\"/\"disable_vocabulary_capitalization\" value=\"$GBSTF\"/g" $GBSTEXML
sed -i -e "s/\"enable_animated_whatsapp_sticker_webp\" value=\"$GBSTF\"/\"enable_animated_whatsapp_sticker_webp\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_fake_app_completion\" value=\"$GBSTF\"/\"enable_fake_app_completion\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_inline_suggestions_on_client_side\" value=\"$GBSTF\"/\"enable_inline_suggestions_on_client_side\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_inline_suggestions_on_decoder_side\" value=\"$GBSTF\"/\"enable_inline_suggestions_on_decoder_side\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_inline_suggestions_space_tooltip\" value=\"$GBSTF\"/\"enable_inline_suggestions_space_tooltip\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_inline_suggestions_tooltip\" value=\"$GBSTF\"/\"enable_inline_suggestions_tooltip\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_inline_suggestions_tooltip\" value=\"$GBSTF\"/\"enable_inline_suggestions_tooltip\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_keyboard_redesign\" value=\"$GBSTF\"/\"enable_keyboard_redesign\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_keyboard_redesign_theme\" value=\"$GBSTF\"/\"enable_keyboard_redesign_theme\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_matched_predictions_as_inline_from_crank_cifg\" value=\"$GBSTF\"/\"enable_matched_predictions_as_inline_from_crank_cifg\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_multiword_predictions_as_inline_from_crank_cifg\" value=\"$GBSTF\"/\"enable_multiword_predictions_as_inline_from_crank_cifg\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_multiword_suggestions_as_inline_from_crank_cifg\" value=\"$GBSTF\"/\"enable_multiword_suggestions_as_inline_from_crank_cifg\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_new_spellchecker\" value=\"$GBSTF\"/\"enable_new_spellchecker\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_nga\" value=\"$GBSTF\"/\"enable_nga\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_send_swipe_on_space_to_app\" value=\"$GBSTF\"/\"enable_send_swipe_on_space_to_app\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_single_word_predictions_as_inline_from_crank_cifg\" value=\"$GBSTF\"/\"enable_single_word_predictions_as_inline_from_crank_cifg\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_single_word_suggestions_as_inline_from_crank_cifg\" value=\"$GBSTF\"/\"enable_single_word_suggestions_as_inline_from_crank_cifg\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_spacebar_mixed_model\" value=\"$GBSTF\"/\"enable_spacebar_mixed_model\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_spell_checker_extension\" value=\"$GBSTF\"/\"nable_spell_checker_extension\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_spellchecker_chips_ui\" value=\"$GBSTF\"/\"enable_spellchecker_chips_ui\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_sticker_candidates\" value=\"$GBSTF\"/\"enable_sticker_candidates\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_tflite_triggering_model\" value=\"$GBSTF\"/\"enable_tflite_triggering_model\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_trigger_spell_check_in_composing\" value=\"$GBSTF\"/\"enable_trigger_spell_check_in_composing\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_trigger_spell_check_in_sentence\" value=\"$GBSTF\"/\"enable_trigger_spell_check_in_sentence\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"enable_user_history_predictions_as_inline_from_crank_cifg\" value=\"$GBSTF\"/\"enable_user_history_predictions_as_inline_from_crank_cifg\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"extends_touch_below_space\" value=\"$GBSTF\"/\"extends_touch_below_space\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"fast_access_bar_enable_frequently_used\" value=\"$GBSTF\"/\"fast_access_bar_enable_frequently_used\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"fast_access_bar_enable_instantly_remove\" value=\"$GBSTF\"/\"fast_access_bar_enable_instantly_remove\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"keyboard_redesign_forbid_key_shadows\" value=\"$GBSTKSF\"/\"keyboard_redesign_forbid_key_shadows\" value=\"$GBSTKST\"/g" $GBSTEXML
sed -i -e "s/\"keyboard_redesign_google_sans\" value=\"$GBSTF\"/\"keyboard_redesign_google_sans\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"lm_personalization_enabled\" value=\"$GBSTF\"/\"lm_personalization_enabled\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"native_language_hint_by_system_locales\" value=\"$GBSTF\"/\"native_language_hint_by_system_locales\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"nebulae_enable_input_action_collection\" value=\"$GBSTF\"/\"nebulae_enable_input_action_collection\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"nwp_threshold_for_two_words_completions\" value=\"-0.4\"/\"nwp_threshold_for_two_words_completions\" value=\"-0.3\"/g" $GBSTEXML
sed -i -e "s/\"pill_shaped_key\" value=\"$GBSTSKF\"/\"pill_shaped_key\" value=\"$GBSTSKT\"/g" $GBSTEXML
sed -i -e "s/\"pseudo_spellchecker_mode\" value=\"0\"/\"pseudo_spellchecker_mode\" value=\"1\"/g" $GBSTEXML
sed -i -e "s/\"show_branding_interval_seconds\" value=\"86400000\"/\"show_branding_interval_seconds\" value=\"0\"/g" $GBSTEXML
sed -i -e "s/\"show_branding_on_space\" value=\"$GBSTF\"/\"show_branding_on_space\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"silk_on_all_pixel\" value=\"$GBSTF\"/\"silk_on_all_pixel\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"silk_theme\" value=\"$GBSTF\"/\"silk_theme\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"spellchecker_enable_language_trigger\" value=\"$GBSTF\"/\"spellchecker_enable_language_trigger\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"spellchecker_enable_rule_trigger\" value=\"$GBSTF\"/\"spellchecker_enable_rule_trigger\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"supports_battery_saver_theme\" value=\"$GBSTF\"/\"supports_battery_saver_theme\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"threshold_for_single_word_completions\" value=\"-8.0\"/\"threshold_for_single_word_completions\" value=\"-5.0\"/g" $GBSTEXML
sed -i -e "s/\"time_interval_percentile\" value=\"90\"/\"time_interval_percentile\" value=\"67\"/g" $GBSTEXML
sed -i -e "s/\"trigger_spell_check_in_composing_delay\" value=\"3000\"/\"trigger_spell_check_in_composing_delay\" value=\"1500\"/g" $GBSTEXML
sed -i -e "s/\"trigger_spell_check_in_sentence_delay\" value=\"2000\"/\"trigger_spell_check_in_sentence_delay\" value=\"1000\"/g" $GBSTEXML
sed -i -e "s/\"use_keyboard_redesign_on_existing_theme\" value=\"$GBSTF\"/\"use_keyboard_redesign_on_existing_theme\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"use_keyboard_redesign_on_existing_theme_on_all_users\" value=\"$GBSTF\"/\"use_keyboard_redesign_on_existing_theme_on_all_users\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"use_keyboard_redesign_theme_by_default\" value=\"$GBSTF\"/\"use_keyboard_redesign_theme_by_default\" value=\"$GBSTT\"/g" $GBSTEXML
sed -i -e "s/\"use_silk_theme_by_default\" value=\"$GBSTF\"/\"use_silk_theme_by_default\" value=\"$GBSTT\"/g" $GBSTEXML
if $BOOTMODE; then
am force-stop com.google.android.inputmethod.latin >/dev/null
am start -a android.intent.action.MAIN -n com.google.android.inputmethod.latin/com.google.android.apps.inputmethod.latin.firstrun.LatinFirstRunActivity >/dev/null
fi
fi
SET_PERM_RM -msgdi
}

IPSBINNI() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/statusbarincreasenumbernotificationicons ]; then
UIP -d "$MSGFI Status Bar Increase Number Icons, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
rm -f $IPPSO/SUIStatusBarIncreaseNumberNotificationIcons.apk $AIOPFMDPH/cutoutincreasenumbernotificationicons
UIP "$MSGDRM"
fi
else
if [ $MIUI != true ] && [ "$ASDK" -ge 29 ]; then
UCSA -ent "Install Status Bar Increase Number Icons $VIPSBINNI?" "IPSBINNIS"
fi
fi
}

IPSBINNIS() {
UCSA -a "$(seq 1 1 10)" "Choose Variant Number Of Icons:" "Number Of Icons" "10"; VAACINN=$UCSFNMC
if $UCSFNM; then UCSA -a "0dip 2dip 4dip 6dip" "Choose Dot Size" "Size" "6dip"; VAACINND=$UCSFNMC; fi
if $UCSFNM; then
UIP "Installing Status Bar Increase Number Icons $IAMM"
UZTPN "SBINNI"
if $MAGISK; then
PTMFI "$IDSBINNI" "CINNOverlayMod CINNI" "$MIPPSO"
cp -f $TMPDIR/SBINNI/StatusBarIncreaseNumberNotificationIcons-$VAACINN-$VAACINND.apk $MODPATH/$MODID$MIPPSO
MMPR -v "Status Bar Increase Number Notification Icons" "$VIPSBINNI" "Status Bar Increase Number Notification Icons $MSGFMM Set On - $VAACINN, Dot Size Set On - $VAACINND"
else
cp -f $TMPDIR/SBINNI/StatusBarIncreaseNumberNotificationIcons-$VAACINN-$VAACINND.apk $IPPSO/StatusBarIncreaseNumberNotificationIcons.apk
touch $AIOPFMDPH/statusbarincreasenumbernotificationicons
fi
SET_PERM_RM -msgdi
fi
}

IPGPPM() {
if $MAGISK && $ATEN && [ $MIUI != true ] && SP_CHECKER "$XMLSECURE" "global_actions_panel_debug_enabled global_actions_panel_available"; then UCSA "Activate GPay Power Menu $VIPGPPM?" "IPGPPMS"; fi
}

IPGPPMS() {
UIP "Installing GPay Power Menu $IAMM"
PTMFI -nmp "$IDGPPM"
MSSERVICE "$SPSECURE global_actions_panel_debug_enabled 0; $SPSECURE global_actions_panel_available 0" "$SPSECURE global_actions_panel_debug_enabled 1; $SPSECURE global_actions_panel_available 1" "GPPM"
if $BOOTMODE; then UIP "GPay Power Menu Activated Right Now"; $SPSECURE global_actions_panel_debug_enabled 1; $SPSECURE global_actions_panel_available 1; fi
MMPR -v "GPay Power Menu" "$VIPGPPM" "Enable Google Pay Quick Wallet Access In The Power Menu"; SET_PERM_RM -msgdi
}

IPRUI() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/roundedui ]; then
UIP -d "$MSGFI RoundedUI, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
rm -f $IPPSO/RoundedUI*.apk $IPPSO/RoundedSL*.apk $AIOPFMDPH/roundedui
UIP "$MSGDRM"
fi
else
if [ "$ASDK" -ge 29 ]; then
UCSA -ent "Install RoundedUI $VIPRUI?" "IPRUIS"
fi
fi
}

IPRUIS() {
UCSA -a "0dip 5dip 10dip 15dip 20dip 25dip 33dip" "Choose Rounded Size:" "Rounded Size" "33dip"
if $UCSFNM; then
UIP "Installing RoundedUI $IAMM"
UZTPN "RoundedUI"
if $MAGISK; then
PTMFI "$IDRUI" "UIROUNDED" "$MIPPSO"
cp -f $TMPDIR/$MODID/Rounded*-$UCSFNMC.apk $MODPATH/$MODID$MIPPSO
MMPR -v "RoundedUI" "$VIPRUI" "RoundedUI $MSGFMM Set On - $UCSFNMC"
else
cp -f $TMPDIR/RoundedUI/Rounded*-$UCSFNMC.apk $IPPSO; touch $AIOPFMDPH/roundedui
fi
SET_PERM_RM -msgdi
fi
}

IPBIP() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/burninprotection ]; then
UIP -d "$MSGFI Burn In Protection, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
rm -f $IPPSO/AndroidBurnInProtection*.apk $IPPSO/SUIBurnInProtection*.apk
UIP "$MSGDRM"
fi
else
if [ $MIUI != true ] && [ "$ASDK" -ge 29 ]; then
UCSA -ent "Install Burn In Protection $VIPBIP?" "IPBIPS"
fi
fi
}

IPBIPS() {
UCSA -a "20 40 60" "Choose Shift Interval:" "Interval" "60"; SHIFTINTERVAL=$UCSFNMC
if $UCSFNM; then UCSA -a "4dip 6dip" "Choose Horizontal Shift:" "Shift" "6dip"; HORIZONTALSWIFT=$UCSFNMC; fi
if $UCSFNM; then UCSA -a "4dip 6dip" "Choose Vertical Shift:" "Shift" "6dip"; VERTICALSWIFT=$UCSFNMC; fi
if $UCSFNM; then UCSA -a "20dip 30dip 40dip" "Choose AOD Horizontal Shift:" "Shift" "40dip"; AODHORIZONTALSWIFT=$UCSFNMC; fi
if $UCSFNM; then UCSA -a "20dip 30dip 40dip" "Choose AOD Vertical Shift:" "Shift" "40dip"; AODVERTICALSWIFT=$UCSFNMC; fi
if $UCSFNM; then
UIP "Installing Burn In Protection $IAMM"
UZTPN "BIP"
if $MAGISK; then
PTMFI -nm "$IDBIP" "$MIPPSO"
cp -f $TMPDIR/BIP/*BurnInProtection*-$SHIFTINTERVAL-$HORIZONTALSWIFT-$VERTICALSWIFT-$AODHORIZONTALSWIFT-$AODVERTICALSWIFT*.apk $MODPATH/$MODID$MIPPSO
MMPR -v "Burn In Protection" "$VIPBIP" "Burn In Protection - $SHIFTINTERVAL-$HORIZONTALSWIFT-$VERTICALSWIFT-$AODHORIZONTALSWIFT-$AODVERTICALSWIFT $MSGFMM"
else
cp -f $TMPDIR/BIP/*BurnInProtection*-$SHIFTINTERVAL-$HORIZONTALSWIFT-$VERTICALSWIFT-$AODHORIZONTALSWIFT-$AODVERTICALSWIFT*.apk $IPPSO
touch $AIOPFMDPH/burninprotection
fi
SET_PERM_RM -msgdi
fi
}

IPNSP() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/notificationsidepaddings ]; then
UIP -d "$MSGFI Notification Side Paddings, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
rm -f $IPPSO/NotificationSidePaddings*.apk $AIOPFMDPH/notificationsidepaddings
UIP "$MSGDRM"
fi
else
if [ $MIUI != true ] && [ "$ASDK" -ge 29 ]; then
UCSA -ent "Install Notification Side Paddings $VIPNSP?" "IPNSPS"
fi
fi
}

IPNSPS() {
UCSA -a "0dip 5dip 10dip 15dip 20dip 25dip 30dip" "Side For Notification:" "Paddings Size" "30dip"; NSPCOS=$UCSFNMC
if $UCSFNM; then UCSA -a "0dip 5dip 10dip 15dip 20dip 25dip 30dip" "Side For First QS Notification:" "Paddings Size" "30dip"; NSPCOSA=$UCSFNMC; fi
if $UCSFNM; then
UIP "Installing Notification Side Paddings $IAMM"
UZTPN "NSP"
if $MAGISK; then
PTMFI -nm "$IDNSP" "$MIPPSO"
cp -f $TMPDIR/NSP/NotificationSidePaddings-$NSPCOS-$NSPCOSA.apk $MODPATH/$MODID$MIPPSO
MMPR -v "Notification Side Paddings" "$VIPNSP" "Notification Side Paddings Set On - $NSPCOS-$NSPCOSA, $MSGFMM"
else
cp -f $TMPDIR/NSP/NotificationSidePaddings-$NSPCOS-$NSPCOSA.apk $IPPSO; touch $AIOPFMDPH/notificationsidepaddings
fi
SET_PERM_RM -msgdi
fi
}

IPSBIS() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/statusbariconspace ]; then
UIP -d "$MSGFI Status Bar Icon Space, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
rm -f $IPPSO/*StatusBarIconSpace*.apk $AIOPFMDPH/statusbariconspace
UIP "$MSGDRM"
fi
else
if [ $MIUI != true ] && [ "$ASDK" -ge 29 ]; then
UCSA -ent "Install Status Bar Icon Space $VIPSBIS?" "IPSBISS"
fi
fi
}

IPSBISS() {
UCSA -a "14dip 15dip 16dip 17dip 18dip 19dip 20dip" "Choose Space:" "Left Icon" "20dip"; ASBIS=$UCSFNMC
if $UCSFNM; then UCSA -a "-4dip -3dip -2dip -1dip 0dip 1dip 2dip 3dip 4dip" "Choose Space:" "Right Icon" "4dip"; SUISBIS=$UCSFNMC; fi
if $UCSFNM; then UCSA -a "0dip 1dip 2dip 3dip 4dip" "Choose Space:" "Battery Icon" "4dip"; BSUISBIS=$UCSFNMC; fi
if $UCSFNM; then
UIP "Installing Status Bar Icon Space $IAMM"
UZTPN "SBIS"
if $MAGISK; then
PTMFI -nm "$IDSBIS" "$MIPPSO"
cp -f $TMPDIR/SBIS/AndroidStatusBarIconSpace-$ASBIS.apk $MODPATH/$MODID$MIPPSO
cp -f $TMPDIR/SBIS/SUIStatusBarIconSpace-$SUISBIS-$BSUISBIS.apk $MODPATH/$MODID$MIPPSO
MMPR -v "Status Bar Icon Space" "$VIPSBIS" "Status Bar Icon Space Set On - $ASBIS/$SUISBIS/$BSUISBIS, $MSGFMM"
else
cp -f $TMPDIR/SBIS/AndroidStatusBarIconSpace-$ASBIS.apk $IPPSO
cp -f $TMPDIR/SBIS/SUIStatusBarIconSpace-$SUISBIS-$BSUISBIS.apk $IPPSO
touch $AIOPFMDPH/statusbariconspace
fi
SET_PERM_RM -msgdi
fi
}

IPSBCS() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/statusbarclocksize ]; then
UIP -d "$MSGFI Status Bar Clock Size, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
rm -f $IPPSO/StatusBarClockSize*.apk $AIOPFMDPH/statusbarclocksize
UIP "$MSGDRM"
fi
else
if [ $MIUI != true ] && [ "$ASDK" -ge 29 ]; then
UCSA -ent "Install Status Bar Clock Size $VIPSBCS?" "IPSBCSS"
fi
fi
}

IPSBCSS() {
UCSA -a "10sp 11sp 12sp 13sp 14sp 15sp 16sp 17sp 18sp 19sp 20sp" "Choose Size:" "Clock Size" "20sp"
if $UCSFNM; then
UIP "Installing Status Bar Clock Size $IAMM"
UZTPN "SBCS"
if $MAGISK; then
PTMFI -nm "$IDSBCS" "$MIPPSO"
cp -f $TMPDIR/SBCS/StatusBarClockSize-$UCSFNMC.apk $MODPATH/$MODID$MIPPSO
MMPR -v "Status Bar Clock Size" "$VIPSBCS" "Status Bar Clock Size Set On - $UCSFNMC, $MSGFMM"
else
cp -f $TMPDIR/SBCS/StatusBarClockSize-$UCSFNMC.apk $IPPSO
touch $AIOPFMDPH/statusbarclocksize
fi
SET_PERM_RM -msgdi
fi
}

IPSUE() {
if $MAGISK && [ $MIUI != true ] && SP_CHECKER "$XMLGLOBAL" "guest_user_enabled"; then UCSA "Install Single User Enabler $VIPSUE?" "IPSUES"; fi
}

IPSUES() {
UIP "Installing Single User Enabler $IAMM"
PTMFI -np "$IDSUE" "SingleUserMod"
MSSERVICE "$SPGLOBAL guest_user_enabled 1" "$SPGLOBAL guest_user_enabled 0" "SUM"
echo -e "fw.max_users=1\nfw.show_multiuserui=0" > $MODPATH/$MODID/system.prop
MMPR -v "Single User Enabler" "$VIPSUE" "Disable MultiUsers $MSGFMM"; SET_PERM_RM -msgdi
}

IPSBP() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/statusbarpadding ]; then
UIP -d "$MSGFI Status Bar Padding, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
rm -f $IPPSO/StatusBarPadding.apk $AIOPFMDPH/statusbarpadding
UIP "$MSGDRM"
fi
else
if [ $MIUI != true ] && [ "$ASDK" -ge 29 ]; then
UCSA -ent "Install Status Bar Padding $VIPSBP?" "IPSBPS"
fi
fi
}

IPSBPS() {
UIP -d "Choose Variant:" "$MSGVU Choose One Start/End" "$MSGVD Choose Start/End Separately"
if $KEYFUNCTION; then UCSA -a "0dip 5dip 10dip 15dip 20dip 25dip 30dip 35dip 40dip 45dip 50dip" "Choose Padding Start/End:" "Padding" "50dip"
SCSBPCO=$UCSFNMC; SCSBPCT=$UCSFNMC
else
UCSA -a "0dip 5dip 10dip 15dip 20dip 25dip 30dip 35dip 40dip 45dip 50dip" "Choose Padding Start:" "Padding" "50dip"
SCSBPCO=$UCSFNMC
if $UCSFNM; then
UCSA -a "0dip 5dip 10dip 15dip 20dip 25dip 30dip 35dip 40dip 45dip 50dip" "Choose Padding End:" "Padding" "50dip"
SCSBPCT=$UCSFNMC
fi
fi
if $UCSFNM; then
UIP "Installing Status Bar Padding $IAMM"
UZTPN "SBP"
if $MAGISK; then
PTMFI "$IDSBP" "SUIContentPadding" "$MIPPSO"
MMPR -v "Status Bar Padding" "$VIPSBP" "Status Bar Padding $MSGFMM - Set On: Start - $SCSBPCO & End - $SCSBPCT"
cp -f $TMPDIR/SBP/StatusBarPadding-$SCSBPCO-$SCSBPCT.apk $MODPATH/$MODID$MIPPSO
else
cp -f $TMPDIR/SBP/StatusBarPadding-$SCSBPCO-$SCSBPCT.apk $IPPSO/StatusBarPadding.apk
touch $AIOPFMDPH/statusbarpadding
fi
SET_PERM_RM -msgdi
fi
}

IPQSCP() {
if $MAGISK && [ $MIUI != true ] && [ "$ASDK" -ge 29 ] && SP_CHECKER "$XMLSECURE" "sysui_rounded_content_padding"; then
UCSA -ent "Install QS Content Padding $VIPQSCP?" "IPQSCPS"
fi
}

IPQSCPS() {
UCSA -a "$(seq 0 5 40)" "Choose Padding Size:" "Padding Size" "40"
if $UCSFNM; then
UIP "Installing QS Content Padding $IAMM"
if $BOOTMODE; then UIP "QS Content Padding Activated Right Now"; $SPSECURE sysui_rounded_content_padding $UCSFNMC; fi
PTMFI -nmp "$IDQSCP"
MSSERVICE -s "$SPSECURE sysui_rounded_content_padding $UCSFNMC"
MMPR -v "QS Content Padding" "$VIPQSCP" "QS Content Padding $MSGFMM - Set On $UCSFNMC"; SET_PERM_RM -msgdi
fi
}

IPSUIRSRS() {
if $MAGISK && [ $MIUI != true ] && [ "$ASDK" -ge 29 ] && SP_CHECKER "$XMLSECURE" "sysui_rounded_size"; then
UCSA -ent "Install SUI Rounded Size $VIPSUIRSRS?" "IPSUIRSRSS"
fi
}

IPSUIRSRSS() {
UCSA -a "0 10 20 33 40 50 60 70 80 90 100" "Choose Rounded Size:" "Rounded Size" "100"
if $UCSFNM; then
UIP "Installing SUI Rounded Size $IAMM"
if $BOOTMODE; then UIP "SUI Rounded Size Activated Right Now"; $SPSECURE sysui_rounded_size $UCSFNMC; fi
PTMFI -nmp "$IDSUIRSRS"
MSSERVICE -s "$SPSECURE sysui_rounded_size $UCSFNMC"
MMPR -v "SUI Rounded Size" "$VIPSUIRSRS" "SUI Rounded Size $MSGFMM - Set On $UCSFNMC"; SET_PERM_RM -msgdi
fi
}

IPQSCIAR() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/qscounticonandrows ]; then
UIP -d "$MSGFI QS Count Icon And Rows, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
rm -f $IPPSO/QSCountIconAndRows*.apk $AIOPFMDPH/qscounticonandrows
UIP "$MSGDRM"
fi
else
if $MAGISK && [ $MIUI != true ] && [ "$ASDK" -ge 29 ]; then UCSA -ent "Install QS Count Icon And Rows $VIPQSCIAR?" "IPQSCIARS"; fi
fi
}

IPQSCIARS() {
UCSA -a "$(seq 4 1 10)" "Minimized QS:" "Count" "10"; SUIQSC=$UCSFNMC
if $UCSFNM; then UCSA -a "$(seq 4 1 10)" "Expand Portrait QS:" "Count" "10"; SUIQSCP=$UCSFNMC; fi
if $UCSFNM; then UCSA -a "$(seq 4 1 10)" "Expand Landscape QS:" "Count" "10"; SUIQSCL=$UCSFNMC; fi
if $UCSFNM; then UCSA -a "$(seq 1 1 3)" "QS Rows Portrait:" "Count" "3"; SUIQSRP=$UCSFNMC; fi
if $UCSFNM; then UCSA -a "$(seq 1 1 3)" "QS Rows Landscape:" "Count" "3"; SUIQSRL=$UCSFNMC; fi
if $UCSFNM; then
UIP "Installing QS Count Icon And Rows $IAMM"
UZTPN "QSCIAR"
if $MAGISK; then
PTMFI "$IDQSCIAR" "QSCIAR" "$MIPPSO"
cp -f $TMPDIR/QSCIAR/QSCountIconAndRows-$SUIQSC-$SUIQSCP-$SUIQSCL-$SUIQSRP-$SUIQSRL.apk $MODPATH/$MODID$MIPPSO
MMPR -v "SUI QS Count Icon And Rows" "$VIPQSCIAR" "QS Count Icon And Rows $MSGFMM"
else
cp -f $TMPDIR/QSCIAR/QSCountIconAndRows-$SUIQSC-$SUIQSCP-$SUIQSCL-$SUIQSRP-$SUIQSRL.apk $IPPSO
touch $AIOPFMDPH/qscounticonandrows
fi
SET_PERM_RM -msgdi
fi
}

IPEBB() {
if $MAGISK && [ $MIUI != true ] && [ "$ASDK" -ge 30 ]; then
UCSA -ent "Install Background Blur $VIPEBB?" "IPEBBS"
fi
}

IPEBBS() {
UIP "Background Blur $IAMM"
PTMFI -nmp "$IDEBB"
echo "resetprop ro.surface_flinger.supports_background_blur 1 && killall surfaceflinger" > $MODPATH/$MODID/service.sh
MMPR -v "Background Blur" "$VIPEBB" "Enable Background Blur $MSGFMM"; SET_PERM_RM -msgdi
}

IPBA() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/bootanimation ] && [ -f $IPPM/bootanimation.zip.bak ]; then
UIP -d "$MSGFI Boot Animation, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
BUCKUPER -r "$IPPM/bootanimation.zip $IPPM/bootanimation-dark.zip"
rm -f $AIOPFMDPH/bootanimation
UIP "$MSGDRM"
fi
else
if [ $MIUI != true ]; then
UCSA "Install Boot Animation $VIPBA?" "IPBAS"
fi
fi
}

IPBAS() {
BATC=false
UIP -d "Choose Boot Animation:" "$MSGVU Google Pixel" "$MSGVD $MSGNIS"
if $KEYFUNCTION; then
UIP -d "Choose Color Variant:" "$MSGVU Black" "$MSGVD White"
if $KEYFUNCTION; then BADIR=GPBAB; else BADIR=GPBAW; fi; BATC=true
else
UIP -d "Choose Boot Animation:" "$MSGVU TenX" "$MSGVD $MSGNIS"
if $KEYFUNCTION; then
UIP -d "Choose Color Variant:" "$MSGVU Black" "$MSGVD White"
if $KEYFUNCTION; then BADIR=TENXB; else BADIR=TENXW; fi; BATC=true
else
UIP -d "Choose Boot Animation:" "$MSGVU PixelPlusUI" "$MSGVD $MSGNIS"
if $KEYFUNCTION; then
UIP -d "Choose Color Variant:" "$MSGVU Black" "$MSGVD White"
if $KEYFUNCTION; then BADIR=PPUIB; else BADIR=PPUIW; fi; BATC=true
else
UIP -d "Choose Boot Animation:" "$MSGVU Radiant" "$MSGVD $MSGNIS"
if $KEYFUNCTION; then
BATC=true; BADIR=RADIANT
else
UIP -d "Choose Boot Animation:" "$MSGVU Spark" "$MSGVD $MSGNUS"
if $KEYFUNCTION; then
BATC=true; BADIR=SPARK
fi
fi
fi
fi
fi
if $BATC; then
UIP -d "Choose FPS:" "$MSGVU 60" "$MSGVD 30"; if $KEYFUNCTION; then BAFPS="60"; else BAFPS="30"; fi
UIP "Installing Boot Animation $IAMM"
UZTPN "BA"
sed -i "s/#FPS/$BAFPS/g" $TMPDIR/BA/$BADIR/desc.txt
cd $TMPDIR/BA/$BADIR
$ZIPPACKER -r -0 $TMPDIR/BA/$BADIR * >/dev/null
mv -f $TMPDIR/BA/$BADIR.zip $TMPDIR/BA/bootanimation.zip
if $MAGISK; then
PTMFI -nm "$IDBA" "$MIPPM"
cp -f $TMPDIR/BA/bootanimation.zip $MODPATH/$MODID$MIPPM
if [ -f $IPPM/bootanimation-dark.zip ]; then cp -f $TMPDIR/BA/bootanimation.zip $MODPATH/$MODID$MIPPM/bootanimation-dark.zip; fi
MMPR -v "Boot Animation" "$VIPBA" "Boot Animation $MSGFMM"
else
BUCKUPER -s "$IPPM/bootanimation.zip $IPPM/bootanimation-dark.zip"
cp -f $TMPDIR/BA/bootanimation.zip $IPPM; touch $AIOPFMDPH/bootanimation
if [ -f $IPPM/bootanimation-dark.zip ]; then cp -f $TMPDIR/BA/bootanimation.zip $IPPM/bootanimation-dark.zip; fi
fi
SET_PERM_RM -msgdi
fi
}

IPIOSEMOJI() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/iosemoji ] && [ -f $IPSF/NotoColorEmoji.ttf.bak ]; then
UIP -d "$MSGFI IOS Emoji, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
BUCKUPER -r "$IPSF/NotoColorEmoji.ttf $IPSF/SamsungColorEmoji.ttf"
rm -f $AIOPFMDPH/iosemoji
UIP "$MSGDRM"
fi
else
UCSA "Install IOS Emoji Of IOS 15.4 $VIPIOSEMOJI?" "IPIOSEMOJIS"
fi
}

IPIOSEMOJIS() {
UIP "Installing IOS Emoji $IAMM"
UZTPN "IOSEmoji"
if $MAGISK; then
PTMFI "$IDIOSEMOJI" "iOS14.6_Emoji_for_Android emoji-replacer-809887617 android11emoji EmojiReplacer" "$MIPSF"
cp -f $TMPDIR/IOSEmoji/NotoColorEmoji.ttf $MODPATH/$MODID$MIPSF; cp -f $TMPDIR/IOSEmoji/NotoColorEmoji.ttf $MODPATH/$MODID$MIPSF/SamsungColorEmoji.ttf
MMPR -v "IOS Emoji" "$VIPIOSEMOJI" "IOS Emoji 15.4 $MSGFMM"
MSSERVICE -s "sed -i \"/emoji_compat_app_whitelist/d\" $GBSTEXML"
else
sed -i "/emoji_compat_app_whitelist/d" $GBSTEXML
BUCKUPER -s "$IPSF/NotoColorEmoji.ttf $IPSF/SamsungColorEmoji.ttf"
cp -f $TMPDIR/IOSEmoji/NotoColorEmoji.ttf $IPSF; cp -f $TMPDIR/IOSEmoji/NotoColorEmoji.ttf $IPSF/SamsungColorEmoji.ttf; touch $AIOPFMDPH/iosemoji
fi
if [ -f /data/fonts/config/config.xml ]; then
SFONTS=$(grep -m1 "^<updatedFontDir value=" "/data/fonts/config/config.xml" | cut -d'"' -f2 | cut -d ' ' -f1)
if [ -d /data/fonts/files/$SFONTS ]; then
UIP "Found $SFONTS in /data/fonts/files"
rm -rf /data/fonts/files/$SFONTS /data/fonts/config/config.xml
fi
fi
SET_PERM_RM -msgdi
}

IPMUIS() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/mediauisounds ]; then
UIP -d "$MSGFI Media UI Sounds, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
IPMUISSA
rm -f $AIOPFMDPH/MediaUISounds
UIP "$MSGDRM"
fi
else
if [ $MIUI != true ]; then
UCSA "Install Media UI Sounds $VIPMUIS?" "IPMUISS"
fi
fi
}

IPMUISS() {
UCSA -a "Masik OnePlus Pixel Samsung Oppo Spark Arcane" "Choose Media Variant:" "Media From" "Arcane"
if $UCSFNM; then
UIP "Installing Media UI Sounds $IAMM"
UZTPN "MediaUISounds"
case $UCSFNMC in
"Masik") UIP -d "Use Masik Alt Lock Unlock Sound?" "$MSGVU Yes" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then mv -f $TMPDIR/MediaUISounds/MasikAlt/* $TMPDIR/MediaUISounds/Masik; fi;;
esac
if $MAGISK; then
PTMFI "$IDMUIS" "MediaUiSounds" "$MIPPMU"
cp -f $TMPDIR/$MODID/$UCSFNMC/* $MODPATH/$MODID$MIPPMU
MMPR -v "Media UI Sounds" "$VIPMUIS" "Media UI Sounds Media From $UCSFNMC $MSGFMM"
else
IPMUISSA
cp -f $TMPDIR/MediaUISounds/$UCSFNMC/* $IPPMU
touch $AIOPFMDPH/mediauisounds
fi
SET_PERM_RM -msgdi
fi
}

IPMUISSA() {
BUCKUPER -s "
$IPPMU/audio_end.ogg
$IPPMU/audio_initiate.ogg
$IPPMU/camera_click.ogg
$IPPMU/camera_focus.ogg
$IPPMU/ChargingStarted.ogg
$IPPMU/Dock.ogg
$IPPMU/Effect_Tick.ogg
$IPPMU/InCallNotification.ogg
$IPPMU/KeypressDelete.ogg
$IPPMU/KeypressInvalid.ogg
$IPPMU/KeypressReturn.ogg
$IPPMU/KeypressSpacebar.ogg
$IPPMU/KeypressStandard.ogg
$IPPMU/Lock.ogg
$IPPMU/LowBattery.ogg
$IPPMU/NFCFailure.ogg
$IPPMU/NFCInitiated.ogg
$IPPMU/NFCSuccess.ogg
$IPPMU/NFCTransferComplete.ogg
$IPPMU/NFCTransferInitiated.ogg
$IPPMU/Trusted.ogg
$IPPMU/Undock.ogg
$IPPMU/Unlock.ogg
$IPPMU/VideoRecord.ogg
$IPPMU/VideoStop.ogg
$IPPMU/WirelessChargingStarted.ogg
"
}

IPFDNI() {
if $MAGISK && [ $MIUI != true ] && [ "$ASDK" -ge 29 ] && $LEGACYMODE; then
UCSA "Install Force Disable Notification Icons $VIPFDNI?" "IPFDNIS"
fi
}

IPFDNIS() {
UIP "Installing Force Disable Notification Icons $IAMM"
PTMFI -np "$IDFDNI" "MediaUiSounds"
MSSERVICE -s "cmd statusbar send-disable-flag notification-icons"
MMPR -v "Force Disable Notification Icons" "$VIPFDNI" "Force Disable Notification Icons $MSGFMM"; SET_PERM_RM -msgdi
}

IPWFAMDQSSC() {
if $MAGISK && [ $MIUI != true ] && [ "$ASDK" -ge 31 ]; then UCSA "Install Wi-Fi & Mobile Data QS Style Changer $VIPWFAMDQSSC?" "IPWFAMDQSSCS"; fi
}

IPWFAMDQSSCS() {
UIP "Installing Wi-Fi & Mobile Data QS Style Changer $IAMM"
PTMFI -np "$IDWFAMDQSSC" "OldDataWifiQsStyle"
MSSERVICE "$SPGLOBAL settings_provider_model true; $SPSECURE sysui_qs_tiles \"internet,\$($SGSECURE sysui_qs_tiles)\"" "$SPGLOBAL settings_provider_model false; $SPSECURE sysui_qs_tiles \"wifi,cell,\$($SGSECURE sysui_qs_tiles)\"" "WFAMDQSSC"
if $BOOTMODE; then UIP "Wi-Fi & Mobile Data QS Style Changer Right Now"; $SPGLOBAL settings_provider_model false; $SPSECURE sysui_qs_tiles "wifi,cell,$($SGSECURE sysui_qs_tiles)"; fi
MMPR -v "Wi-Fi & Mobile Data QS Style Changer" "$VIPGPPM" "Wi-Fi & Mobile Data QS Style Changer"; SET_PERM_RM -msgdi
}

} #

{ #Apps: Lawnchair/Shady/IA

IPSL() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/systemlesslauncher ]; then
UIP -d "$MSGFI Systemless Launcher, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
REMOVER -rm "$IPSPO/QuickStepRecentsProvider $IPSO/QuickStepRecentsProvider $IPVO/QuickStepRecentsProvider $IPSA/NexusLauncherRelease $IPSA/OPLauncherReleases $IPSA/OneUIHome $IPSA/Lawnchair $IPSA/ShadyQuickStep $IPSEP/privapp-permissions-pixel-launcher.xml $IPSEP/privapp-permissions-op-launcher.xml $IPSEP/privapp-permissions-com.sec.android.app.launcher.xml $IPSEP/privapp-permissions-lawnchair.xml $IPSEP/privapp-permissions-shady-launcher.xml $IPSE/pixel-launcher-hiddenapi-package-whitelist.xml $IPSE/op-launcher-hiddenapi-package-whitelist.xml $IPSE/com.sec.android.app.launcher-hiddenapi-package-whitelist.xml $IPSE/lawnchair-hiddenapi-package-whitelist.xml"
rm -f $AIOPFMDPH/systemlesslauncher
UIP "$MSGDRM"
fi
else
if [ $MIUI != true ]; then
if $AELEVEN || $ATWELVE; then
UCSA -ent "Install Systemless Launcher?" "IPSLS"
fi
fi
fi
}

IPSLS() {
UZTPN "QSRP" &
SYSTEMLESSLAUNCHERS=false
if $AELEVEN || $ATWELVE; then
if $AELEVEN; then
UIP -d "Install Lawnchair $VIPASLS" "$MSGVU Yes" "$MSGVD No $MSGNIS"
elif $ATWELVE; then
UIP -d "Install Lawnchair $VIPASLS" "$MSGVU Yes" "$MSGVD No $MSGNUS"
fi
if $KEYFUNCTION; then
UIP "Installing Lawnchair $IAMM"
SYSTEMLESSLAUNCHERS=true
MODID="$IDSL"
UZTPN "$MODID-$ACNV"
cp -rf $TMPDIR/$MODID-$ACNV $TMPDIR/$MODID
APKPERM "$TMPDIR/$MODID$MIPSA/Lawnchair/Lawnchair.apk" "$TMPDIR/$MODID$MIPSEP"; HAPWL "$TMPDIR/$MODID$MIPSES"
mkdir -p $TMPDIR/$MODID$MIPPSO; cp -f $TMPDIR/QSRP/QuickStepRecentsProvider-$PACKAGENAME.apk $TMPDIR/$MODID$MIPPSO/QuickStepRecentsProvider.apk
if $MAGISK; then
REMOVER -mm "$MMLAUNCHERLIST"
cp -rf $TMPDIR/$MODID $MODPATH
MMPR -v "Systemless Lawnchair" "$VIPSL" "Systemlessly Install Lawnchair On Your Device With Android 11-12 Recents UI Support"
touch $MODPATH/$MODID/update
fi
fi
fi
if [ $SYSTEMLESSLAUNCHERS != true ]; then
if $AELEVEN; then
SYSTEMLESSLAUNCHERS=false
MSGDELIMITER
UIP "ShadyLauncher $VIPSSLR" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Installing ShadyLauncher $IAMM"
SYSTEMLESSLAUNCHERS=true
MODID="$IDSSL"
UZTPN "$MODID-$ACNV"
cp -rf $TMPDIR/$MODID-$ACNV $TMPDIR/$MODID
APKPERM "$TMPDIR/$MODID$MIPSA/ShadyQuickStep/ShadyQuickStep.apk" "$TMPDIR/$MODID$MIPSEP"; HAPWL "$TMPDIR/$MODID$MIPSES"
mkdir -p $TMPDIR/$MODID$MIPPSO; cp -f $TMPDIR/QSRP/QuickStepRecentsProvider-$PACKAGENAME.apk $TMPDIR/$MODID$MIPPSO/QuickStepRecentsProvider.apk
if $MAGISK; then
REMOVER -mm "$MMLAUNCHERLIST"
cp -rf $TMPDIR/$MODID $MODPATH
MMPR -vc "Systemless Shady Launcher" "$VIPSSLR" "$VCIPSSLR" "SKULSHADY" "Systemlessly install Shady Launcher on your device with Android 11 recents UI support. Launcher created by SKULSHADY."
touch $MODPATH/$MODID/update
fi
fi
fi
fi
if $SYSTEMLESSLAUNCHERS; then
if $MAGISK; then
echo "ro.boot.vendor.overlay.static=false" > $MODPATH/$MODID/system.prop
REPLACER -f "$LAUNCHERLIST"; MOVERPATH
else
cp -rf $TMPDIR/$MODID/system/* $SYSTEM
touch $AIOPFMDPH/systemlesslauncher
BUCKUPER -bp "$IPSBP"
echo -e "#Systemless Launcher\nro.boot.vendor.overlay.static=false" >> $IPSBP
fi
SET_PERM_RM -msgdi
fi
}

IPAPP() {
if [ -d $STORAGE/Applications ] && find $STORAGE/Applications -type f -name "*.apk" >/dev/null; then
UCSA "Install App From $STORAGE/Applications?" "IPAPPS"
fi
}

IPAPPS() {
UIP -d "Choose Path Variant:" "$MSGVU Install Every App In Data" "$MSGVD Install Every App In System $MSGRI"
if $KEYFUNCTION; then IAPPASD=true; else IAPPASD=false; fi
UIP -d "Choose Install Variant:" "$MSGVU Install Every App With Confirm" "$MSGVD Install Every App Without Confirm"
if $KEYFUNCTION; then IEAW=true; else IEAW=false; fi
cd $STORAGE/Applications
for F in *; do if [ -f "$F" ]; then mv "$F" `echo $F | tr ' ' '_'`; fi; done
for APKINPUT in $(ls $STORAGE/Applications); do
if [ -f $STORAGE/Applications/$APKINPUT ]; then
if $IEAW; then
UIP -d "Found $APKINPUT" "$MSGVU Install?" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
IPAPPSA
fi
else
IPAPPSA
fi
fi
done
}

IPAPPSA() {
PACKAGENAME="$($AAPT list -a "$STORAGE/Applications/$APKINPUT" | awk -v FS='"' '/package=/{print $2}')"
if $IAPPASD; then
APKINSTALLER -d "$STORAGE/Applications/$APKINPUT"
else
mkdir -p $TMPDIR/$PACKAGENAME; cp -f "$STORAGE/Applications/$APKINPUT" "$TMPDIR/$PACKAGENAME/$PACKAGENAME.apk"
APKINSTALLER -a "$PACKAGENAME" "$PACKAGENAME"; rm -rf $TMPDIR/$PACKAGENAME
if [ $MAGISK != true ]; then echo "$PACKAGENAME" >> $AIOPFMDPH/AIL.txt; fi
fi
UIP "$MSGDI"
}

} #

{ #Audio: VFX(P)/NL/AIST/SAQ/IB/AML

IPVFX() {
if $MAGISK && FINDER "$AECONFXML"; then
UCSA "Install ViperFX $VIPVFXL Or $VIPVFX" "IPVFXS"
fi
}

IPVFXS() {
UZTPN "V4AFX"
mkdir -p $TMPDIR/V4AFX/ViPERN$MIPSVE $TMPDIR/V4AFX/ViPERN$MIPSVE $TMPDIR/V4AFX/ViPERN$MIPSPA $TMPDIR/V4AFX/ViPERN$MIPSEP
UIP -d "Choose Version:" "$MSGVU ViperFX $VIPVFXL" "$MSGVD ViperFX $VIPVFX"
if $KEYFUNCTION; then
VIPERCHOOSEVERSION=true; NPVFX="$IDVFXL"
else
VIPERCHOOSEVERSION=false; NPVFX="$IDVFX"
fi
UIP "Installing ViperFX $IAMM"
mv -f $TMPDIR/V4AFX/ViPERN $TMPDIR/$NPVFX
mv -f $TMPDIR/V4AFX/$NPVFX $TMPDIR/$NPVFX$MIPSPA
APKPERM "$TMPDIR/$NPVFX$MIPSPA/$NPVFX/$NPVFX.apk" "$TMPDIR/$NPVFX$MIPSEP"
REMOVER -mm "ViPER4AndroidFX ViPER4AndroidFX-Legacy"
if $BOOTMODE; then
UIP -d "Choose Apk Install Variant:" "$MSGVU Install As Data App" "$MSGVD Install As System App"
if $KEYFUNCTION; then
pm install -r $TMPDIR/$NPVFX$MIPSPA/$NPVFX/$NPVFX.apk >/dev/null
rm -rf $TMPDIR/$NPVFX$MIPSPA
fi
fi
MODID="$NPVFX"
if $VIPERCHOOSEVERSION; then
cp -rf $TMPDIR/$NPVFX $MODPATH
MMPR -vcs "ViPER4AndroidFX Legacy" "$VIPVFXL" "$VCIPVFXL" "ViPER520, ZhuHang, Ahrion, Zackptg5" "ViPER4Android FX is an audio enhancing software to provide everyone with a better audio experience (You can choose between Material 2.5, 2.5.0.5, and 2.3.4.0 during install)" "https://forum.xda-developers.com/apps/magisk/module-viper4android-fx-2-5-0-5-t3577058"
echo -e "tunnel.decode=false\nlpa.use-stagefright=false\nlpa.releaselock=false\nlpa.decode=false" > $MODPATH/$NPVFX/system.prop
else
cp -rf $TMPDIR/$NPVFX $MODPATH
MMPR -vcsd "ViPER4AndroidFX" "$VIPVFX" "$VCIPVFX" "pittvandewitt, MrWhite214" "ViPER4Android FX is an audio enhancing software to provide everyone with a better audio experience" "http://t.me/ViPER4AndroidFX" "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=53H9TP89FLWUU"
echo "#!$IPSB/sh
# Kill audioserver PID if it exists already
SERVERPID=\$(pidof audioserver)
[ \"\$SERVERPID\" ] && kill \$SERVERPID" > $MODPATH/$NPVFX/post-fs-data.sh
echo "allow audioserver audioserver_tmpfs file { read write execute }
allow audioserver system_file file { execmod }
allow mediaserver mediaserver_tmpfs file { read write execute }
allow mediaserver system_file file { execmod }
allow audioserver unlabeled file { read write execute open getattr }
allow hal_audio_default hal_audio_default process { execmem }
allow hal_audio_default hal_audio_default_tmpfs file { execute }
allow hal_audio_default audio_data_file dir { search }
allow app app_data_file file { execute_no_trans }
allow mtk_hal_audio mtk_hal_audio_tmpfs file { execute }" > $MODPATH/$NPVFX/sepolicy.rule
fi
REPLACER -f "AudioFX MusicFX"
AEP=$MODPATH/$MODID
UIP "Patching Needed Files..."
for AE in $AECONFXML; do
UIP "Found $AE" "Patching..."
mkdir -p `dirname $AEP$AE`
cp -f $MAGISKMP$AE $AEP$AE
FILE="$(echo $AEP$AE | sed "s|^/vendor|$MIPSV|g")"
OSP_DETECT $FILE
ALBP "v4a_standard_fx" "$MODID" "$DYNLIBPATCH\/lib\/soundfx" "libv4a_fx_ics.so" "41d3c987-e6cf-11e3-a88a-11aba5d5c51b"
UIP "Files Found And Patched"
done
touch $MODPATH/$MODID/update
MOVERPATH
SET_PERM_RM -msgdi
WCANFTP "-sl -ehap"
}

IPVFXP() {
UCSA "Install Presets $VIPVFXP For ViperFX $VIPVFXL & $VIPVFX?" "IPVFXPS"
}

IPVFXPS() {
UIP "Installing Presets For ViperFX $IAMM"
UZTPN "V4AFXPresets"
mkdir -p $STORAGE/Android/data/com.pittvandewitt.viperfx/files $STORAGE/ViPER4Android
cp -rf $TMPDIR/V4AFXPresets/* $STORAGE/Android/data/com.pittvandewitt.viperfx/files
cp -rf $TMPDIR/V4AFXPresets/* $STORAGE/ViPER4Android
if $MAGISK; then
PTMFI -nmp "$IDVFXP"
MSSERVICE -u "rm -rf $STORAGE/Android/data/com.pittvandewitt.viperfx $STORAGE/ViPER4Android" "VPFXPRM"
MMPR -v "V4AFX Presets" "$VIPVFXP" "V4AFX Presets For ViperFX $VIPVFXL & $VIPVFX $MSGFMM"
fi
SET_PERM_RM -msgdi
}

IPNLS() {
if $MAGISK && $SNAPSOC; then
UCSA -eno "Install NLSound $VIPNLS?" "IPNLSS"
fi
}

IPNLSS() {
UIP "Installing NLSound $IAMM"
if $HIFI; then UIP "Device With Support Hi-Fi"; else UIP "Device Without Support Hi-Fi"; fi
NEWDIRAC=$TMPDIR/NLSound/newdirac
STEP1=false; STEP2=false; STEP3=false; STEP4=false; STEP5=false; STEP6=false; STEP7=false; STEP8=false; STEP9=false; STEP10=false; STEP11=false; STEP12=false; STEP13=false; STEP14=false; PATCHMC=false
if FINDER "$ACXML"; then
UIP -d "Disable Deep Buffer?" "This Option Disable Deep Buffer In Your Device" "If You Want More Low Frequencies Skip This Option" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP1=true; fi
fi
if FINDER "$MPATHS"; then
UIP -d "Improve Volume Levels?" "CONFIRMING THIS OPTION MAY HARM YOUR DEVICE!" "NLSound Team Is Not Responsible For Your Devices!" "Choose At Your Own Risk!" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP2=true; fi
UIP -d "Improve Microphone Levels?" "This Option Improving Microphone Volume Levels In Your Device" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP3=true; fi
fi
if FINDER "$MPATHS"; then
UIP -d "Patching IIR?" "IIR Directly Affects The Final Sound Quality" "And It Is Recommended To Try The Version" "With And Without It, Choosing The One That You Like The Most" "$MSGVU Yes $MSGRI" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP4=true; fi
fi
if FINDER "$APIXML" || FINDER "$MPATHS"; then
UIP -d "Patching Audio Platform Files?" "Confirming This Option Will Allow The" "Module To Force 24-Bit Audio" "For Your Favorite Songs, As Well As Improve" "The Sound Quality During Video Recording" "$MSGVU Yes $MSGRI" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP5=true; fi
fi
if FINDER "$MPATHS"; then
UIP -d "Disable Companders?" "Companding - Method For Reducing The Effects" "Of Channels With A Limited Dynamic Range" "$MSGVU Yes $MSGRI" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP6=true; fi
fi
if FINDER "$ACXML"; then
UIP -d "Configurating Interal Audio Codec?" "This Option Configuring Your Device's Internal Audio Codec" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP7=true; fi
fi
if [ -d $IPSEDF ] || [ -d $IPVEDF ]; then
UIP -d "Patch device_features Files?" "Added More Stuff" "Enable HD Record In Camcorder" "Increase VoIP Recor Quality" "$MSGVU Yes" "$MSGVD No$MSGNIS"
if $KEYFUNCTION; then STEP8=true; fi
fi
UIP -d "Added New Dirac?" "ViperFX CONFLICT!" "This Option Added New Dirac In Your ROM" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP9=true; fi
UIP -d "Install Tweaks In Prop File?" "This Option Will Change The Sound Quality The Most" "May Cause Problems" "$MSGVU Yes" "$MSGVD No $MSGRI $MSGNIS"
if $KEYFUNCTION; then STEP10=true; fi
if FINDER "$MPATHS"; then
UIP -d "Install Patches In mixer_paths Files?" "A Large Set Of Universal Settings For Many Devices" "If You Encounter Problems After Installation" "Try Skipping This Option First" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP11=true; fi
UIP -d "Patch Or Replace media_codecs?" "$MSGVU Patch" "$MSGVD Replace $MSGRI"
if $KEYFUNCTION; then PATCHMC=true; fi
fi
UIP -d "Improve Bluetooth?" "This Option Will Improve The Audio Quality" "In Bluetooth, As Well As Fix The Problem" "Of Disappearing The AAC Codec Switch" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP12=true; fi
if FINDER "$AIPCONFA"; then
UIP -d "Switch Audio Output From DIRECT To DIRECT_PCM?" "This Option Will Switch DIRECT To DIRECT_PCM," "Which Will Improve The Sound Detail" "$MSGVU Yes $MSGRI" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP13=true; fi
fi
if FINDER "$APCXML"; then
UIP -d "Turn Off Useless DRC?" "Limit The Dynamic Range Of The Soundtrack" "The Difference Between The Loudest" "And The Quietest Sounds" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP14=true; fi
fi
UZTPN "NLSound"
PTMFI -np "$IDNLS" "$IDAIST"
MMPR -vcs "NLSound" "$VIPNLS" "$VCIPNLS" "NLSound Team" "This module globally improves audio quality when recording video/audio and listening to audio on your device." "support=https://t.me/nlsound_support"
REPLACER -f "AudioFX MusicFX"
if $STEP2 || $STEP3 || $STEP4 || $STEP6 || $STEP11; then
UIP "Patching Needed Files..."
for OMIX in $MPATHS; do
UIP "Found $OMIX" "Patching..."
MIX="$MODPATH/$MODID$(echo $OMIX | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $MIX`
cp -f $MAGISKMP$OMIX $MIX
sed -i 's/\t/  /g' $MIX
UIP "Files Found And Patched"
done
fi
if $STEP1 || $STEP7; then
UIP "Patching Needed Files..."
for OACONF in $ACXML; do
UIP "Found $OACONF" "Patching..."
ACONF="$MODPATH/$MODID$(echo $OACONF | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $ACONF`
cp -f $MAGISKMP$OACONF $ACONF
sed -i 's/\t/  /g' $ACONF
UIP "Files Found And Patched"
done
fi
if $STEP1; then PATCH_DEEP_BUFFER -nl; fi
if $STEP2; then PATCH_VOLUMES -nl; fi
if $STEP3; then PATCH_MICROPHONE; fi
if $STEP4; then PATCH_IIR; fi
if $STEP5; then PATCH_AUDIO_PLATFORM_INFO -nl; fi
if $STEP6; then PATCH_COMPANDERS; fi
if $STEP7; then PATCH_AUDIO_CODEC; fi
if $STEP8; then PATCH_DEVICE_FEATURES; fi
if $STEP9; then PATCH_DIRAC; fi
if $STEP10; then
UIP "Start GENERAL_TWEAKS"
echo -e "\n# GENERAL TWEAKS
ro.mediacodec.min_sample_rate=7350
ro.mediacodec.max_sample_rate=2822400
flac.sw.decoder.24bit.support=true
vendor.audio.flac.sw.decoder.24bit=true
vendor.audio.aac.sw.decoder.24bit=true
vendor.audio.use.sw.alac.decoder=true
vendor.audio.flac.sw.encoder.24bit=true
vendor.audio.aac.sw.encoder.24bit=true
vendor.audio.use.sw.ape.decoder=true
vendor.audio.vorbis.complexity.default=8
vendor.audio.vorbis.quality=100
vendor.audio.aac.complexity.default=8
vendor.audio.aac.quality=100
vendor.audio.tunnel.encode=true
tunnel.audio.encode=true
qc.tunnel.audio.encode=true
mpq.audio.decode=true
audio.nat.codec.enabled=1
use.non-omx.mp3.decoder=false
use.non-omx.aac.decoder=false
use.non-omx.flac.decoder=false
media.aac_51_output_enabled=true
vendor.audio.parser.ip.buffer.size=262144
vendor.mm.enable.qcom_parser=63963135
lpa.decode=false
lpa30.decode=false
lpa.use-stagefright=false
lpa.releaselock=false
af.thread.throttle=0
audio.playback.mch.downsample=false
vendor.audio.playback.mch.downsample=false
persist.vendor.audio.playback.mch.downsample=false
vendor.audio.feature.dynamic_ecns.enable=true
vendor.audio.feature.external_dsp.enable=true
vendor.audio.feature.external_qdsp.enable=true
vendor.audio.feature.external_speaker.enable=true
vendor.audio.feature.external_speaker_tfa.enable=true
vendor.audio.feature.receiver_aided_stereo.enable=true
vendor.audio.feature.ext_hw_plugin=true
vendor.audio.feature.source_track_enabled=true
vendor.audio.feature.keep_alive.enable=true
vendor.audio.feature.compress_meta_data.enable=false
vendor.audio.feature.compr_cap.enable=false
vendor.audio.feature.devicestate_listener.enable=false
vendor.audio.feature.thermal_listener.enable=false
vendor.audio.feature.power_mode.enable=true
vendor.audio.feature.hifi_audio.enable=true
ro.hardware.hifi.support=true
ro.audio.hifi=true
ro.vendor.audio.hifi=true
persist.audio.hifi=true
persist.audio.hifi.volume=72
persist.audio.hifi.int_codec=true
persist.vendor.audio.hifi=true
persist.vendor.audio.hifi.int_codec=true
effect.reverb.pcm=1
vendor.audio.safx.pbe.enabled=true
vendor.audio.soundfx.usb=false
vendor.audio.keep_alive.disabled=false
ro.vendor.audio.soundfx.usb=false
ro.vendor.audio.sfx.speaker=false
ro.vendor.audio.sfx.earadj=false
ro.vendor.audio.sfx.scenario=false
ro.vendor.audio.sfx.audiovisual=false
ro.vendor.audio.sfx.independentequalizer=false
ro.vendor.audio.3d.audio.support=true
persist.vendor.audio.ambisonic.capture=true
persist.vendor.audio.ambisonic.auto.profile=true
vendor.voice.dsd.playback.conc.disabled=false
vendor.audio.hdr.record.enable=true
vendor.audio.3daudio.record.enable=true
ro.qc.sdk.audio.ssr=false
ro.vendor.audio.sdk.ssr=false
ro.vendor.audio.recording.hd=true
ro.ril.enable.amr.wideband=1
persist.audio.lowlatency.rec=true
vendor.audio.matrix.limiter.enable=0
vendor.audio.capture.enforce_legacy_copp_sr=true
vendor.audio.hal.output.suspend.supported=true
vendor.audio.snd_card.open.retries=50
vendor.audio.volume.headset.gain.depcal=true
vendor.audio.tfa9874.dsp.enabled=true
ro.audio.soundtrigger.lowpower=false
ro.vendor.audio.soundtrigger.adjconf=true
ro.vendor.audio.ns.support=true
ro.vendor.audio.enhance.support=true
ro.vendor.audio.gain.support=true
persist.vendor.audio.ll_playback_bargein=true
persist.vendor.audio.bcl.enabled=false
persist.vendor.audio.format.24bit=true
persist.vendor.audio.delta.refresh=true" >> $MODPATH/$MODID/system.prop
fi
if $STEP11; then PATCH_MIXER -nl; fi
if $STEP12; then PATCH_IMPROVE_BLUETOOTH; fi
if $STEP13; then PATCH_IO_POLICY; fi
if $STEP14; then PATCH_AUDIO_POLICY; fi
MOVERPATH
SET_PERM_RM -msgdi
WCANFTP "-aml"
}

IPAIST() {
if $MAGISK && $SNAPSOC; then
UCSA -eno "Install AIST $VIPAIST?" "IPAISTS"
fi
}

IPAISTS() {
UIP "Installing AIST $IAMM"
if $HIFI; then UIP "Device With Support Hi-Fi"; else UIP "Device Without Support Hi-Fi"; fi
STEP1=false; STEP2=false; STEP3=false; STEP4=false ; PATCHMC=false
if FINDER "$MPATHS"; then
UIP -d "Boost Sound Volume Levels?" "This Item Boosting Sound Volume Levels (Be Сareful!)" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP1=true; fi
UIP -d "Boost Microphones Volume Levels?" "This Item Boosting Microphones Volume Levels" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP2=true; fi
fi
UIP -d "Install Dolby Atmos Preset's Feature?" "This Tweak Enable Dolby Atmos Preset's" "Doesn't Work On All Firmwares" "Cause Sound Driver Crash On Some Firmware" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP3=true; fi
UIP -d "Disable SCRAM Of Bluetooth?" "This Tweak Disables Frequency Limits" "And Also On Many Devices It Improves The Work Of BT" "If After Installation The BT Does Not Work" "Reinstall The Module Without Applying This Item" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then STEP4=true; fi
UIP -d "Patch Or Replace media_codecs?" "$MSGVU Patch" "$MSGVD Replace $MSGRI"
if $KEYFUNCTION; then PATCHMC=true; fi
PTMFI "$IDAIST" "$IDNLS" "$MIPSB $MIPSVLS $MIPSVLS64 $MIPSVE"
touch $MODPATH/$MODID$MIPSVLS/libasphere.so $MODPATH/$MODID$MIPSVLS/libshoebox.so $MODPATH/$MODID$MIPSVLS/libvolumelistener.so $MODPATH/$MODID$MIPSVLS64/libasphere.so $MODPATH/$MODID$MIPSVLS64/libshoebox.so $MODPATH/$MODID$MIPSVLS64/libvolumelistener.so
UZTPN "NLSound"
MMPR -vcsuj "AIST for devices based on Qualcomm" "$VIPAIST" "$VCIPAIST" "Oleg_Skalskiy" "This module Improving Audio Quality On Android." "https://t.me/AIST_FLOOD" "https://raw.githubusercontent.com/Oleg-Skalskiy/AIST/main/update.json"
echo "# GENERAL PARAMETERS BY AIST
audio.hal.period.size=4096
vendor.audio.hal.period.size=4096
audio_hal.in_period_size=4096
vendor.audio_hal.in_period_size=4096
audio.offload.buffer.size.kb=1024
vendor.audio.offload.buffer.size.kb=1024
audio.native.dsd.buffer.size.kb=1024
vendor.audio.native.dsd.buffer.size.kb=1024
audio.adm.buffering.ms=3
vendor.audio.adm.buffering.ms=3
media.stagefright.enable-player=true
media.stagefright.enable-http=true
media.stagefright.enable-aac=true
media.stagefright.enable-qcp=true
media.stagefright.enable-fma2dp=true
media.stagefright.enable-scan=true
media.stagefright.thumbnail.prefer_hw_codecs=true
debug.stagefright.omx_default_rank=0
debug.stagefright.ccodec_delayed_params=0
mmp.enable.3g2=true
media.aac_51_output_enabled=true
vendor.mm.enable.qcom_parser=16776959
mm.enable.qcom_parser=16777215
persist.mm.enable.prefetch=true
mm.enable.smoothstreaming=true
vendor.mm.enable.smoothstreaming=true
vendor.audio.offload.multiaac.enable=true
mpq.audio.decode=true
lpa.decode=false
lpa.use-stagefright=false
lpa.releaselock=false
vendor.audio.spkcal.copy.inhal=false
persist.audio.format.24bit=true
persist.vendor.audio.format.24bit=true
persist.audio.format.32bit=true
persist.vendor.audio.format.32bit=true
persist.audio.format.float=true
persist.vendor.audio.format.float=true
persist.vendor.audio.spv3.enable=true
persist.vendor.audio.spv4.enable=true
persist.vendor.audio.spv5.enable=true
persist.vendor.audio.hac.enable=false
persist.vendor.audio.delta.refresh=false
persist.vendor.audio.bcl.enabled=false
persist.vendor.audio.ha_proxy.enabled=true
persist.vendor.audio.ll_playback_bargein=false
persist.vendor.audio.ozo.codec.enable=true
persist.vendor.audio.ambisonic.auto.profile=false
persist.vendor.audio.ambisonic.capture=false
persist.vendor.audio.apptype.multirec.enabled=false
persist.vendor.audio.vbat.enabled=false
ro.qc.sdk.audio.ssr=false
ro.vendor.audio.sdk.ssr=false
ro.audio.playbackScene=false
ro.vendor.audio.playbackScene=false
ro.audio.sfx.harmankardon=true
ro.audio.recording.hd=true
ro.vendor.audio.recording.hd=true
ro.vendor.audio.sfx.harmankardon=true
ro.vendor.audio.multiroute=true
ro.vendor.audio.surround.support=false
ro.vendor.audio.voice.change.support=true
ro.vendor.audio.voice.change.youme.support=true
ro.vendor.audio.spk.stereo=true
ro.vendor.audio.spk.clean=true
ro.vendor.audio.vocal.support=true
ro.vendor.audio.sfx.independentequalizer=false
ro.vendor.audio.sfx.earadj=false
ro.vendor.audio.sfx.speaker=true
ro.vendor.audio.gain.support=false
ro.vendor.audio.karaok.support=true
ro.vendor.camera.karaok.support=true
ro.vendor.audio.zoom.support=false
ro.vendor.audio.zoom.type=0
ro.vendor.audio.ns.support=false
ro.vendor.audio.enhance.support=false
ro.audio.monitorRotation=true
ro.vendor.audio.monitorRotation=true
ro.vendor.audio.game.mode=true
ro.vendor.audio.game.vibrate=true
ro.vendor.audio.afe.record=true
ro.vendor.audio.aiasst.support=false
ro.vendor.audio.surround.headphone.only=false
ro.vendor.audio.videobox.switch=true
ro.vendor.audio.multichannel.5point1.headset=false
ro.vendor.audio.multichannel.5point1=false
ro.vendor.audio.multi.channel=true
ro.vendor.audio.soundtrigger.adjconf=true
ro.vendor.audio.soundtrigger.xiaomievent=1
ro.vendor.audio.soundtrigger.pangaea=1
ro.vendor.audio.soundtrigger.sva-5.0=1
ro.vendor.audio.soundtrigger.sva-6.0=1
ro.vendor.audio.soundfx.usb=true
ro.vendor.audio.ring.filter=false
ro.vendor.audio.feature.fade=fasle
ro.vendor.audio.miui.karaoke.show=true
ro.vendor.audio.miui.karaoke.tencent.show=true
ro.vendor.audio.us.proximity=false
ro.vendor.audio.3d.audio.support=false
ro.vendor.audio.camera.loopback.support=true
ro.audio.ring.filter=false
persist.vendor.audio.ring.filter.mask=0
use.voice.path.for.pcm.voip=true
audio.hal.output.suspend.supported=false
vendor.audio.hal.output.suspend.supported=false
persist.vendor.audio_hal.dsp_bit_width_enforce_mode=FLOAT
persist.audio_hal.dsp_bit_width_enforce_mode=FLOAT
vendor.audio_hal.dsp_bit_width_enforce_mode=FLOAT
audio_hal.dsp_bit_width_enforce_mode=FLOAT
ro.vendor.audio_hal.dsp_bit_width_enforce_mode=FLOAT
ro.audio_hal.dsp_bit_width_enforce_mode=FLOAT
qcom.vendor.audio_hal.dsp_bit_width_enforce_mode=FLOAT
qcom.audio_hal.dsp_bit_width_enforce_mode=FLOAT
audio.offload.gapless.enabled=true
vendor.audio.offload.gapless.enabled=true
audio.safemedia.bypass=true
vendor.audio.safemedia.bypass=true
persist.vendor.audio.safemedia.bypass=true
persist.audio.safemedia.bypass=true
audio.pp.asphere.enabled=false
vendor.audio.pp.asphere.enabled=false
persist.audio.lowlatency.rec=true
persist.vendor.audio.hp=true
persist.vendor.audio.lowlatency.rec=true
persist.audio.hp=true
sys.haptic.infinitelevel=true
sys.haptic.dynamiceffect=true
sys.haptic.dynamiceffect.richtap=true
sys.haptic.ignoreWhenCamera=true
sys.haptic.intensityforkeyboard=true
audio.safx.pbe.enabled=true
vendor.audio.safx.pbe.enabled=true
audio.playback.mch.downsample=false
vendor.audio.playback.mch.downsample=false
persist.vendor.audio.playback.mch.downsample=false
audio.nat.codec.enabled=1
vendor.audio.nat.codec.enabled=1
effect.reverb.pcm=0
vendor.audio.matrix.limiter.enable=0
audio.matrix.limiter.enable=0
vendor.audio.game4D.switch=0
vendor.audio.game3D.switch=0
vendor.audio.tunnel.encode=false
audio.tunnel.encode=false
ro.vendor.audio.tunnel.encode=false
vendor.tunnel.audio.encode=false
tunnel.audio.encode=false
persist.speaker.prot.enable=false
persist.vendor.speaker.prot.enable=false
audio.offload.pcm.16bit.enable=true
audio.offload.pcm.24bit.enable=true
audio.offload.pcm.32bit.enable=true
audio.offload.pcm.64bit.enable=true
audio.offload.pcm.float.enable=true
vendor.audio.offload.pcm.16bit.enable=true
vendor.audio.offload.pcm.24bit.enable=true
vendor.audio.offload.pcm.32bit.enable=true
vendor.audio.offload.pcm.64bit.enable=true
vendor.audio.offload.pcm.float.enable=true
hpx_send_params=1
audio.hwacceffects.needed=true
vendor.audio.hwacceffects.needed=true
ro.config.hw_music_lp=true
ro.config.music_lp_vol=true
audio.high.resolution.enable=true
vendor.audio.high.resolution.enable=true
ro.audio.soundfx.usb=true
persist.sys.mitalk.enable=true
vendor.audio.volume.headset.gain.depcal=true
persist.smartamp.enable=true
ro.config.audio.speaker_boost=yes
ro.have_aacencode_feature=1
vendor.audio.playback.dsp.pathdelay=0
vendor.audio.usb.disable.sidetone=false
ro.telephony.call_ring.multiple=false
vendor.audio.3daudio.record.enable=false
audio.legacy.postproc=false
vendor.audio.hdr.record.enable=true
persist.sys.media.avsync=true
persist.dirac.acs.ignore_error=1
audio.passthrough.volume.route2cec=true
persist.vendor.audio_fx.waves.maxxsense=true
persist.vendor.audio_fx.waves.processing=true
persist.vendor.audio_fx.waves.proc_twks=true
persist.vendor.audio_fx.waves.systrace=false
media.mediadrmservice.enable=true
ro.mediaserver.64b.enable=true
vendor.audio.c2.preferred=true
debug.c2.use_dmabufheaps=1
vendor.audio.ultrasound.stoplatency=9999
ro.camera.sound.forced=1
audio.enable.mirrorlink=false
vendor.audio.enable.mirrorlink=false
ro.vendor.audio.enable.mirrorlink=false
audio.lowpower=false
vendor.audio.lowpower=false
ro.vendor.audio.lowpower=false

# QC2 PARAMETERS BY AIST TEAM
vendor.qc2audio.suspend.enabled=false
qc2audio.suspend.enabled=false
qc2audio.per_frame.aac.dec.enabled=false
qc2audio.per_frame.vorbis.dec.enabled=false
qc2audio.per_frame.mp3.dec.enabled=false
qc2audio.per_frame.raw.dec.enabled=false
qc2audio.per_frame.flac.dec.enabled=false
qc2audio.per_frame.dsd.dec.enabled=false
qc2audio.per_frame.alac.dec.enabled=false
qc2audio.per_frame.ape.dec.enabled=false
vendor.qc2audio.per_frame.aac.dec.enabled=false
vendor.qc2audio.per_frame.vorbis.dec.enabled=false
vendor.qc2audio.per_frame.mp3.dec.enabled=false
vendor.qc2audio.per_frame.raw.dec.enabled=false
vendor.qc2audio.per_frame.flac.dec.enabled=false
vendor.qc2audio.per_frame.dsd.dec.enabled=false
vendor.qc2audio.per_frame.alac.dec.enabled=false
vendor.qc2audio.per_frame.ape.dec.enabled=false

# DECODER PARAMETERS BY AIST TEAM
vendor.audio.aac.complexity.default=10
vendor.audio.aac.quality=100
vendor.audio.vorbis.complexity.default=10
vendor.audio.vorbis.quality=100
vendor.audio.mp3.complexity.default=10
vendor.audio.mp3.quality=100
vendor.audio.mpegh.complexity.default=10
vendor.audio.mpegh.quality=100
vendor.audio.amrnb.complexity.default=10
vendor.audio.amrnb.quality=100
vendor.audio.amrwb.complexity.default=10
vendor.audio.amrwb.quality=100
vendor.audio.g711.alaw.complexity.default=10
vendor.audio.g711.alaw.quality=100
vendor.audio.g711.mlaw.complexity.default=10
vendor.audio.g711.mlaw.quality=100
vendor.audio.opus.complexity.default=10
vendor.audio.opus.quality=100
vendor.audio.raw.complexity.default=10
vendor.audio.raw.quality=100
vendor.audio.flac.complexity.default=10
vendor.audio.flac.quality=100
vendor.audio.ac3.complexity.default=10
vendor.audio.ac3.quality=100
vendor.audio.eac3.complexity.default=10
vendor.audio.eac3.quality=100
vendor.audio.ac4.complexity.default=10
vendor.audio.ac4.quality=100
vendor.audio.dsp.complexity.default=10
vendor.audio.dsp.quality=100
vendor.audio.dsd.complexity.default=10
vendor.audio.dsd.quality=100
vendor.audio.alac.complexity.default=10
vendor.audio.alac.quality=100
vendor.audio.ape.complexity.default=10
vendor.audio.ape.quality=100

# HiFi/Dolby PARAMETERS BY AIST TEAM
ro.audio.hifi.volume=90
ro.vendor.audio.hifi.volume=90
audio.hifi.volume=90
vendor.audio.hifi.volume=90
persist.audio.hifi.volume=90
persist.vendor.audio.hifi.volume=90
qcom.audio.hifi.volume=90
qcom.vendor.audio.hifi.volume=90
qc.audio.hifi.volume=90
qc.vendor.audio.hifi.volume=90
audio.hifi.int_codec=true
vendor.audio.hifi.int_codec=true
audio.hifi.ext_codec=true
vendor.audio.hifi.ext_codec=true
persist.audio.hifi.int_codec=true
persist.vendor.audio.hifi.int_codec=true
persist.audio.hifi.ext_codec=true
persist.vendor.audio.hifi.ext_codec=true
audio.feature.hifi_audio.enable=true
vendor.audio.feature.hifi_audio.enable=true
ro.hardware.hifi.support=true
ro.config.hifi_enhance_support=1
audio.hifi_adv_support=1
audio.hifi_dac=ON
vendor.audio.hifi_adv_support=1
vendor.audio.hifi_dac=ON
persist.audio.hifi_adv_support=1
persist.audio.hifi_dac=ON
persist.vendor.audio.hifi_adv_support=1
persist.vendor.audio.hifi_dac=ON
persist.lge.hifiquaddac=true
use.dts_eagle=true
audio.use.dts_eagle=true
vendor.audio.use.dts_eagle=true
DTS_EAGLE_PLATFORM_SUPPORT=true
DTS_NEW_PARAM_READY=1
ro.feature.dolby_enable=true
dolby.mi.metadata.log=false
dolby.dap.param.tee=false
audio.gef.enable.traces=false
audio.gef.debug.flags=true
vendor.dolby.mi.metadata.log=false
vendor.dolby.dap.param.tee=false
vendor.audio.gef.enable.traces=false
vendor.audio.gef.debug.flags=true
ro.platform.disable.audiorawout=false
ro.platform.support.dolby=true
ro.platform.support.dts=true
ro.vendor.platform.disable.audiorawout=false
ro.vendor.platform.support.dolby=true
ro.vendor.platform.support.dts=true
vendor.dts.audio.skip_shadow=false
vendor.dts.audio.set_bypass=true
vendor.dts.audio.log_time=false
vendor.dts.audio.allow_offload=true
vendor.dts.audio.print_eagle=true
vendor.dts.audio.disable_undoredo=false
dolby.bass=true
vendor.dolby.bass=true

# BT PARAMETERS BY AIST TEAM
persist.service.btui.use_aptx=1
persist.service.btui.use_aptxhd=1
persist.bt.enableAptXHD=true
persist.bt.a2dp.aptx_disable=false
persist.bt.a2dp.aptx_hd_disable=false
persist.bluetooth.a2dp_offload.disabled=false
ro.bluetooth.a2dp_offload.supported=true
persist.bluetooth.a2dp_offload.cap=sbc-aac-aptx-aptxtws-aptxadaptive-aptxadaptiver2-aptxhd-ldac-lc3-lhdc
persist.vendor.bt.a2dp_offload_cap=sbc-aac-aptx-aptxtws-aptxadaptive-aptxadaptiver2-aptxhd-ldac-lc3-lhdc
persist.vendor.qcom.bluetooth.a2dp_offload_cap=sbc-aac-aptx-aptxtws-aptxadaptive-aptxadaptiver2-aptxhd-ldac-lc3-lhdc
persist.vendor.btstack.a2dp_offload_cap=sbc-aac-aptx-aptxtws-aptxadaptive-aptxadaptiver2-aptxhd-ldac-lc3-lhdc
persist.vendor.btstack.enable.twsplus=true
persist.vendor.btstack.enable.twsplussho=true
persist.vendor.qcom.bluetooth.twsp_state.enabled=false
persist.vendor.btstack.connect.peer_earbud=true
persist.bt.a2dp.aac_disable=false
audio.effect.a2dp.enable=1
vendor.audio.effect.a2dp.enable=1
vendor.btstack.absolute_volume=true
persist.vendor.btstack.absolute_volume=true
persist.vendor.btsatck.absvolfeature=true
persist.vendor.bt.a2dp.addr_check_enabled_for_aac=true
persist.bluetooth.avrcpversion=avrcp16
persist.bluetooth.mapversion=map14
ro.bluetooth.hdaudio.supported=true
ro.vendor.bluetooth.hd_audio.supported=true
ro.vendor.bluetooth.hdaudio.supported=true
ro.bluetooth.hd_audio.supported=true
persist.vendor.bt.a2dp.hd_audio=true
persist.vendor.bt.a2dp.hdaudio=true
persist.vendor.btstack.enable.hdaudio=true
persist.vendor.btstack.enable.hd_audio=true
persist.bluetooth.hdaudio.enable=true
persist.bluetooth.hd_audio.enable=true
persist.vendor.bt.hd_audio.enabled=true
persist.vendor.bt.hdaudio.enabled=true
ro.bluetooth.gabeldorsche.supported=true
ro.vendor.bluetooth.gabeldorsche.supported=true
persist.vendor.btstack.enable.gabeldorsche=true
persist.bluetooth.gabeldorsche.enable=true
persist.vendor.bt.a2dp.gabeldorsche=true
persist.vendor.bt.gabeldorsche.enabled=true
ro.bluetooth.gd.supported=true
ro.vendor.bluetooth.gd.supported=true
persist.vendor.btstack.enable.gd=true
persist.bluetooth.gd.enable=true
persist.vendor.bt.a2dp.gd=true
persist.vendor.bt.gd.enabled=true
ro.bluetooth.gradle.supported=true
ro.vendor.bluetooth.gradle.supported=true
persist.vendor.btstack.enable.gradle=true
persist.bluetooth.gradle.enable=true
persist.vendor.bt.a2dp.gradle=true
persist.vendor.bt.gradle.enabled=true
bt.max.hfpclient.connections=5
persist.vendor.qcom.bluetooth.aptxadaptiver2_1_support=true
persist.vendor.qcom.bluetooth.aptxadaptiver2_2_support=true
persist.sys.fflag.override.settings_bluetooth_hearing_aid=true
persist.bluetooth.enablenewavrcp=true
persist.vendor.qcom.enablenewavrcp=true
persist.bluetooth.disableabsvol=false
persist.vendor.bt.a2dp.hal.implementation=true
persist.vendor.btstack.enable.lpa=false
persist.vendor.btstack.enable.splita2dp=true
persist.vendor.qcom.bluetooth.enable.splita2dp=true
persist.vendor.bt.a2dp.encoderformat=true
persist.vendor.bt.aac_frm_ctl.enabled=true
persist.vendor.bt.aac_vbr_frm_ctl.enabled=true
persist.vendor.qcom.bluetooth.aac_frm_ctl.enabled=true
persist.vendor.btstack.enable.swb=true
persist.vendor.btstack.enable.swbpm=true
persist.vendor.qcom.bluetooth.enable.swb=true
persist.vendor.qcom.bluetooth.enable.swbpm=true
vendor.bt.pts.pbap=true
persist.bluetooth.enabledelayreports=false
persist.bluetooth.sbc_hd_higher_bitrate=1
persist.bt.sbc_hd_enabled=1
persist.vendor.qcom.bluetooth.a2dp_mcast_test.enabled=false
audio.misound.bluetooth.enable=true
vendor.audio.misound.bluetooth.enable=true
ro.vendor.audio.misound.bluetooth.enable=true
persist.af.losslessbt.on=1
persist.bluetooth.a2dp.lhdc=true
persist.bluetooth.dualconnection.supported=true
persist.bluetooth.gamemode=true
ro.vendor.bluetooth.a2dp_aac_vbr.is_disabled=true
vendor.bluetooth.ldac.abr=true
persist.vendor.bluetooth.a4wp=true
persist.bluetooth.bluetooth_audio_hal.disabled=false
persist.bluetooth.enablepagescan=true

# AHAL PARAMETERS BY AIST TEAM
audio.offload.video=true
av.offload.enable=false
audio.deep_buffer.media=true
vendor.audio.deep_buffer.media=true
ro.vendor.audio.deep_buffer.media=true
ro.vendor.audio.av.streaming.offload.enable=false
vendor.audio.av.streaming.offload.enable=false
audio.offload.track.enable=true
vendor.audio.offload.track.enable=true
ro.vendor.audio.offload.track.enable=true
ro.vendor.audio.offload.disable=false
vendor.audio.offload.passthrough=false
ro.vendor.audio.offload.passthrough=false
ro.vendor.audio.offload.multiple.enabled=false
vendor.audio.offload.multiple.enabled=false
vendor.voice.path.for.pcm.voip=true
vendor.audio.use.sw.alac.decoder=true
vendor.audio.use.sw.ape.decoder=true
vendor.audio.use.sw.mpegh.decoder=true
vendor.audio.use.sw.flac.decoder=true
vendor.audio.use.sw.aac.decoder=true
vendor.audio.use.sw.vorbis.decoder=true
vendor.audio.use.sw.wma.decoder=true
vendor.audio.use.sw.mp3.decoder=true
vendor.audio.use.sw.amrnb.decoder=true
vendor.audio.use.sw.amrwb.decoder=true
vendor.audio.use.sw.mhas.decoder=true
vendor.audio.use.sw.g711.alaw.decoder=true
vendor.audio.use.sw.g711.mlaw.decoder=true
vendor.audio.use.sw.opus.decoder=true
vendor.audio.use.sw.raw.decoder=true
vendor.audio.use.sw.ac3.decoder=true
vendor.audio.use.sw.eac3.decoder=true
vendor.audio.use.sw.eac3_joc.decoder=true
vendor.audio.use.sw.ac4.decoder=true
vendor.audio.use.sw.qti.audio.decoder=true
vendor.audio.use.sw.dsp.decoder=true
vendor.audio.use.sw.dsd.decoder=true
vendor.audio.use.sw.alac.encoder=true
vendor.audio.use.sw.ape.encoder=true
vendor.audio.use.sw.mpegh.encoder=true
vendor.audio.use.sw.flac.encoder=true
vendor.audio.use.sw.aac.encoder=true
vendor.audio.use.sw.vorbis.encoder=true
vendor.audio.use.sw.wma.encoder=true
vendor.audio.use.sw.mp3.encoder=true
vendor.audio.use.sw.amrnb.encoder=true
vendor.audio.use.sw.amrwb.encoder=true
vendor.audio.use.sw.mhas.encoder=true
vendor.audio.use.sw.g711.alaw.encoder=true
vendor.audio.use.sw.g711.mlaw.encoder=true
vendor.audio.use.sw.opus.encoder=true
vendor.audio.use.sw.raw.encoder=true
vendor.audio.use.sw.ac3.encoder=true
vendor.audio.use.sw.eac3.encoder=true
vendor.audio.use.sw.eac3_joc.encoder=true
vendor.audio.use.sw.ac4.encoder=true
vendor.audio.use.sw.qti.audio.encoder=true
vendor.audio.use.sw.dsp.encoder=true
vendor.audio.use.sw.dsd.encoder=true
vendor.audio.alac.sw.decoder.24bit=true
vendor.audio.ape.sw.decoder.24bit=true
vendor.audio.mpegh.sw.decoder.24bit=true
vendor.audio.flac.sw.decoder.24bit=true
vendor.audio.aac.sw.decoder.24bit=true
vendor.audio.vorbis.sw.decoder.24bit=true
vendor.audio.wma.sw.decoder.24bit=true
vendor.audio.mp3.sw.decoder.24bit=true
vendor.audio.amrnb.sw.decoder.24bit=true
vendor.audio.amrwb.sw.decoder.24bit=true
vendor.audio.mhas.sw.decoder.24bit=true
vendor.audio.g711.alaw.sw.decoder.24bit=true
vendor.audio.g711.mlaw.sw.decoder.24bit=true
vendor.audio.opus.sw.decoder.24bit=true
vendor.audio.raw.sw.decoder.24bit=true
vendor.audio.ac3.sw.decoder.24bit=true
vendor.audio.eac3.sw.decoder.24bit=true
vendor.audio.eac3_joc.sw.decoder.24bit=true
vendor.audio.ac4.sw.decoder.24bit=true
vendor.audio.qti.sw.decoder.24bit=true
vendor.audio.dsp.sw.decoder.24bit=true
vendor.audio.dsd.sw.decoder.24bit=true
vendor.audio.alac.sw.encoder.24bit=true
vendor.audio.ape.sw.encoder.24bit=true
vendor.audio.mpegh.sw.encoder.24bit=true
vendor.audio.flac.sw.encoder.24bit=true
vendor.audio.aac.sw.encoder.24bit=true
vendor.audio.vorbis.sw.encoder.24bit=true
vendor.audio.wma.sw.encoder.24bit=true
vendor.audio.mp3.sw.encoder.24bit=true
vendor.audio.amrnb.sw.encoder.24bit=true
vendor.audio.amrwb.sw.encoder.24bit=true
vendor.audio.mhas.sw.encoder.24bit=true
vendor.audio.g711.alaw.sw.encoder.24bit=true
vendor.audio.g711.mlaw.sw.encoder.24bit=true
vendor.audio.opus.sw.encoder.24bit=true
vendor.audio.raw.sw.encoder.24bit=true
vendor.audio.ac3.sw.encoder.24bit=true
vendor.audio.eac3.sw.encoder.24bit=true
vendor.audio.eac3_joc.sw.encoder.24bit=true
vendor.audio.ac4.sw.encoder.24bit=true
vendor.audio.qti.sw.encoder.24bit=true
vendor.audio.dsp.sw.encoder.24bit=true
vendor.audio.dsd.sw.encoder.24bit=true
vendor.audio.alac.sw.decoder.32bit=true
vendor.audio.ape.sw.decoder.32bit=true
vendor.audio.mpegh.sw.decoder.32bit=true
vendor.audio.flac.sw.decoder.32bit=true
vendor.audio.aac.sw.decoder.32bit=true
vendor.audio.vorbis.sw.decoder.32bit=true
vendor.audio.wma.sw.decoder.32bit=true
vendor.audio.mp3.sw.decoder.32bit=true
vendor.audio.amrnb.sw.decoder.32bit=true
vendor.audio.amrwb.sw.decoder.32bit=true
vendor.audio.mhas.sw.decoder.32bit=true
vendor.audio.g711.alaw.sw.decoder.32bit=true
vendor.audio.g711.mlaw.sw.decoder.32bit=true
vendor.audio.opus.sw.decoder.32bit=true
vendor.audio.raw.sw.decoder.32bit=true
vendor.audio.ac3.sw.decoder.32bit=true
vendor.audio.eac3.sw.decoder.32bit=true
vendor.audio.eac3_joc.sw.decoder.32bit=true
vendor.audio.ac4.sw.decoder.32bit=true
vendor.audio.qti.sw.decoder.32bit=true
vendor.audio.dsp.sw.decoder.32bit=true
vendor.audio.dsd.sw.decoder.32bit=true
vendor.audio.alac.sw.encoder.32bit=true
vendor.audio.ape.sw.encoder.32bit=true
vendor.audio.mpegh.sw.encoder.32bit=true
vendor.audio.flac.sw.encoder.32bit=true
vendor.audio.aac.sw.encoder.32bit=true
vendor.audio.vorbis.sw.encoder.32bit=true
vendor.audio.wma.sw.encoder.32bit=true
vendor.audio.mp3.sw.encoder.32bit=true
vendor.audio.amrnb.sw.encoder.32bit=true
vendor.audio.amrwb.sw.encoder.32bit=true
vendor.audio.mhas.sw.encoder.32bit=true
vendor.audio.g711.alaw.sw.encoder.32bit=true
vendor.audio.g711.mlaw.sw.encoder.32bit=true
vendor.audio.opus.sw.encoder.32bit=true
vendor.audio.raw.sw.encoder.32bit=true
vendor.audio.ac3.sw.encoder.32bit=true
vendor.audio.eac3.sw.encoder.32bit=true
vendor.audio.eac3_joc.sw.encoder.32bit=true
vendor.audio.ac4.sw.encoder.32bit=true
vendor.audio.qti.sw.encoder.32bit=true
vendor.audio.dsp.sw.encoder.32bit=true
vendor.audio.dsd.sw.encoder.32bit=true
use.non-omx.alac.decoder=false
use.non-omx.ape.decoder=false
use.non-omx.mpegh.decoder=false
use.non-omx.flac.decoder=false
use.non-omx.aac.decoder=false
use.non-omx.vorbis.decoder=false
use.non-omx.wma.decoder=false
use.non-omx.mp3.decoder=false
use.non-omx.amrnb.decoder=false
use.non-omx.amrwb.decoder=false
use.non-omx.mhas.decoder=false
use.non-omx.g711.alaw.decoder=false
use.non-omx.g711.mlaw.sw.decoder=false
use.non-omx.opus.decoder=false
use.non-omx.raw.decoder=false
use.non-omx.ac3.decoder=false
use.non-omx.eac3.decoder=false
use.non-omx.eac3_joc.decoder=false
use.non-omx.ac4.decoder=false
use.non-omx.qti.decoder=false
use.non-omx.dsp.decoder=false
use.non-omx.dsd.decoder=false
use.non-omx.alac.encoder=false
use.non-omx.ape.encoder=false
use.non-omx.mpegh.encoder=false
use.non-omx.flac.encoder=false
use.non-omx.aac.encoder=false
use.non-omx.vorbis.encoder=false
use.non-omx.wma.encoder=false
use.non-omx.mp3.encoder=false
use.non-omx.amrnb.encoder=false
use.non-omx.amrwb.encoder=false
use.non-omx.mhas.encoder=false
use.non-omx.g711.alaw.encoder=false
use.non-omx.g711.mlaw.sw.encoder=false
use.non-omx.opus.encoder=false
use.non-omx.raw.encoder=false
use.non-omx.ac3.encoder=false
use.non-omx.eac3.encoder=false
use.non-omx.eac3_joc.encoder=false
use.non-omx.ac4.encoder=false
use.non-omx.qti.encoder=false
use.non-omx.dsp.encoder=false
use.non-omx.dsd.encoder=false
audio.decoder_override_check=true
ro.vendor.audio.hw.aac.decoder=true
vendor.audio.hw.aac.decoder=true
audio.hw.aac.decoder=true
ro.vendor.audio.hw.aac.encoder=true
vendor.audio.hw.aac.encoder=true
audio.hw.aac.encoder=true
qcom.hw.aac.encoder=true
audio.hw.aac.decoder=true
qcom.hw.aac.decoder=true
persist.vendor.audio.ras.enabled=false
vendor.audio.feature.ras.enable=false
vendor.audio.feature.a2dp_offload.enable=true
vendor.audio.feature.battery_listener.enable=false
vendor.audio.feature.devicestate_listener.enable=false
vendor.audio.feature.thermal_listener.enable=false
vendor.audio.feature.audiozoom.enable=false
vendor.audio.feature.custom_stereo.enable=false
vendor.audio.feature.dynamic_ecns.enable=true
vendor.audio.feature.ext_hw_plugin.enable=false
vendor.audio.feature.external_dsp.enable=false
vendor.audio.feature.external_speaker.enable=false
vendor.audio.feature.external_speaker_tfa.enable=false
vendor.audio.feature.hwdep_cal.enable=true
vendor.audio.feature.hfp.enable=true
vendor.audio.feature.multi_voice_session.enable=true
vendor.audio.feature.keep_alive.enable=true
vendor.audio.feature.kpi_optimize.enable=true
vendor.audio.feature.maxx_audio.enable=true
vendor.audio.feature.spkr_prot.enable=false
vendor.audio.feature.usb_offload.enable=true
vendor.audio.feature.usb_offload_burst_mode.enable=true
vendor.audio.feature.usb_offload_sidetone_volume.enable=true
vendor.audio.feature.audiosphere.enable=false
vendor.audio.feature.asphere.enable=false
vendor.audio.feature.anc_headset.enable=false
vendor.audio.feature.power_mode.enable=true
vendor.audio.feature.snd_mon.enable=false
vendor.audio.feature.vbat.enable=true
vendor.audio.feature.dmabuf.cma.memory.enable=true
vendor.audio.feature.deepbuffer_as_primary.enable=false

# MMT PARAMETERS BY AIST TEAM
vendor.hab.vendor.verified=false
vendor.hab.system.verified=false
vendor.hab.system_ext.verified=false
vendor.hab.oem.verified=false
vendor.hab.product.verified=false
vendor.hab.odm.verified=false

# LATECY PARAMETERS BY AIST TEAM
audio.a2dp.codec.latency=1
audio.aac.codec.latency=1
audio.flac.codec.latency=1
vendor.audio.a2dp.codec.latency=1
vendor.audio.aac.codec.latency=1
vendor.audio.flac.codec.latency=1
persist.vendor.audio.a2dp.codec.latency=1
persist.vendor.audio.aac.codec.latency=1
persist.vendor.audio.flac.codec.latency=1
audio.latency_compress_offload_speaker=1
audio.latency_compress_offload_headset=1
audio.latency_compress_offload_headphones=1
audio.latency_compress_offload_usb=1
audio.latency_compress_offload_a2dp=1
audio.latency_deep_buffer_speaker=1
audio.latency_deep_buffer_headset=1
audio.latency_deep_buffer_headphones=1
audio.latency_deep_buffer_usb=1
audio.latency_deep_buffer_a2dp=1
vendor.audio.latency_compress_offload_speaker=1
vendor.audio.latency_compress_offload_headset=1
vendor.audio.latency_compress_offload_headphones=1
vendor.audio.latency_compress_offload_usb=1
vendor.audio.latency_compress_offload_a2dp=1
vendor.audio.latency_deep_buffer_speaker=1
vendor.audio.latency_deep_buffer_headset=1
vendor.audio.latency_deep_buffer_headphones=1
vendor.audio.latency_deep_buffer_usb=1
vendor.audio.latency_deep_buffer_a2dp=1
persist.vendor.audio.latency_compress_offload_speaker=1
persist.vendor.audio.latency_compress_offload_headset=1
persist.vendor.audio.latency_compress_offload_headphones=1
persist.vendor.audio.latency_compress_offload_usb=1
persist.vendor.audio.latency_compress_offload_a2dp=1
persist.vendor.audio.latency_deep_buffer_speaker=1
persist.vendor.audio.latency_deep_buffer_headset=1
persist.vendor.audio.latency_deep_buffer_headphones=1
persist.vendor.audio.latency_deep_buffer_usb=1
persist.vendor.audio.latency_deep_buffer_a2dp=1
audio.latency_direct_pcm_speaker=1
audio.latency_direct_pcm_headset=1
audio.latency_direct_pcm_headphones=1
audio.latency_direct_pcm_usb=1
audio.latency_direct_pcm_a2dp=1
vendor.audio.latency_direct_pcm_speaker=1
vendor.audio.latency_direct_pcm_headset=1
vendor.audio.latency_direct_pcm_headphones=1
vendor.audio.latency_direct_pcm_usb=1
vendor.audio.latency_direct_pcm_a2dp=1
persist.vendor.audio.latency_direct_pcm_speaker=1
persist.vendor.audio.latency_direct_pcm_headset=1
persist.vendor.audio.latency_direct_pcm_headphones=1
persist.vendor.audio.latency_direct_pcm_usb=1
persist.vendor.audio.latency_direct_pcm_a2dp=1
audio.latency_direct_speaker=1
audio.latency_direct_headset=1
audio.latency_direct_headphones=1
audio.latency_direct_usb=1
audio.latency_direct_a2dp=1
vendor.audio.latency_direct_speaker=1
vendor.audio.latency_direct_headset=1
vendor.audio.latency_direct_headphones=1
vendor.audio.latency_direct_usb=1
vendor.audio.latency_direct_a2dp=1
persist.vendor.audio.latency_direct_speaker=1
persist.vendor.audio.latency_direct_headset=1
persist.vendor.audio.latency_direct_headphones=1
persist.vendor.audio.latency_direct_usb=1
persist.vendor.audio.latency_direct_a2dp=1" > $MODPATH/$MODID/system.prop
REPLACER -f "AudioFX MusicFX"
echo -e "#!$MIPSB/sh\nSERVERPID=\$(pidof audioserver); [ \"\$SERVERPID\" ] && kill \$SERVERPID" | tee $MODPATH/$MODID/service.sh $MODPATH/$MODID/post-fs-data.sh > /dev/null
if FINDER "$MPATHS"; then
UIP "Patching Needed Files..."
for OMIX in $MPATHS; do
UIP "Found $OMIX" "Patching..."
MIX="$MODPATH/$MODID$(echo $OMIX | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $MIX`
cp -f $MAGISKMP$OMIX $MIX
sed -i 's/\t/  /g' $MIX
UIP "Files Found And Patched"
done
fi
if FINDER "$ACXML"; then
UIP "Patching Needed Files..."
for OACONF in $ACXML; do
UIP "Found $OACONF" "Patching..."
ACONF="$MODPATH/$MODID$(echo $OACONF | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $ACONF`
cp -f $MAGISKMP$OACONF $ACONF
sed -i 's/\t/  /g' $ACONF
UIP "Files Found And Patched"
done
fi
if $STEP1; then PATCH_VOLUMES -aist; fi
if $STEP2; then PATCH_MICROPHONE -aist; fi
if $STEP3; then
UIP "Start DOLBYATMOS"
echo -e "\n#Dolby Atmos Tweaks
ro.vendor.audio.sfx.scenario=true
ro.vendor.audio.scenario.support=true" >> $MODPATH/$MODID/system.prop
fi
if $STEP4; then
UIP "Start DISABLESCRAMOFBLUETOOTH"
echo -e "\n#Disable SCRAM Of Bluetooth
persist.vendor.qcom.bluetooth.scram.enabled=false
persist.qcom.bluetooth.scram.enabled=false" >> $MODPATH/$MODID/system.prop
fi
if FINDER "$MPATHS"; then PATCH_MIXER -aist; fi
if FINDER "$APIXML"; then PATCH_AUDIO_PLATFORM_INFO -aist; fi
if FINDER "$ACXML"; then PATCH_DEEP_BUFFER -aist; fi
if FINDER "$APCONFXML"; then
UIP "Patching Needed Files..."
for OAPCXM in $APCONFXML; do
case $OAPCXM in
*.xml) UIP "Found $OAPCXM" "Patching..."
APCXM="$MODPATH/$MODID$(echo $OAPCXM | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $APCXM`
cp -f $MAGISKMP$OAPCXM $APCXM
sed -i 's/\t/  /g' $APCXM
sed -i 's/speaker_drc_enabled="true"/speaker_drc_enabled="false"/g'  $APCXM
UIP "Files Found And Patched";;
esac
done
fi
MOVERPATH
SET_PERM_RM -msgdi
}

IPSAQ() {
if $MAGISK && FINDER "$AIPCONF"; then
UCSA "Install System Audio Quality $VIPSAQ?" "IPSAQS"
fi
}

IPSAQS() {
UIP "Installing System Audio Quality $IAMM"
PTMFI -nmp "$IDSAQ"
MMPR -vc "System audio quality 2" "$VIPSAQ" "$VCIPSAQ" "Ichigo Kywrosaki" "This module improves the sound quality of system sounds"
UIP "Patching Needed Files..."
for OFILE in $AIPCONF; do
UIP "Found $OFILE" "Patching..."
FILE="$MODPATH/$MODID$(echo $OFILE | sed "s|^/vendor|$MIPSV|g")"
mkdir -p `dirname $FILE`
cp -f $MAGISKMP$OFILE $FILE
sed -i '/default {/p;/default {/,/}/d;' $FILE
sed -i "s/^  default {/  default {\n    flags AUDIO_OUTPUT_FLAG_PRIMARY\n    formats AUDIO_FORMAT_PCM_16_BIT\n    sampling_rates 48000\n    bit_width 16\n    app_type 69936\n  }/" $FILE
UIP "Files Found And Patched"
done
SET_PERM_RM -msgdi
}

IPIB() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/increasebitrate ]; then
UIP -d "$MSGFI Increase Bitrate, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
BUCKUPER -r "$MPXML"
rm -f $AIOPFMDPH/increasebitrate
UIP "$MSGDRM"
fi
else
if FINDER "$MPXML"; then
UCSA "Install Increase Bitrate $VIPIBS?" "IPIBS"
fi
fi
}

IPIBS() {
UIP "Installing Increase Bitrate $IAMM"
if $MAGISK; then
PTMFI -nmp "$IDIBS"
MMPR -v "Increase Bitrate" "$VIPIBS" "Increase Bitrate (320kbps) $MSGFMM"
else
BUCKUPER -s "$MPXML"
touch  $AIOPFMDPH/increasebitrate
fi
FPATCHER "$MPXML" "s/192000/320000/g"
UIP "$MSGDI"
}

IPAML() {
if $MAGISK; then
UCSA "Install Audio Modification Library $VIPAML?" "IPAMLS"
fi
}

IPAMLS() {
UIP "Installing Audio Modification Library $IAMM"
MODID="$IDAML"; REMOVER -e-mm "$MODID" "system"
mkdir -p "$MODPATH/$MODID/.scripts"
touch $MODPATH/$MODID/update
MMPR -vcsuj "Audio Modification Library" "$VIPAML" "$VCIPAML" "zackptg5, ahrion" "AudModLib is a framework that allows the seamless integration of multiple audio mods in Magisk." "https://forum.xda-developers.com/apps/magisk/module-audio-modification-library-t3579612" "https://raw.githubusercontent.com/Zackptg5/Audio-Modification-Library/master/update.json"
$ECHO "#!$MIPSB/sh
if [ -s $NVBASE/$MODID/modlist ]; then
while read mod; do
[ -d \"$MODPATH/\$mod\" ] || continue
for file in \$(find $NVBASE/$MODID/\$mod -type f 2>/dev/null | sed \"s|$NVBASE/$MODID/||\"); do
[ -f \"$MODPATH/\$file\" ] || cp -af $NVBASE/$MODID/\$file $MODPATH/\$file
done
done < $NVBASE/$MODID/modlist
fi
rm -rf $NVBASE/$MODID
[ -f \"$MODPATH/acdb/post-fs-data.sh.bak\" ] && mv -f $MODPATH/acdb/post-fs-data.sh.bak $MODPATH/acdb/post-fs-data.sh" > $MODPATH/$MODID/uninstall.sh
echo "[ -d \"/sbin/.magisk\" ] && MAGISKTMP=\"/sbin/.magisk\" || MAGISKTMP=\"\$(find /dev -mindepth 2 -maxdepth 2 -type d -name \".magisk\")\"
API=$ASDK

# Functions
set_perm() {
chown \$2:\$3 \$1 || return 1
chmod \$4 \$1 || return 1
CON=\$5
[ -z \$CON ] && CON=u:object_r:system_file:s0
chcon \$CON \$1 || return 1
}
set_perm_recursive() {
find \$1 -type d 2>/dev/null | while read dir; do
set_perm \$dir \$2 \$3 \$4 \$6
done
find \$1 -type f -o -type l 2>/dev/null | while read file; do
set_perm \$file \$2 \$3 \$5 \$6
done
}
cp_mv() {
mkdir -p \"\$(dirname \"\$3\")\"
cp -af \"\$2\" \"\$3\"
[ \"\$1\" == \"-m\" ] && rm -f \$2 || true
}
osp_detect() {
local spaces effects type=\"\$1\"
local files=\$(find $MODPATH/$MODID/system -type f -name \"*audio_effects*.conf\" -o -name \"*audio_effects*.xml\")
for file in \$files; do
for osp in \$type; do
case \$file in
*.conf) spaces=\$(sed -n \"/^output_session_processing {/,/^}/ {/^ *\$osp {/p}\" \$file | sed -r \"s/( *).*/\1/\")
effects=\$(sed -n \"/^output_session_processing {/,/^}/ {/^\$spaces\\\$osp {/,/^\$spaces}/p}\" \$file | grep -E \"^\$spaces +[A-Za-z]+\" | sed -r \"s/( *.*) .*/\1/g\")
for effect in \${effects}; do
spaces=\$(sed -n \"/^effects {/,/^}/ {/^ *\$effect {/p}\" \$file | sed -r \"s/( *).*/\1/\")
[ \"\$effect\" != \"atmos\" -a \"\$effect\" != \"dtsaudio\" ] && sed -i \"/^effects {/,/^}/ {/^\$spaces\$effect {/,/^\$spaces}/d}\" \$file
done
;;
*.xml) effects=\$(sed -n \"/^ *<postprocess>\$/,/^ *<\/postprocess>\$/ {/^ *<stream type=\\\"\$osp\\\">\$/,/^ *<\/stream>\$/ {/<stream type=\\\"\$osp\\\">/d; /<\/stream>/d; s/<apply effect=\\\"//g; s/\\\"\/>//g; s/ *//g; p}}\" \$file)
for effect in \${effects}; do
[ \"\$effect\" != \"atmos\" -a \"\$effect\" != \"dtsaudio\" ] && sed -i \"/^\( *\)<apply effect=\\\"\$effect\\\"\/>/d\" \$file
done
;;
esac
done
done
return 0
}

# Debug
exec 2>$MODPATH/$MODID/debug-pfsd.log
set -x

# Restore and reset
. $MODPATH/$MODID/uninstall.sh
rm -rf $NVBASE/$MODID $MODPATH/$MODID/system $MODPATH/$MODID/errors.txt $MODPATH/$MODID/system.prop
[ -f \"$MODPATH/acdb/post-fs-data.sh\" ] && mv -f $MODPATH/acdb/post-fs-data.sh $MODPATH/acdb/post-fs-data.sh.bak
mkdir $NVBASE/$MODID
# Don't follow symlinks
files=\"\$(find \$MAGISKTMP/mirror/system_root/system \$MAGISKTMP/mirror/system \$MAGISKTMP/mirror/vendor -type f -name \"*audio_effects*.conf\" -o -name \"*audio_effects*.xml\" -o -name \"*audio_*policy*.conf\" -o -name \"*audio_*policy*.xml\" -o -name \"*mixer_paths*.xml\" -o -name \"*mixer_gains*.xml\" -o -name \"*audio_device*.xml\" -o -name \"*sapa_feature*.xml\" -o -name \"*audio_platform_info*.xml\" -o -name \"*audio_configs*.xml\" -o -name \"*audio_device*.xml\")\"
for file in \$files; do
name=\$(echo \"\$file\" | sed -e \"s|\$MAGISKTMP/mirror||\" -e \"s|/system_root/|/|\" -e \"s|/system/|/|\")
cp_mv -c \$file $MODPATH/$MODID/system\$name
modfiles=\"/system\$name \$modfiles\"
done
osp_detect \"music\"

# Detect/move audio mod files
for mod in \$(find $MODPATH/* -maxdepth 0 -type d ! -name aml); do
modname=\"\$(basename \$mod)\"
[ -f \"\$mod/disable\" ] && continue
# Move files
files=\"\$(find \$mod/system -type f -name \"*audio_effects*.conf\" -o -name \"*audio_effects*.xml\" -o -name \"*audio_*policy*.conf\" -o -name \"*audio_*policy*.xml\" -o -name \"*mixer_paths*.xml\" -o -name \"*mixer_gains*.xml\" -o -name \"*audio_device*.xml\" -o -name \"*sapa_feature*.xml\" -o -name \"*audio_platform_info*.xml\" -o -name \"*audio_configs*.xml\" -o -name \"*audio_device*.xml\" 2>/dev/null)\"
[ \"\$files\" ] && echo \"\$modname\" >> $NVBASE/$MODID/modlist || continue
for file in \$files; do
cp_mv -m \$file $NVBASE/$MODID/\$modname/\$(echo \"\$file\" | sed \"s|\$mod/||\")
done
# Chcon fix for Android Q+
[ \$API -ge 29 ] && chcon -R u:object_r:vendor_file:s0 \$mod$MIPSV/lib*/soundfx 2>/dev/null
done

# Remove unneeded files from aml
for file in \$modfiles; do
[ \"\$(find $NVBASE/$MODID -type f -path \"*\$file\")\" ] || rm -f $MODPATH/$MODID\$file
done

# Set perms and such
set_perm_recursive $MODPATH/$MODID/system 0 0 0755 0644
if [ -d $MODPATH/$MODID$MIPSV ]; then
set_perm_recursive $MODPATH/$MODID$MIPSV 0 0 0755 0644 u:object_r:vendor_file:s0
[ -d $MODPATH/$MODID$MIPSVE ] && set_perm_recursive $MODPATH/$MODID$MIPSVE 0 0 0755 0644 u:object_r:vendor_configs_file:s0
fi
exit 0" > $MODPATH/$MODID/post-fs-data.sh
$ECHO "# Variables
[ \"\$(magisk --path 2>/dev/null)\" ] && MAGISKTMP=\"\$(magisk --path 2>/dev/null)/.magisk\" || MAGISKTMP=\"/sbin/.magisk\"
API=$ASDK
[ \$API -ge 26 ] && libdir=\"/vendor\" || libdir=\"/system\"

# Functions
cp_mv() {
mkdir -p \"\$(dirname \"\$3\")\"
cp -af \"\$2\" \"\$3\"
[ \"\$1\" == \"-m\" ] && rm -f \$2 || true
}
osp_detect() {
local spaces effects type=\"\$1\"
local files=\$(find $MODPATH/$MODID/system -type f -name \"*audio_effects*.conf\" -o -name \"*audio_effects*.xml\")
for file in \$files; do
for osp in \$type; do
case \$file in
*.conf) spaces=\$(sed -n \"/^output_session_processing {/,/^}/ {/^ *\$osp {/p}\" \$file | sed -r \"s/( *).*/\1/\")
effects=\$(sed -n \"/^output_session_processing {/,/^}/ {/^\$spaces\\\$osp {/,/^\$spaces}/p}\" \$file | grep -E \"^\$spaces +[A-Za-z]+\" | sed -r \"s/( *.*) .*/\1/g\")
for effect in \${effects}; do
spaces=\$(sed -n \"/^effects {/,/^}/ {/^ *\$effect {/p}\" \$file | sed -r \"s/( *).*/\1/\")
[ \"\$effect\" != \"atmos\" -a \"\$effect\" != \"dtsaudio\" ] && sed -i \"/^effects {/,/^}/ {/^\$spaces\$effect {/,/^\$spaces}/d}\" \$file
done
;;
*.xml) effects=\$(sed -n \"/^ *<postprocess>\$/,/^ *<\/postprocess>\$/ {/^ *<stream type=\\\"\$osp\\\">\$/,/^ *<\/stream>\$/ {/<stream type=\\\"\$osp\\\">/d; /<\/stream>/d; s/<apply effect=\\\"//g; s/\\\"\/>//g; s/ *//g; p}}\" \$file)
for effect in \${effects}; do
[ \"\$effect\" != \"atmos\" -a \"\$effect\" != \"dtsaudio\" ] && sed -i \"/^\( *\)<apply effect=\\\"\$effect\\\"\/>/d\" \$file
done
;;
esac
done
done
return 0
}
patch_cfgs() {
local first=true files=\"\" file lib=false effect=false outsp=false proxy=false replace=false libname libpath effname uid libname_sw uid_sw libname_hw uid_hw libpathsw libpathhw conf xml
local opt=\`getopt :fleoqpr \"\$@\"\`
eval set -- \"\$opt\"
while true; do
case \"\$1\" in
-f) files=\"placeholder\"; shift;;
-l) lib=true; first=false; shift;;
-e) effect=true; first=false; shift;;
-o) outsp=true; conf=output_session_processing; xml=postprocess; first=false; shift;;
-q) outsp=true; conf=pre_processing; xml=preprocess; first=false; shift;;
-p) proxy=true; effect=false; outsp=false; first=false; shift;;
-r) replace=true; shift;;
--) shift; break;;
*) return 1;;
esac
done
[ -z \"\$files\" ] && files=\$(find $MODPATH/$MODID/system -type f -name \"*audio_effects*.conf\" -o -name \"*audio_effects*.xml\") || { files=\"\$1\"; shift; }
\$first && { lib=true; effect=true; }
if \$proxy; then
effname=\$1; uid=\${2:?}; shift 2
libname_sw=\$1; uid_sw=\${2:?}; shift 2
\$lib && { libpathsw=\$1; shift; }
libname_hw=\$1; uid_hw=\${2:?}; shift 2
\$lib && { libpathhw=\${1:?}; shift; }
else
\$outsp && { type=\${1:?}; shift; }
{ \$effect || \$outsp; } && { effname=\${1:?}; shift; }
\$effect && { uid=\${1:?}; shift; }
{ \$lib || \$effect; } && { libname=\${1:?}; shift; }
\$lib && { libpath=\${1:?}; shift; }
fi
for file in \$files; do
case \"\$file\" in
*.conf)
if \$proxy; then
if \$replace && [ \"\$(sed -n \"/^effects {/,/^}/ {/^  \$effname {/,/^  }/p}\" \$file)\" ]; then
spaces=\$(sed -n \"/^effects {/,/^}/ {/^ *\$effname {/p}\" \$file | sed -r \"s/( *).*/\1/\")
sed -i \"/^effects {/,/^}/ {/^\$spaces\$effname {/,/^\$spaces}/d}\" \$file
fi
[ ! \"\$(sed -n \"/^effects {/,/^}/ {/^  \$effname {/,/^  }/p}\" \$file)\" ] && sed -i \"s/^effects {/effects {\n  \$effname {\n    library proxy\n    uuid \$uid\n\n    libsw {\n      library \$libname_sw\n      uuid \$uid_sw\n    }\n\n    libhw {\n      library \$libname_hw\n      uuid \$uid_hw\n    }\n  }/g\" \$file
if \$lib; then
patch_cfgs -fl \"\$file\" \"proxy\" \"\$libdir/lib/soundfx/libeffectproxy.so\"
if \$replace; then
patch_cfgs -frl \"\$file\" \"\$libname_sw\" \"\$libpathsw\"
patch_cfgs -frl \"\$file\" \"\$libname_hw\" \"\$libpathhw\"
else
patch_cfgs -fl \"\$file\" \"\$libname_sw\" \"\$libpathsw\"
patch_cfgs -fl \"\$file\" \"\$libname_hw\" \"\$libpathhw\"
fi
fi
else
if \$lib; then
if \$replace && [ \"\$(sed -n \"/^libraries {/,/^}/ {/^ *\$libname {/,/}/p}\" \$file)\" ]; then
spaces=\$(sed -n \"/^libraries {/,/^}/ {/^ *\$libname {/p}\" \$file | sed -r \"s/( *).*/\1/\")
sed -i \"/^libraries {/,/^}/ {/^\$spaces\$libname {/,/^\$spaces}/d}\" \$file
fi
[ ! \"\$(sed -n \"/^libraries {/,/^}/ {/^ *\$libname {/,/}/p}\" \$file)\" ] && sed -i \"s|^libraries {|libraries {\n  \$libname {\n    path \$libpath\n  }|\" \$file
fi
if \$effect; then
if \$replace && [ \"\$(sed -n \"/^effects {/,/^}/ {/^ *\$effname {/,/}/p}\" \$file)\" ]; then
spaces=\$(sed -n \"/^effects {/,/^}/ {/^ *\$effname {/p}\" \$file | sed -r \"s/( *).*/\1/\")
sed -i \"/^effects {/,/^}/ {/^\$spaces\$effname {/,/^\$spaces}/d}\" \$file
fi
[ ! \"\$(sed -n \"/^effects {/,/^}/ {/^ *\$effname {/,/}/p}\" \$file)\" ] && sed -i \"s|^effects {|effects {\n  \$effname {\n    library \$libname\n    uuid \$uid\n  }|\" \$file
fi
if \$outsp && [ \"\$API\" -ge 26 ]; then
local OIFS=\$IFS; local IFS=','
for i in \$type; do
if [ ! \"\$(sed -n \"/^\$conf {/,/^}/p\" \$file)\" ]; then
echo -e \"\n\$conf {\n    \$i {\n        \$effname {\n        }\n    }\n}\" >> \$file
elif [ ! \"\$(sed -n \"/^\$conf {/,/^}/ {/\$i {/,/^    }/p}\" \$file)\" ]; then
sed -i \"/^\$conf {/,/^}/ s/\$conf {/\$conf {\n    \$i {\n        \$effname {\n        }\n    }/\" \$file
elif [ ! \"\$(sed -n \"/^\$conf {/,/^}/ {/\$i {/,/^    }/ {/\$effname {/,/}/p}}\" \$file)\" ]; then
sed -i \"/^\$conf {/,/^}/ {/\$i {/,/^    }/ s/\$i {/\$i {\n        \$effname {\n        }/}\" \$file
fi
done
local IFS=\$OIFS
fi
fi
;;
*.xml)
if \$proxy; then
if \$replace && [ \"\$(sed -n \"/<effects>/,/<\/effects>/ {/^ *<effectProxy name=\"\$effname\".*>/,/^ *<\/effectProxy>/p}\" \$file)\" -o \"\$(sed -n \"/<effects>/,/<\/effects>/ {/^ *<effect name=\"\$effname\".*\/>/p}\" \$file)\" ]; then
sed -i \"/<effects>/,/<\/effects>/ {/^ *<effectProxy name=\"\$effname\".*>/,/^ *<\/effectProxy>/d}\" \$file
sed -i \"/<effects>/,/<\/effects>/ {/^ *<effect name=\"\$effname\".*\/>/d}\" \$file
fi
[ ! \"\$(sed -n \"/<effects>/,/<\/effects>/ {/^ *<effectProxy name=\"\$effname\".*>/,/^ *<\/effectProxy>/p}\" \$file)\" -a ! \"\$(sed -n \"/<effects>/,/<\/effects>/ {/^ *<effect name=\"\$effname\".*>/,/^ *\/>/p}\" \$file)\" ] && sed -i -e \"/<effects>/ a\        <effectProxy name=\"\$effname\" library=\"proxy\" uuid=\"\$uid\">\n            <libsw library=\"\$libname_sw\" uuid=\"\$uid_sw\"\/>\n            <libhw library=\"\$libname_hw\" uuid=\"\$uid_hw\"\/>\n        <\/effectProxy>\" \$file
if \$lib; then
patch_cfgs -fl \"\$file\" \"proxy\" \"\$libdir/lib/soundfx/libeffectproxy.so\"
if \$replace; then
patch_cfgs -frl \"\$file\" \"\$libname_sw\" \"\$libpathsw\"
patch_cfgs -frl \"\$file\" \"\$libname_hw\" \"\$libpathhw\"
else
patch_cfgs -fl \"\$file\" \"\$libname_sw\" \"\$libpathsw\"
patch_cfgs -fl \"\$file\" \"\$libname_hw\" \"\$libpathhw\"
fi
fi
else
if \$lib; then
if \$replace && [ \"\$(sed -n \"/<libraries>/,/<\/libraries>/ {/^ *<library name=\"\$libname\" path=\"\$(basename \$libpath)\"\/>/p}\" \$file)\" ]; then
sed -i \"/<libraries>/,/<\/libraries>/ {/^ *<library name=\"\$libname\" path=\"\$(basename \$libpath)\"\/>/d}\" \$file
fi
[ ! \"\$(sed -n \"/<libraries>/,/<\/libraries>/ {/^ *<library name=\"\$libname\" path=\"\$(basename \$libpath)\"\/>/p}\" \$file)\" ] && sed -i \"/<libraries>/ a\        <library name=\"\$libname\" path=\"\$(basename \$libpath)\"\/>\" \$file
fi
if \$effect; then
if \$replace && [ \"\$(sed -n \"/<effects>/,/<\/effects>/ {/^ *<effect name=\"\$effname\".*\/>/p}\" \$file)\" -o \"\$(sed -n \"/<effects>/,/<\/effects>/ {/^ *<effectProxy name=\"\$effname\".*>/,/^ *<\/effectProxy>/p}\" \$file)\" ]; then
sed -i \"/<effects>/,/<\/effects>/ {/^ *<effect name=\"\$effname\".*\/>/d}\" \$file
sed -i \"/<effects>/,/<\/effects>/ {/^ *<effectProxy name=\"\$effname\".*>/,/^ *<\/effectProxy>/d}\" \$file
fi
[ ! \"\$(sed -n \"/<effects>/,/<\/effects>/ {/^ *<effect name=\"\$effname\".*\/>/p}\" \$file)\" ] && sed -i \"/<effects>/ a\        <effect name=\"\$effname\" library=\"\$(basename \$libname)\" uuid=\"\$uid\"\/>\" \$file
fi
if \$outsp && [ \"\$API\" -ge 26 ]; then
local OIFS=\$IFS; local IFS=','
for i in \$type; do
if [ ! \"\$(sed -n \"/^ *<\$xml>/,/^ *<\/\$xml>/p\" \$file)\" ]; then
sed -i \"/<\/audio_effects_conf>/i\    <\$xml>\n       <stream type=\"\$type\">\n            <apply effect=\"\$effname\"\/>\n        <\/stream>\n    <\/\$xml>\" \$file
elif [ ! \"\$(sed -n \"/^ *<\$xml>/,/^ *<\/\$xml>/ {/<stream type=\"\$type\">/,/<\/stream>/p}\" \$file)\" ]; then
sed -i \"/^ *<\$xml>/,/^ *<\/\$xml>/ s/    <\$xml>/    <\$xml>\n        <stream type=\"\$type\">\n            <apply effect=\"\$effname\"\/>\n        <\/stream>/\" \$file
elif [ ! \"\$(sed -n \"/^ *<\$xml>/,/^ *<\/\$xml>/ {/<stream type=\"\$type\">/,/<\/stream>/ {/^ *<apply effect=\"\$effname\"\/>/p}}\" \$file)\" ]; then
sed -i \"/^ *<\$xml>/,/^ *<\/\$xml>/ {/<stream type=\"\$type\">/,/<\/stream>/ s/<stream type=\"\$type\">/<stream type=\"\$type\">\n            <apply effect=\"\$effname\"\/>/}\" \$file
fi
done
local IFS=\$OIFS
fi
fi
;;
esac
done
return 0
}
legacy_script() {
local RUNONCE=false COUNT=1 LIBDIR=\$libdir/lib/soundfx MOD=\$mod
(. \$mod/.aml.sh) || echo \"Error in \$modname aml.sh script\" >> $MODPATH/$MODID/errors.txt
for file in \$files; do
local NAME=\$(echo \"\$file\" | sed \"s|\$mod|system|\")
\$RUNONCE || { case \$file in
*audio_effects*) (. \$mod/.aml.sh) || [ \"\$(grep -x \"\$modname\" $MODPATH/$MODID/errors.txt)\" ] || echo \"Error in \$modname aml.sh script\" >> $MODPATH/$MODID/errors.txt; COUNT=\$((\$COUNT + 1));;
esac; }
done
}

(
# Debug
exec 2>$MODPATH/$MODID/debug.log
set -x

# Detect/install audio mods
for mod in \$(find $MODPATH/* -maxdepth 0 -type d ! -name aml); do
modname=\"\$(basename \$mod)\"
[ -f \"\$mod/disable\" ] && continue
[ -f \"\$mod/aml.sh\" ] && cp -f \$mod/aml.sh \$mod/.aml.sh
# .aml.sh file should take precedence
if [ -f \"\$mod/.aml.sh\" ]; then
grep -qx \"\$modname\" $NVBASE/$MODID/modlist || echo \"\$modname\" >> $NVBASE/$MODID/modlist
if grep -qE '$MODPATH/$MODID/\\$NAME|RUNONCE=|COUNT=' \$mod/.aml.sh; then
legacy_script
else
(. \$mod/.aml.sh) || echo \"Error in \$modname aml.sh script\" >> $MODPATH/$MODID/errors.txt
fi
else
# Favor vendor libs over system ones, no aml builtins are 64bit only - use 32bit lib dir
libs=\"\$(find \$mod$MIPSV/lib/soundfx \$mod$MIPSLS -type f -name \"libam3daudioenhancement.so\" -o -name \"libarkamys.so\" -o -name \"libatmos.so\" -o -name \"libbassboostMz.so\" -o -name \"libdirac.so\" -o -name \"libdirac.so\" -o -name \"libdseffect.so\" -o -name \"libdtsaudio.so\" -o -name \"libhwdap.so\" -o -name \"libhwdax.so\" -o -name \"libicepower.so\" -o -name \"libjamesdsp.so\" -o -name \"libmaxxeffect-cembedded.so\" -o -name \"libsonysweffect.so\" -o -name \"libswdap.so\" -o -name \"libswdap_ds1se.so\" -o -name \"libswdax.so\" -o -name \"libswvlldp.so\" -o -name \"libv4a_fx.so\" -o -name \"libv4a_fx_ics.so\" -o -name \"libv4a_xhifi_ics.so\" 2>/dev/null)\"
for lib in \$libs; do
for audmod in $MODPATH/$MODID/.scripts/\$(basename \$lib)~*; do
uuid=\$(basename \$audmod | sed -r \"s/.*~(.*).sh/\1/\")
hexuuid=\"\$(echo \$uuid | sed -r -e \"s/^(..)(..)(..)(..)-(..)(..)-(..)(..)-/\4\3\2\1\6\5\8\7-/\" -e \"s/-(..)(..)-(............)\$/\2\1\3/\")\"
xxd -p \$lib | tr -d '\n' | grep -q \"\$hexuuid\" || continue
\$(grep -xq \"\$modname\" $NVBASE/$MODID/modlist 2>/dev/null) || echo \"\$modname\" >> $NVBASE/$MODID/modlist
libfile=\"\$(echo \$lib | sed -e \"s|\$mod||\" -e \"s|$MIPSV|/vendor|\")\"
. \$audmod
done
done
fi
done

# Reload patched files - original mounted files are seemingly deleted and replaced by sed
for i in \$(find $MODPATH/$MODID/system -type f); do
j=\"\$(echo \$i | sed \"s|$MODPATH/$MODID||\")\"
umount \$j
mount -o bind \$i \$j
done
[ \$API -ge 24 ] && killall audioserver 2>/dev/null || killall mediaserver 2>/dev/null
exit 0
)&" > $MODPATH/$MODID/service.sh
echo "#libam3daudioenhancement.so~6723dd80-f0b7-11e0-98a2-0002a5d5c51b
patch_cfgs am3daudioenhancement 6723dd80-f0b7-11e0-98a2-0002a5d5c51b am3daudioenhancement \$libfile
#libv4a_fx.so~41d3c987-e6cf-11e3-a88a-11aba5d5c51b
patch_cfgs v4a_standard_fx 41d3c987-e6cf-11e3-a88a-11aba5d5c51b v4a_fx \$libfile
#libv4a_fx_ics.so~41d3c987-e6cf-11e3-a88a-11aba5d5c51b
patch_cfgs v4a_standard_fx 41d3c987-e6cf-11e3-a88a-11aba5d5c51b v4a_fx \$libfile
#libv4a_xhifi_ics.so~d92c3a90-3e26-11e2-a25f-0800200c9a66
patch_cfgs v4a_standard_xhifi d92c3a90-3e26-11e2-a25f-0800200c9a66 v4a_xhifi \$libfile
#libhwdax.so~9d4921da-8225-4f29-aefa-6e6f69726861
patch_cfgs -pl dax 9d4921da-8225-4f29-aefa-6e6f69726861 dax_sw 6ab06da4-c516-4611-8166-6168726e6f69 \$(dirname \$libfile)/libswdax.so dax_hw a0c30891-8246-4aef-b8ad-696f6e726861 \$libfile
#libswdax.so~9d4921da-8225-4f29-aefa-6e6f69726861
patch_cfgs dax 9d4921da-8225-4f29-aefa-6e6f69726861 dax \$libfile
#libswdap.so~9d4921da-8225-4f29-aefa-39537a04bcaa
patch_cfgs dap 9d4921da-8225-4f29-aefa-39537a04bcaa dap \$libfile
#libhwdap.so~a0c30891-8246-4aef-b8ad-d53e26da0253
patch_cfgs -pl dap 9d4921da-8225-4f29-aefa-6e6f69726861 dap_sw 6ab06da4-c516-4611-8166-452799218539 \$(dirname \$libfile)/libswdap.so dap_hw a0c30891-8246-4aef-b8ad-d53e26da0253 \$libfile
#libdseffect.so~9d4921da-8225-4f29-aefa-39537a04bcaa
patch_cfgs dsplus 9d4921da-8225-4f29-aefa-39537a04bcaa ds \$libfile
#libswvlldp.so~3783c334-d3a0-4d13-874f-0032e5fb80e2
patch_cfgs vlldp 3783c334-d3a0-4d13-874f-0032e5fb80e2 vlldp \$libfile
patch_cfgs -ole music atmos 9d4921da-8225-4f29-aefa-aacb40a73593 atmos \$(dirname \$libfile)/libatmos.so
#libicepower.so~f1c02420-777f-11e3-981f-0800200c9a66
patch_cfgs -l icepower \$libfile
patch_cfgs -e icepower_algo f1c02420-777f-11e3-981f-0800200c9a66 icepower
patch_cfgs -e icepower_eq 50dbef80-4ad4-11e3-8f96-0800200c9a66 icepower
patch_cfgs -e icepower_test e5456320-5391-11e3-8f96-0800200c9a66 icepower
patch_cfgs -e icepower_load bf51a790-512b-11e3-8f96-0800200c9a66 icepower
patch_cfgs -e icepower_null 63509430-52aa-11e3-8f96-0800200c9a66 icepower
#libarkamys.so~17852d50-161e-11e2-892e-0800200c9a66
patch_cfgs -ole music Arkamysfx 17852d50-161e-11e2-892e-0800200c9a66 arkamys \$libfile
#libdirac.so~4c6383e0-ff7d-11e0-b6d8-0002a5d5c51b
patch_cfgs dirac 4c6383e0-ff7d-11e0-b6d8-0002a5d5c51b dirac \$libfile
patch_cfgs -e dirac_controller b437f4de-da28-449b-9673-667f8b9643fe dirac
patch_cfgs -e dirac_music b437f4de-da28-449b-9673-667f8b964304 dirac
#libdirac.so~e069d9e0-8329-11df-9168-0002a5d5c51b
patch_cfgs -ole music dirac e069d9e0-8329-11df-9168-0002a5d5c51b dirac \$libfile
#libjamesdsp.so~f27317f4-c984-4de6-9a90-545759495bf2
patch_cfgs jamesdsp f27317f4-c984-4de6-9a90-545759495bf2 jdsp \$libfile
#libmaxxeffect-cembedded.so~ae12da60-99ac-11df-b456-0002a5d5c51b
patch_cfgs -ole music maxxaudio3 ae12da60-99ac-11df-b456-0002a5d5c51b maxxaudio3 \$libfile
#libbassboostMz.so~850b6319-bf66-4f93-bec0-dc6964367786
patch_cfgs bassboostMz 850b6319-bf66-4f93-bec0-dc6964367786 bassboostMz \$libfile
patch_cfgs virtualizerMz 0e9779c9-4e8f-494d-b2b1-b4ad4e37c54c virtualizerMz \$(dirname \$libfile)/libvirtualizerMz.so
patch_cfgs livemusicMz 0bbc89fe-52dc-4c40-8211-cae4da538b50 livemusicMz \$(dirname \$libfile)/liblivemusicMz.so
patch_cfgs equalizerMz 9626da93-9c71-4bb2-8e23-9fc707fb9703 equalizerMz \$(dirname \$libfile)/ibequalizerMz.so
#libsonysweffect.so~50786e95-da76-4557-976b-7981bdf6feb9
patch_cfgs -qle mic,camcorder ZNR b8a031e0-6bbf-11e5-b9ef-0002a5d5c51b znrwrapper \$(dirname \$libfile)/libznrwrapper.so
patch_cfgs -pl sonyeffect af8da7e0-2ca1-11e3-b71d-0002a5d5c51b sonyeffect_sw 50786e95-da76-4557-976b-7981bdf6feb9 \$libfile sonyeffect_hw f9ed8ae0-1b9c-11e4-8900-0002a5d5c51b \$(dirname \$libfile)/libsonypostprocbundle.so
#libatmos.so~74697567-7261-6564-6864-65726f206678
patch_cfgs dolbyatmos 74697567-7261-6564-6864-65726f206678 dolbyatmos \$libfile
osp_detect \"alarm notification ring\"
#libswdap_ds1se.so~74697567-7261-6564-6864-65726f206678
patch_cfgs dolbyatmos 74697567-7261-6564-6864-65726f206678 dolbyatmos \$libfile
osp_detect \"alarm notification ring\"
#libdtsaudio.so~146edfc0-7ed2-11e4-80eb-0002a5d5c51b
patch_cfgs -ole music dtsaudio 146edfc0-7ed2-11e4-80eb-0002a5d5c51b dtsaudio \$libfile
#end" > $MODPATH/$MODID/AudioModificationLibrary.sh
sed -i -e 's/\\/\\\\/g' -e 's/\ /\\ /g' $MODPATH/$MODID/AudioModificationLibrary.sh
while read AMLLINE; do
case $AMLLINE in
\#*) if [ "$AMLUUID" ]; then echo " " >> $MODPATH/$MODID/.scripts/$AMLUUID.sh; fi; AMLUUID=$(echo "$AMLLINE" | sed "s/#//");;
*) echo "$AMLLINE" >> $MODPATH/$MODID/.scripts/$AMLUUID.sh;;
esac
done < $MODPATH/$MODID/AudioModificationLibrary.sh
rm -f $MODPATH/$MODID/AudioModificationLibrary.sh
for i in $MODPATH/$MODID/.scripts/*; do
AMLLIBS="$AMLLIBS-name \"$(basename $i | sed "s/~.*//")\" "
done
AMLLIBS="$(echo $AMLLIBS | sed "s/\" /\" -o /g")"
sed -i -e "s|<libs>|$AMLLIBS|" $MODPATH/$MODID/service.sh
cp -f $MODPATH/$MODID/uninstall.sh $SERVICED/aml.sh; chmod 0755 $SERVICED/aml.sh
sed -i "3a[ -d \"$MODPATH/$MODID\" ] && exit 0" $SERVICED/aml.sh
echo 'rm -f $0' >> $SERVICED/aml.sh
SET_PERM_RM -msgdi
}

} #

{ #Removal: RSL/RSO/RSTA/RWFSB

RPASSF() {
if [ $BOOTMODE != true ] && [ -d $IPDS ] && [ ! -f $IPDS/storage.xml ]; then
UCSA "Reset Screen Lock?" "RPASSFS"
fi
}

RPASSFS() {
UIP "Remove Password Files"
rm -f $IPDS/gatekeeper*.key $IPDS/locksettings* $IPDS/password.key $IPDS/gesture.key
UIP "$MSGDRM"
}

RSWIFTO() {
if [ $BOOTMODE != true ] && [ -d $MODPATH/swift_installer ]; then
UCSA "Remove All Swift Installer Overlays?" "RSWIFTOS"
fi
}

RSWIFTOS() {
MODID="swift_installer"
UIP "Swift Installer Overlays Remover"
[ -d "$STORAGE/.swift" ] && UIP "Removing Temporary Overlays Folder"; rm -rf $STORAGE/.swift
UIP "Removing Overlays From $IPSA"
for overlay in $(ls $IPSA | grep .swiftinstaller.overlay); do
rm -rf $IPSA/$overlay
done
UIP "Removing Overlays From $MODPATH/$MODID$MIPSA"
for overlay in $(ls $MODPATH/$MODID$MIPSA | grep .swiftinstaller.overlay); do
rm -rf $MODPATH/$MODID$MIPSA/$overlay
done
UIP "Clear Cache In $IPDRESC"
rm -rf $IPDRESC/*swiftinstaller.overlay*
UIP "Removing Overlays Saved State"
rm -rf $IPDS/overlays.xml
UIP "$MSGDRM"
}

GTRRRM() {
UCSA -ent "Go To Remove/Replace/Restore Mode?" "GTRRRMS"
}

GTRRRMS() {
DWSGTRRRM=false; RWSGTRRRM=false; RMTSAV=false; CAILIST=false
if [ -f $AIOPFMDPH/Replace.txt ] && [ $BOOTMODE != true ]; then
UIP -d "Found Replace apk, Restote?" "$MSGVU Yes $MSGEFTC" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
REPLACELIST=$(cat $AIOPFMDPH/Replace.txt)
UIP -d "Choose Variant:" "$MSGVU Restore Every App With Confirm $MSGRI" "$MSGVD Restore Every App Without Confirm"
if $KEYFUNCTION; then
RWSGTRRRM=true
fi
for FINDTRASH in $REPLACELIST; do
for NAMEPATHDELLTRASH in "$IPSA" "$IPSPA" "$IPSSPA" "$IPSSPPA" "$IPSSEA" "$IPSSEPA"; do
if [ -d $NAMEPATHDELLTRASH/$FINDTRASH ]; then
if $RWSGTRRRM; then
UCSA -s "Found ($FINDTRASH)" "Restore?" "Next $MSGNUS" "GTRRRMSAAA"
else
UIP "Found ($FINDTRASH)"
GTRRRMSAAA
fi
fi
done
done
fi
fi
if $BOOTMODE; then
RMTSAV=true
else
UIP -d "Choose Variant:" "$MSGVU Replace All Find Apps" "$MSGVD Remove All Find Apps"
if $KEYFUNCTION; then
RMTSAV=true
fi
fi
if $RMTSAV; then
UIP -d "Choose Variant:" "$MSGVU Replace Every App Found With Confirm $MSGRI" "$MSGVD Replace Every App Found Without Confirm"
else
UIP -d "Choose Variant:" "$MSGVU Remove Every App Found With Confirm $MSGRI" "$MSGVD Remove Every App Found Without Confirm"
fi
if $KEYFUNCTION; then
RMLISTCHOICECONFIRMATION=true
else
RMLISTCHOICECONFIRMATION=false
DWSGTRRRM=true
fi
if [ -f $STORAGE/APPRMLIST.sh ]; then
UIP -d "Choose Variant:" "$MSGVU Use APPRMLIST.sh & Patch List" "$MSGVD Use Only APPRMLIST.sh"
if $KEYFUNCTION; then
RMLISTCHOICEVARIANT=true
else
RMLISTCHOICEVARIANT=false
fi
RMLIST=$(cat $STORAGE/APPRMLIST.sh)
REMOVETRASHNAME="$RMLIST"
UIP "Search App, Please Wait..."
GTRRRMSA
UIP "Other App Not Found"
sleep 3
DWSGTRRRM=false
fi
if $RMLISTCHOICEVARIANT; then
if [ -f $AIOPFMDPH/AIL.txt ]; then
UIP -d "Found $AIOPFMDPH/AIL.txt" "$MSGVU Use AIL.txt List" "$MSGVD No, Next List $MSGNUS"
if $KEYFUNCTION; then
CAILIST=true
AILIST=$(cat $AIOPFMDPH/AIL.txt)
REMOVETRASHNAME="$AILIST"
UIP "Search App, Please Wait..."
GTRRRMSA
UIP "Other App Not Found"
sleep 3
fi
fi
UIP -d "Choose Variant:" "$MSGVU Use Stock List" "$MSGVD No, Next List $MSGNUS"
if $KEYFUNCTION; then
UIP "Search App, Please Wait..."
if [ $MIUI != true ] || $RMLISTCHOICECONFIRMATION; then
REMOVETRASHNAME="$STOCKLISTNOMIUI"
GTRRRMSA
fi
REMOVETRASHNAME="$STOCKLIST"
GTRRRMSA
UIP "Other App Not Found"
sleep 3
fi
UIP -d "Choose Variant:" "$MSGVU Use Experimental List" "$MSGVD No, Next List $MSGNUS"
if $KEYFUNCTION; then
RMLISTCHOICECONFIRMATION=true
REMOVETRASHNAME="$EXPERIMENTALLIST"
UIP "Search App, Please Wait..."
GTRRRMSA
UIP "Other App Not Found"
sleep 3
fi
if [ $MIUI != true ]; then
UIP -d "Choose Variant:" "$MSGVU Use Launchers List" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
RMLISTCHOICECONFIRMATION=true
REMOVETRASHNAME="$LAUNCHERLIST"
UIP "Search App, Please Wait..."
GTRRRMSA
UIP "Other App Not Found"
sleep 3
fi
fi
fi
}

GTRRRMSA() {
for FINDTRASH in $REMOVETRASHNAME; do
for NAMEPATHDELLTRASH in "$IPSA" "$IPSPA" "$IPSSPA" "$IPSSPPA" "$IPSSEA" "$IPSSEPA" "$IPVA" "$IPVPA"; do
if [ -d $NAMEPATHDELLTRASH/$FINDTRASH ] && [ ! -f $NAMEPATHDELLTRASH/$FINDTRASH/$FINDTRASH.replace ]; then
if $DWSGTRRRM; then
UIP "Found ($FINDTRASH)"
GTRRRMSAA
else
if $RMTSAV; then
UCSA -s "Found ($FINDTRASH)" "Replace" "Next Search $MSGNUS" "GTRRRMSAA"
else
UCSA -s "Found ($FINDTRASH)" "Remove" "Next Search $MSGNUS" "GTRRRMSAA"
fi
fi
break
UIP "Other Search App, Please Wait..."
fi
done
done
}

GTRRRMSAA() {
if $RMTSAV; then
if $MAGISK; then
MODID="RTSA"; REPLACER "$NAMEPATHDELLTRASH/$FINDTRASH"; MOVERPATH
touch $MODPATH/$MODID/update
MMPR -v "Replace Trash System App" "$VAIOPFMD" "Replace Trash System App $MSGFMM"
UIP "$MSGDRP"
else
mv $NAMEPATHDELLTRASH/$FINDTRASH/$FINDTRASH.apk $NAMEPATHDELLTRASH/$FINDTRASH/$FINDTRASH.replace
echo "$FINDTRASH" >> $AIOPFMDPH/Replace.txt
UIP "$MSGDRP"
fi
else
rm -rf $NAMEPATHDELLTRASH/$FINDTRASH; UIP "$MSGDRM"
if $CAILIST; then sed -i "/$FINDTRASH/d" $AIOPFMDPH/AIL.txt; if [ ! -s $AIOPFMDPH/AIL.txt ]; then rm -f $AIOPFMDPH/AIL.txt; fi; fi
fi
}

GTRRRMSAAA() {
sed -i "/$FINDTRASH/d" $AIOPFMDPH/Replace.txt
mv $NAMEPATHDELLTRASH/$FINDTRASH/$FINDTRASH.replace $NAMEPATHDELLTRASH/$FINDTRASH/$FINDTRASH.apk
if [ ! -s $AIOPFMDPH/Replace.txt ]; then rm -f $AIOPFMDPH/Replace.txt; fi
UIP "$MSGDRS"
}

GTRMFL() {
if [ $BOOTMODE != true ] && [ -f $STORAGE/FILERMLIST.sh ]; then
UCSA "Found FILERMLIST.sh Remove All Files?" "GTRMFLS"
fi
}

GTRMFLS() {
FILERMLIST=$(cat $STORAGE/FILERMLIST.sh)
for f in $FILERMLIST; do
if [ -e $SYSTEM/$f ]; then
UIP "Found $SYSTEM/$f"
rm -rf $SYSTEM/$f
elif [ -e $VENDOR/$f ]; then
UIP "Found $VENDOR/$f"
rm -rf $VENDOR/$f
fi
done
}

RWFS() {
if [ $BOOTMODE != true ]; then
if [ -f $IPDSU/wallpaper ] || [ -f $IPDSU/wallpaper_orig ]; then
UCSA "Remove Wallpaper (Fix Softloop)?" "RWFSS"
fi
fi
}

RWFSS() {
UIP "Remove Wallpaper"
rm -f $IPDSU/wallpaper*
UIP "$MSGDRM"
}

RRTPXML() {
if [ $BOOTMODE != true ] && [ -f $IPDMDE/0/apexdata/com.android.permission/runtime-permissions.xml ]; then
UCSA "Remove runtime-permissions.xml (If UI Softloop)?" "RRTPXMLS"
fi
}

RRTPXMLS() {
UIP "Removing runtime-permissions.xml"
rm -f $IPDMDE/0/apexdata/com.android.permission/runtime-permissions.xml
UIP "$MSGDRM"
}

RAPEXA() {
if [ $BOOTMODE != true ] && [ -d /data/apex/active ]; then
UCSA "Remove Apex Active (If Logoloop)?" "RAPEXAS"
fi
}

RAPEXAS() {
UIP "Removing Apex Active"
rm -rf /data/apex/active
UIP "$MSGDRM"
}

} #

{ #Test/Coming Soon

RoundedUIC() {
UCSA "Rounded UI Compile" "RoundedUICS"
}

RoundedUICS() {
for ROUNDEDSIZE in "0dip" "5dip" "10dip" "15dip" "20dip" "25dip" "33dip"; do

ORSLL3="$STORAGE/AIOCOMPILE/RoundedUI/RoundedSLLaucher3"; ORSLLQ="$STORAGE/AIOCOMPILE/RoundedUI/RoundedSLLawnchairQ"; ORSLLR="$STORAGE/AIOCOMPILE/RoundedUI/RoundedSLLawnchairR"; ORSLOP="$STORAGE/AIOCOMPILE/RoundedUI/RoundedSLOneplus"; ORSLOUI="$STORAGE/AIOCOMPILE/RoundedUI/RoundedSLOneui"; ORSLP="$STORAGE/AIOCOMPILE/RoundedUI/RoundedSLPixel"; ORSLPD="$STORAGE/AIOCOMPILE/RoundedUI/RoundedSLPixelated"; ORSLM="$STORAGE/AIOCOMPILE/RoundedUI/RoundedSLMoto" ; ORSLA="$STORAGE/AIOCOMPILE/RoundedUI/RoundedSLAsus"
ORUIONE="$STORAGE/AIOCOMPILE/RoundedUI/RoundedUIAndroid"; ORUITWO="$STORAGE/AIOCOMPILE/RoundedUI/RoundedUISUI"
mkdir -p $ORSLL3/res/values $ORSLLQ/res/values $ORSLLR/res/values $ORSLOP/res/values $ORSLOUI/res/values $ORSLP/res/values $ORSLPD/res/values $ORSLM/res/values $ORSLA/res/values $ORUIONE/res/values $ORUITWO/res/values $ORUITWO/res/drawable

ROUNDEDUISTRING="<dimen name=\"cardview_default_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"config_bottomDialogCornerRadius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"config_pipEnableRoundCorner\">$ROUNDEDSIZE</dimen>
	<dimen name=\"control_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"pip_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"progress_bar_corner_material\">$ROUNDEDSIZE</dimen>
	<dimen name=\"rounded_corner_radius_bottom\">$ROUNDEDSIZE</dimen>
	<dimen name=\"rounded_corner_radius_top\">$ROUNDEDSIZE</dimen>
	<dimen name=\"subtitle_shadow_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"task_card_menu_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"tooltip_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"abc_control_corner_material\">$ROUNDEDSIZE</dimen>
	<dimen name=\"abc_dialog_corner_radius_material\">$ROUNDEDSIZE</dimen>
	<dimen name=\"borderless_button_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"cardview_default_elevation\">$ROUNDEDSIZE</dimen>
	<dimen name=\"chooser_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"compat_control_corner_material\">$ROUNDEDSIZE</dimen>
	<dimen name=\"config_buttonCornerRadius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"config_dialogCornerRadius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"control_corner_material\">$ROUNDEDSIZE</dimen>
	<dimen name=\"corner_size\">$ROUNDEDSIZE</dimen>
	<dimen name=\"default_dialog_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"default_magnifier_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"dialog_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"fingerprint_dialog_corner_size\">$ROUNDEDSIZE</dimen>
	<dimen name=\"halo_inner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"lb_action_button_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"lb_rounded_rect_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"logout_button_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"mtrl_badge_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"mtrl_btn_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"mtrl_card_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"notification_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"notification_custom_view_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"notification_group_overflow_bg_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"notification_item_bg_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"notification_shadow_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"panel_content_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"qs_control_brightness_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"qs_control_corner_general_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"qs_control_customizer_others_bg_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"qs_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"rect_button_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"rounded_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"screenshot_action_container_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"searchbar_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"seek_bar_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"subtitle_corner_radius\">$ROUNDEDSIZE</dimen>"

ROUNDEDLSTRING="	<dimen name=\"bg_round_rect_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"oneplus_contorl_layout_margin_bottom1\">$ROUNDEDSIZE</dimen>
	<dimen name=\"oneplus_contorl_radius_r0\">$ROUNDEDSIZE</dimen>
	<dimen name=\"oneplus_contorl_radius_r32\">$ROUNDEDSIZE</dimen>
	<dimen name=\"op_control_menu_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"op_control_radius_r0\">$ROUNDEDSIZE</dimen>
	<dimen name=\"op_control_radius_r32\">$ROUNDEDSIZE</dimen>
	<dimen name=\"popup_container_with_arrow_round_rect_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"task_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"task_corner_radius_oneui\">$ROUNDEDSIZE</dimen>
	<dimen name=\"all_apps_scrim_view_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"arrow_toast_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"clear_all_button_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"oneplus_contorl_radius_r12\">$ROUNDEDSIZE</dimen>
	<dimen name=\"oneplus_contorl_radius_r16\">$ROUNDEDSIZE</dimen>
	<dimen name=\"oneplus_contorl_radius_r2\">$ROUNDEDSIZE</dimen>
	<dimen name=\"oneplus_contorl_radius_r4\">$ROUNDEDSIZE</dimen>
	<dimen name=\"oneplus_contorl_radius_r8\">$ROUNDEDSIZE</dimen>
	<dimen name=\"op_control_radius_r12\">$ROUNDEDSIZE</dimen>
	<dimen name=\"op_control_radius_r16\">$ROUNDEDSIZE</dimen>
	<dimen name=\"op_control_radius_r2\">$ROUNDEDSIZE</dimen>
	<dimen name=\"op_control_radius_r4\">$ROUNDEDSIZE</dimen>
	<dimen name=\"op_control_radius_r8\">$ROUNDEDSIZE</dimen>
	<dimen name=\"popup_arrow_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"recents_grid_task_view_focused_frame_rounded_corners_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"recents_grid_task_view_rounded_corners_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"recents_onboarding_toast_arrow_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"recents_task_view_shadow_rounded_corners_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"sesl_menu_popup_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"task_corner_radius_17819\">$ROUNDEDSIZE</dimen>
	<dimen name=\"task_corner_radius_small\">$ROUNDEDSIZE</dimen>
	<dimen name=\"tooltip_body_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"wallpaper_picker_list_item_rect_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"wallpaper_picker_preview_bg_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"widget_preview_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius_17819\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius_18857\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius_18865\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius_19801\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius_19801_fhd\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius_19811\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius_19811_fhd\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius_19821\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius_19855\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius_19855_fhd\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius_19863\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius_8998\">$ROUNDEDSIZE</dimen>
	<dimen name=\"window_corner_radius_fhd\">$ROUNDEDSIZE</dimen>
	<dimen name=\"workspace_bg_round_rect_radius\">$ROUNDEDSIZE</dimen>"

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
$ROUNDEDUISTRING
$ROUNDEDLSTRING
</resources>" > $STORAGE/AIOCOMPILE/RoundedUI/dimens.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.roundedui\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"android\"/>
	<application android:hasCode=\"false\" android:label=\"Android Rounded - $ROUNDEDSIZE\"/>
</manifest>" > $ORUIONE/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
$ROUNDEDUISTRING
</resources>" | tee $ORUIONE/res/values/dimens.xml $ORUITWO/res/values/dimens.xml > /dev/null

echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.systemui.roundedui\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"com.android.systemui\"/>
	<application android:hasCode=\"false\" android:label=\"SUI Rounded - $ROUNDEDSIZE\"/>
</manifest>" > $ORUITWO/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<bool name=\"config_pipEnableRoundCorner\">true</bool>
</resources>" > $ORUITWO/res/values/bools.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\">
	<solid android:color=\"?android:attr/colorPrimary\" />
	<corners android:bottomLeftRadius=\"?android:attr/dialogCornerRadius\" android:topLeftRadius=\"?android:attr/dialogCornerRadius\" android:bottomRightRadius=\"0dp\" android:topRightRadius=\"0dp\" />
</shape>" > $ORUITWO/res/drawable/rounded_bg.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\">
	<solid android:color=\"?android:attr/colorPrimaryDark\" />
	<corners android:bottomLeftRadius=\"?android:attr/dialogCornerRadius\" android:topLeftRadius=\"0dp\" android:bottomRightRadius=\"0dp\" android:topRightRadius=\"0dp\" />
</shape>" > $ORUITWO/res/drawable/rounded_bg_bottom.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\">
	<solid android:color=\"?android:attr/panelColorBackground\" />
	<corners android:bottomLeftRadius=\"?android:attr/dialogCornerRadius\" android:topLeftRadius=\"0dp\" android:bottomRightRadius=\"?android:attr/dialogCornerRadius\" android:topRightRadius=\"0dp\" />
</shape>" > $ORUITWO/res/drawable/rounded_bg_bottom_background.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\">
	<solid android:color=\"?android:attr/colorBackgroundFloating\" />
	<corners android:bottomLeftRadius=\"?android:attr/dialogCornerRadius\" android:topLeftRadius=\"?android:attr/dialogCornerRadius\" android:bottomRightRadius=\"?android:attr/dialogCornerRadius\" android:topRightRadius=\"?android:attr/dialogCornerRadius\" />
</shape>" > $ORUITWO/res/drawable/rounded_bg_full.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<shape xmlns:android=\"http://schemas.android.com/apk/res/android\" android:shape=\"rectangle\">
	<solid android:color=\"?android:attr/colorPrimaryDark\" />
	<corners android:bottomLeftRadius=\"?android:attr/dialogCornerRadius\" android:topLeftRadius=\"0dp\" android:bottomRightRadius=\"?android:attr/dialogCornerRadius\" android:topRightRadius=\"0dp\" />
</shape>" > $ORUITWO/res/drawable/rounded_full_bg_bottom.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<ripple xmlns:android=\"http://schemas.android.com/apk/res/android\"
		android:color=\"?android:attr/colorControlHighlight\">
	<item android:id=\"@android:id/mask\">
		<shape xmlns:android=\"http://schemas.android.com/apk/res/android\">
			<solid android:color=\"#FFFFFFFF\"/>
			<corners android:radius=\"?android:attr/dialogCornerRadius\"/>
		</shape>
	</item>
	<item android:id=\"@android:id/background\">
		<shape android:shape=\"rectangle\">
			<solid android:color=\"?android:attr/colorBackgroundFloating\"/>
			<corners android:radius=\"?android:attr/dialogCornerRadius\"/>
		</shape>
	</item>
</ripple>" > $ORUITWO/res/drawable/rounded_ripple.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<shape
  xmlns:android=\"http://schemas.android.com/apk/res/android\">
	<solid android:color=\"?android:colorPrimaryDark\" />
	<corners android:radius=\"$ROUNDEDSIZE\" />
</shape>" > $ORUITWO/res/drawable/brightness_mirror_background.xml

APKBUILDER "$ORUIONE" "$ORUIONE-$ROUNDEDSIZE.apk"
APKBUILDER "$ORUITWO" "$ORUITWO-$ROUNDEDSIZE.apk"

for LAUNCHERPNAME in "com.pixelated.launcher" "com.motorola.launcher3" "com.android.launcher3" "ch.deletescape.lawnchair.ci" "app.lawnchair" "net.oneplus.launcher" "com.sec.android.app.launcher" "com.google.android.apps.nexuslauncher" "com.asus.launcher"; do
case $LAUNCHERPNAME in
"com.pixelated.launcher") LAUNCHERPATH="$ORSLPD"; LAUNCHERNAME="Pixelated Launcher";;
"com.motorola.launcher3") LAUNCHERPATH="$ORSLM"; LAUNCHERNAME="Mototola Launcher";;
"com.android.launcher3") LAUNCHERPATH="$ORSLL3"; LAUNCHERNAME="Launcher3";;
"ch.deletescape.lawnchair.ci") LAUNCHERPATH="$ORSLLQ"; LAUNCHERNAME="Lawnchair Q";;
"app.lawnchair") LAUNCHERPATH="$ORSLLR"; LAUNCHERNAME="Lawnchair R/S";;
"net.oneplus.launcher") LAUNCHERPATH="$ORSLOP"; LAUNCHERNAME="OnePlus Launcher";;
"com.sec.android.app.launcher") LAUNCHERPATH="$ORSLOUI"; LAUNCHERNAME="OneUI Launcher";;
"com.google.android.apps.nexuslauncher") LAUNCHERPATH="$ORSLP"; LAUNCHERNAME="Pixel Launcher";;
"com.asus.launcher") LAUNCHERPATH="$ORSLA"; LAUNCHERNAME="Asus Launcher";;
esac
echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"$LAUNCHERPNAME.roundedui\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"$LAUNCHERPNAME\"/>
	<application android:hasCode=\"false\" android:label=\"$LAUNCHERNAME Rounded - $ROUNDEDSIZE\"/>
</manifest>" > $LAUNCHERPATH/AndroidManifest.xml

echo -e "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n$ROUNDEDUISTRING\n$ROUNDEDLSTRING\n</resources>" | tee $ORSLL3/res/values/dimens.xml $ORSLLQ/res/values/dimens.xml $ORSLLR/res/values/dimens.xml $ORSLOP/res/values/dimens.xml $ORSLOUI/res/values/dimens.xml $ORSLP/res/values/dimens.xml $ORSLPD/res/values/dimens.xml $ORSLM/res/values/dimens.xml $ORSLA/res/values/dimens.xml > /dev/null
done
APKBUILDER "$ORSLL3" "$ORSLL3-$ROUNDEDSIZE.apk"
APKBUILDER "$ORSLLQ" "$ORSLLQ-$ROUNDEDSIZE.apk"
APKBUILDER "$ORSLLR" "$ORSLLR-$ROUNDEDSIZE.apk"
APKBUILDER "$ORSLOP" "$ORSLOP-$ROUNDEDSIZE.apk"
APKBUILDER "$ORSLOUI" "$ORSLOUI-$ROUNDEDSIZE.apk"
APKBUILDER "$ORSLP" "$ORSLP-$ROUNDEDSIZE.apk"
APKBUILDER "$ORSLPD" "$ORSLPD-$ROUNDEDSIZE.apk"
APKBUILDER "$ORSLM" "$ORSLM-$ROUNDEDSIZE.apk"
APKBUILDER "$ORSLA" "$ORSLA-$ROUNDEDSIZE.apk"
done
rm -f $STORAGE/AIOCOMPILE/RoundedUI/dimens.xml
}

PillsOverlayC() {
UCSA "Pills Overlay Compile" "PillsOverlayCS"
}

PillsOverlayCS() {

for PILLSFATSIZE in "0dip" "1dip" "2dip" "3dip" "4dip"; do
for PILLSWIDTHSIZE in "0dip" "60dip" "120dip" "180dip" "240dip" "300dip" "8dip"; do
OPTO="$STORAGE/AIOCOMPILE/Pills/Pills"
mkdir -p $OPTO/res/values $OPNTO/res/values
echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.systemui.pills\">
	<overlay android:category=\"com.android.internal.navigation_bar_mode\" android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"com.android.systemui\"/>
	<application android:hasCode=\"false\" android:label=\"Pills - $PILLSFATSIZE/$PILLSWIDTHSIZE\"/>
</manifest>" > $OPTO/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<dimen name=\"navigation_handle_radius\">$PILLSFATSIZE</dimen>
	<dimen name=\"navigation_home_handle_width\">$PILLSWIDTHSIZE</dimen>
</resources>" > $OPTO/res/values/dimens.xml

APKBUILDER "$OPTO" "$OPTO-$PILLSFATSIZE-$PILLSWIDTHSIZE.apk"
done
done

for HIDE in "0dip" "16dip"; do
for FRAME in "0dip" "48dip"; do
NBMGO="$STORAGE/AIOCOMPILE/Pills/NavigationBarModeGesturalOverlay"
NBMGOEWB="$STORAGE/AIOCOMPILE/Pills/NavigationBarModeGesturalOverlayExtraWideBack"
NBMGONB="$STORAGE/AIOCOMPILE/Pills/NavigationBarModeGesturalOverlayNarrowBack"
NBMGOWB="$STORAGE/AIOCOMPILE/Pills/NavigationBarModeGesturalOverlayWideBack"
mkdir -p $NBMGO/res/values $NBMGOEWB/res/values $NBMGONB/res/values $NBMGOWB/res/values

for PNNBMGO in "com.android.internal.systemui.navbar.gestural" "com.android.internal.systemui.navbar.gestural_extra_wide_back" "com.android.internal.systemui.navbar.gestural_narrow_back" "com.android.internal.systemui.navbar.gestural_wide_back"; do
case $PNNBMGO in
"com.android.internal.systemui.navbar.gestural") NAME=$NBMGO;;
"com.android.internal.systemui.navbar.gestural_extra_wide_back") NAME=$NBMGOEWB;;
"com.android.internal.systemui.navbar.gestural_narrow_back") NAME=$NBMGONB;;
"com.android.internal.systemui.navbar.gestural_wide_back") NAME=$NBMGOWB;;
esac
echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"$PNNBMGO\">
	<overlay android:category=\"com.android.internal.navigation_bar_mode\" android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"android\"/>
	<application android:hasCode=\"false\" android:label=\"Gestural Navigation Bar\"/>
</manifest>" > $NAME/AndroidManifest.xml
done

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<integer name=\"config_navBarInteractionMode\">2</integer>
	<integer name=\"config_navBarOpacityMode\">2</integer>
</resources>" | tee $NBMGO/res/values/integers.xml $NBMGOEWB/res/values/integers.xml $NBMGONB/res/values/integers.xml $NBMGOWB/res/values/integers.xml > /dev/null

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<bool name=\"config_allowSeamlessRotationDespiteNavBarMoving\">true</bool>
	<bool name=\"config_navBarAlwaysShowOnSideEdgeGesture\">true</bool>
	<bool name=\"config_navBarCanMove\">false</bool>
	<bool name=\"config_navBarNeedsScrim\">false</bool>
	<bool name=\"config_navBarTapThrough\">true</bool>
</resources>" | tee $NBMGO/res/values/bools.xml $NBMGOEWB/res/values/bools.xml $NBMGONB/res/values/bools.xml $NBMGOWB/res/values/bools.xml > /dev/null

for CBGI in "18dip" "24dip" "32dip" "40dip"; do
case $CBGI in
"18dip") OP=$NBMGONB;;
"24dip") OP=$NBMGO;;
"32dip") OP=$NBMGOWB;;
"40dip") OP=$NBMGOEWB;;
esac
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<dimen name=\"config_backGestureInset\">$CBGI</dimen>
	<dimen name=\"navigation_bar_frame_height\">$FRAME</dimen>
	<dimen name=\"navigation_bar_gesture_height\">18dip</dimen>
	<dimen name=\"navigation_bar_height\">$HIDE</dimen>
	<dimen name=\"navigation_bar_height_landscape\">$HIDE</dimen>
	<dimen name=\"navigation_bar_width\">$HIDE</dimen>
</resources>" > $OP/res/values/dimens.xml
APKBUILDER "$OP" "$OP-$HIDE-$FRAME-$CBGI.apk"
done
done
done

for PILLSLIGHTCOLORS in "ff1a73e8" "ffb31818" "ff1ed760" "ffffa842" "ffff8055" "ffa86bd5" "ffff4151" "ff5e97f6" "ff47ae84"; do
for PILLSDARKCOLORS in "ff1a73e8" "ffb31818" "ff1ed760" "ffffa842" "ffff8055" "ffa86bd5" "ffff4151" "ff5e97f6" "ff47ae84"; do
OPCO="$STORAGE/AIOCOMPILE/Pills/PillsColors"
mkdir -p $OPCO/res/values
echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.internal.systemui.pill.colors.mod\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"com.android.systemui\"/>
	<application android:hasCode=\"false\" android:label=\"Pill Colors - $PILLSLIGHTCOLORS-$PILLSDARKCOLORS\"/>
</manifest>" > $OPCO/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<color name=\"navigation_bar_home_handle_light_color\">#$PILLSLIGHTCOLORS</color>
	<color name=\"navigation_bar_home_handle_dark_color\">#$PILLSDARKCOLORS</color>
</resources>" > $OPCO/res/values/colors.xml

APKBUILDER "$OPCO" "$OPCO-$PILLSLIGHTCOLORS-$PILLSDARKCOLORS.apk"
done
done

for PILLSHEIGHTSIZE in "0dip" "1dip" "2dip" "3dip" "4dip" "5dip" "6dip" "7dip" "8dip" "9dip" "10dip"; do
OPHO="$STORAGE/AIOCOMPILE/Pills/PillsHeight"
mkdir -p $OPHO/res/values
echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.systemui.pills.height\">
	<overlay android:category=\"com.android.internal.margin.navigation_bar_mode\" android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"com.android.systemui\"/>
	<application android:hasCode=\"false\" android:label=\"Pills Height - $PILLSHEIGHTSIZE\"/>
</manifest>" > $OPHO/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<dimen name=\"navigation_handle_bottom\">$PILLSHEIGHTSIZE</dimen>
</resources>" > $OPHO/res/values/dimens.xml

APKBUILDER "$OPHO" "$OPHO-$PILLSHEIGHTSIZE.apk"
done
}

SBINNIC() {
UCSA "Status Bar Increase Number Notification Icons Compile" "SBINNICS"
}

SBINNICS() {
ASBINNI="$STORAGE/AIOCOMPILE/SBINNI/AndroidStatusBarIncreaseNumberNotificationIcons"; SUISBINNI="$STORAGE/AIOCOMPILE/SBINNI/StatusBarIncreaseNumberNotificationIcons"
mkdir -p $ASBINNI/res/values $SUISBINNI/res/values

echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.systemui.status.bar.increase.number.notification.icons\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"com.android.systemui\"/>
	<application android:hasCode=\"false\" android:label=\"Status Bar Increase Number Notification Icons\"/>
</manifest>" > $SUISBINNI/AndroidManifest.xml

for f in 1 2 3 4 5 6 7 8 9 10; do
for d in 0dip 2dip 4dip 6dip; do
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<dimen name=\"overflow_dot_radius\">$d</dimen>
</resources>" > $SUISBINNI/res/values/dimens.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<integer name=\"config_maxVisibleNotificationIconsWhenDark\">$f</integer>
	<integer name=\"config_maxVisibleNotificationIcons\">$f</integer>
	<integer name=\"config_maxVisibleStatusIcons\">$f</integer>
</resources>" > $SUISBINNI/res/values/integers.xml

APKBUILDER "$SUISBINNI" "$SUISBINNI-$f-$d.apk"
done
done
}

SHNB() {
UCSA "Show Hide Navigation Bar Compile" "SHNBS"
}

SHNBS() {
ONBHS="$STORAGE/AIOCOMPILE/ShowHideNavigationBar/NavigationBar"
mkdir -p $ONBHS/res/values

echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.show.hide.navigation.bar\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"android\"/>
	<application android:hasCode=\"false\" android:label=\"Show Hide Navigation Bar\"/>
</manifest>" > $ONBHS/AndroidManifest.xml

for SHNBSS in "false" "true"; do
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<bool name=\"config_showNavigationBar\">$SHNBSS</bool>
</resources>" > $ONBHS/res/values/bools.xml
APKBUILDER "$ONBHS" "$ONBHS-$SHNBSS.apk"
done
}

QuickStepC() {
UCSA "Compile QuickStep?" "QuickStepCS"
}

QuickStepCS() {
for QSRP in "com.pixelated.launcher" "com.motorola.launcher3" "com.android.launcher3" "ch.deletescape.lawnchair.ci" "net.oneplus.launcher" "com.sec.android.app.launcher" "com.google.android.apps.nexuslauncher" "com.asus.launcher" "app.lawnchair"; do
OSL="$STORAGE/AIOCOMPILE/QuickStepRecentsProvider/QuickStepRecentsProvider"
mkdir -p $OSL/res/values
echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>
<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.quickstep.recents.overlay\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"android\"/>
	<application android:hasCode=\"false\" android:label=\"QuickStep Recents Provider\"/>
</manifest>" > $OSL/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<bool name=\"config_swipe_up_gesture_setting_available\">true</bool>
	<bool name=\"config_custom_swipe_up_gesture_setting_available\">true</bool>
</resources>" > $OSL/res/values/bools.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<string name=\"config_recentsComponentName\">$QSRP/com.android.quickstep.RecentsActivity</string>
</resources>" > $OSL/res/values/strings.xml

APKBUILDER "$OSL" "$OSL-$QSRP.apk"
done
}

BIPC() {
UCSA "Compile BurnInProtection?" "BIPCS"
}

BIPCS() {
BIPAO="$STORAGE/AIOCOMPILE/BurnInProtection/AndroidBurnInProtection"
BIPAAO="$STORAGE/AIOCOMPILE/BurnInProtection/AndroidBurnInProtectionAlt"
BIPSUIO="$STORAGE/AIOCOMPILE/BurnInProtection/SUIBurnInProtection"
mkdir -p $BIPAO/res/values $BIPAAO/res/values $BIPSUIO/res/values
for SHIFTINTERVAL in 20 40 60; do
for HORIZONTALSWIFT in 4dip 6dip; do
for VERTICALSWIFT in 4dip 6dip; do
for AODHORIZONTALSWIFT in 20dip 30dip 40dip; do
for AODVERTICALSWIFT in 20dip 30dip 40dip; do

echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>
<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.burn.in.protection\">
	<overlay android:category=\"com.android.internal.display_cutout_emulation\" android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"android\"/>
	<application android:hasCode=\"false\" android:label=\"Android Burn In Protection\"/>
</manifest>" > $BIPAO/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>
<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.systemui.burn.in.protection\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"com.android.systemui\"/>
	<application android:hasCode=\"false\" android:label=\"SystemUI Burn In Protection\"/>
</manifest>" > $BIPSUIO/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<bool name=\"config_statusBarBurnInProtection\">true</bool>
	<bool name=\"config_enableBurnInProtection\">true</bool>
</resources>" | tee $BIPAO/res/values/bools.xml $BIPAAO/res/values/bools.xml $BIPSUIO/res/values/bools.xml > /dev/null

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<integer name=\"config_burnInProtectionMaxVerticalOffset\">0</integer>
	<integer name=\"config_burnInProtectionMinHorizontalOffset\">0</integer>
	<integer name=\"config_burnInProtectionMinVerticalOffset\">0</integer>
	<integer name=\"config_shift_interval\">$SHIFTINTERVAL</integer>
	<integer name=\"config_burnInProtectionMaxHorizontalOffset\">0</integer>
	<integer name=\"config_burnInProtectionMaxRadius\">-1</integer>
</resources>" | tee $BIPAO/res/values/integers.xml $BIPAAO/res/values/integers.xml $BIPSUIO/res/values/integers.xml > /dev/null

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<dimen name=\"horizontal_max_swift\">$HORIZONTALSWIFT</dimen>
	<dimen name=\"vertical_max_swift\">$VERTICALSWIFT</dimen>
	<dimen name=\"udfps_burn_in_offset_x\">$HORIZONTALSWIFT</dimen>
	<dimen name=\"udfps_burn_in_offset_y\">$VERTICALSWIFT</dimen>
	<dimen name=\"burn_in_prevention_offset_x\">$AODHORIZONTALSWIFT</dimen>
	<dimen name=\"burn_in_prevention_offset_y\">$AODVERTICALSWIFT</dimen>
	<dimen name=\"burn_in_prevention_offset_y_large_clock\">$AODVERTICALSWIFT</dimen>
	<dimen name=\"default_burn_in_prevention_offset\">$AODVERTICALSWIFT</dimen>
</resources>" | tee $BIPAO/res/values/dimens.xml $BIPSUIO/res/values/dimens.xml > /dev/null

for VACINN in "40dip" "50dip" "60dip" "70dip"; do
case $VACINN in
"40dip") NACINN="a";;
"50dip") NACINN="b";;
"60dip") NACINN="c";;
"70dip") NACINN="d";;
esac
echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.burn.in.protection.$NACINN\">
	<overlay android:category=\"com.android.internal.display_cutout_emulation\" android:priority=\"999\" android:targetPackage=\"android\"/>
	<application android:hasCode=\"false\" android:label=\"Android Burn In Protection $VACINN\"/>
</manifest>" > $BIPAAO/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<dimen name=\"status_bar_height_landscape\">$VACINN</dimen>
	<dimen name=\"horizontal_max_swift\">$HORIZONTALSWIFT</dimen>
	<dimen name=\"vertical_max_swift\">$VERTICALSWIFT</dimen>
	<dimen name=\"udfps_burn_in_offset_x\">$HORIZONTALSWIFT</dimen>
    <dimen name=\"udfps_burn_in_offset_y\">$VERTICALSWIFT</dimen>
	<dimen name=\"burn_in_prevention_offset_x\">$AODHORIZONTALSWIFT</dimen>
	<dimen name=\"burn_in_prevention_offset_y\">$AODVERTICALSWIFT</dimen>
	<dimen name=\"burn_in_prevention_offset_y_large_clock\">$AODVERTICALSWIFT</dimen>
	<dimen name=\"default_burn_in_prevention_offset\">$AODVERTICALSWIFT</dimen>
</resources>" > $BIPAAO/res/values/dimens.xml
APKBUILDER "$BIPAAO" "$BIPAAO-$SHIFTINTERVAL-$HORIZONTALSWIFT-$VERTICALSWIFT-$AODHORIZONTALSWIFT-$AODVERTICALSWIFT-$VACINN.apk"
done
APKBUILDER "$BIPAO" "$BIPAO-$SHIFTINTERVAL-$HORIZONTALSWIFT-$VERTICALSWIFT-$AODHORIZONTALSWIFT-$AODVERTICALSWIFT.apk"
APKBUILDER "$BIPSUIO" "$BIPSUIO-$SHIFTINTERVAL-$HORIZONTALSWIFT-$VERTICALSWIFT-$AODHORIZONTALSWIFT-$AODVERTICALSWIFT.apk"
done
done
done
done
done
}

FaceUnlockServiceC() {
UCSA "Compile FaceUnlockService?" "FaceUnlockServiceCS"
}

FaceUnlockServiceCS() {
OFULS="$STORAGE/AIOCOMPILE/FaceUnlockService/FaceUnlockService"
mkdir -p $OFULS/res/values
for FULS in "org.pixelexperience.faceunlock" "com.crdroid.faceunlock" "com.aospextended.faceunlock"; do
for SFULS in "5" "-1"; do
echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"$FULS.auto_generated_rro_vendor__\">
	<overlay android:isStatic=\"true\" android:priority=\"0\" android:targetPackage=\"$FULS\"/>
	<application android:hasCode=\"false\" android:label=\"IR FaceUnlock Service\"/>
</manifest>" > $OFULS/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<integer name=\"override_front_cam_id\">$SFULS</integer>
</resources>" > $OFULS/res/values/integers.xml
case $SFULS in
"5") SFULS="On";;
"-1") SFULS="Off";;
esac
APKBUILDER "$OFULS" "$OFULS-$FULS-$SFULS.apk"
done
done
}

NSPC() {
UCSA "Notification Side Paddings Compile" "NSPCS"
}

NSPCS() {
NSPCO="$STORAGE/AIOCOMPILE/NotificationSidePaddings/NotificationSidePaddings"
mkdir -p $NSPCO/res/values
for NSPCOSA in 0dip 5dip 10dip 15dip 20dip 25dip 30dip; do
for NSPCOS in 0dip 5dip 10dip 15dip 20dip 25dip 30dip; do
echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.systemui.notification.side.paddings\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"com.android.systemui\"/>
	<application android:hasCode=\"false\" android:label=\"Notification Side Paddings\"/>
</manifest>" > $NSPCO/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<dimen name=\"notification_side_paddings\">$NSPCOS</dimen>
	<dimen name=\"qs_header_image_side_margin\">$NSPCOS</dimen>
	<dimen name=\"qs_notification_padding\">$NSPCOSA</dimen>
</resources>" > $NSPCO/res/values/dimens.xml
APKBUILDER "$NSPCO" "$NSPCO-$NSPCOS-$NSPCOSA.apk"
done
done
}

SBPC() {
UCSA "Status Bar Padding" "SBPCS"
}

SBPCS() {
SBPCSO="$STORAGE/AIOCOMPILE/StatusBarPadding/StatusBarPadding"
mkdir -p $SBPCSO/res/values

echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.systemui.status.bar.padding\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"com.android.systemui\"/>
	<application android:hasCode=\"false\" android:label=\"Status Bar Padding\"/>
</manifest>" > $SBPCSO/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.roundedui\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"android\"/>
	<application android:hasCode=\"false\" android:label=\"Android Rounded - $ROUNDEDSIZE\"/>
</manifest>" > $ORUIONE/AndroidManifest.xml

for SCSBPCO in 0dip 5dip 10dip 15dip 20dip 25dip 30dip 35dip 40dip 45dip 50dip; do
for SCSBPCT in 0dip 5dip 10dip 15dip 20dip 25dip 30dip 35dip 40dip 45dip 50dip; do
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<dimen name=\"status_bar_padding_start\">$SCSBPCO</dimen>
	<dimen name=\"status_bar_padding_end\">$SCSBPCT</dimen>
</resources>" > $SBPCSO/res/values/dimens.xml
APKBUILDER "$SBPCSO" "$SBPCSO-$SCSBPCO-$SCSBPCT.apk"
done
done
}

CSBIS() {
UCSA "Status Bar Icon Space" "CSBISS"
}

CSBISS() {
ASBISDS="$STORAGE/AIOCOMPILE/StatusBarIconSpace/AndroidStatusBarIconSpace" SUISBISDS="$STORAGE/AIOCOMPILE/StatusBarIconSpace/SUIStatusBarIconSpace"
mkdir -p $ASBISDS/res/values $SUISBISDS/res/values

for f in 14dip 15dip 16dip 17dip 18dip 19dip 20dip; do
echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.status.bar.icon.space\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"android\"/>
	<application android:hasCode=\"false\" android:label=\"Android Status Bar Icon Space - $f\"/>
</manifest>" > $ASBISDS/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<dimen name=\"status_bar_icon_size\">$f</dimen>
</resources>" > $ASBISDS/res/values/dimens.xml
APKBUILDER "$ASBISDS" "$ASBISDS-$f.apk"
done

for f in -4dip -3dip -2dip -1dip 0dip 1dip 2dip 3dip 4dip; do
for r in 0dip 1dip 2dip 3dip 4dip; do
echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.systemui.status.bar.icon.space\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"com.android.systemui\"/>
	<application android:hasCode=\"false\" android:label=\"SUI Status Bar Icon Space - $f\"/>
</manifest>" > $SUISBISDS/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<dimen name=\"status_bar_left_clock_end_padding\">2dip</dimen>
	<dimen name=\"signal_cluster_battery_padding\">$r</dimen>
	<dimen name=\"status_bar_clock_starting_padding\">2dip</dimen>
	<dimen name=\"status_bar_system_icon_spacing\">$f</dimen>
</resources>" > $SUISBISDS/res/values/dimens.xml

APKBUILDER "$SUISBISDS" "$SUISBISDS-$f-$r.apk"
done
done
}

COSBCS() {
UCSA "Status Bar Clock Size" "COSBCSS"
}

COSBCSS() {
PCOSBCSS="$STORAGE/AIOCOMPILE/StatusBarClockSize/StatusBarClockSize"
mkdir -p $PCOSBCSS/res/values
for f in 10sp 11sp 12sp 13sp 14sp 15sp 16sp 17sp 18sp 19sp 20sp; do
echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.systemui.status.bar.clock.size\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"com.android.systemui\"/>
	<application android:hasCode=\"false\" android:label=\"Status Bar Clock Size - $f\"/>
</manifest>" > $PCOSBCSS/AndroidManifest.xml

echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<dimen name=\"status_bar_clock_size\">$f</dimen>
</resources>" > $PCOSBCSS/res/values/dimens.xml

APKBUILDER "$PCOSBCSS" "$PCOSBCSS-$f.apk"
done
}

QSCIARC() {
UCSA "QS Count Icon And Rows" "QSCIARCS"
}

QSCIARCS() {
QSCIAR="$STORAGE/AIOCOMPILE/QSCountIconAndRows/QSCountIconAndRows"
mkdir -p $QSCIAR/res/values

echo "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.systemui.qs.count.icon.and.rows\">
	<overlay android:isStatic=\"true\" android:priority=\"999\" android:targetPackage=\"com.android.systemui\"/>
	<application android:hasCode=\"false\" android:label=\"QS Count Icon And Rows\"/>
</manifest>" > $QSCIAR/AndroidManifest.xml

for SUIQSC in $(seq 4 1 10); do
for SUIQSCP in $(seq 4 1 10); do
for SUIQSCL in $(seq 4 1 10); do
for SUIQSRP in $(seq 1 1 3); do
for SUIQSRL in $(seq 1 1 3); do
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<resources>
	<integer name=\"quick_qs_panel_max_columns\">$SUIQSC</integer>
	<integer name=\"config_qs_columns_portrait\">$SUIQSCP</integer>
	<integer name=\"config_qs_columns_landscape\">$SUIQSCL</integer>
	<integer name=\"config_qs_rows_portrait\">$SUIQSRP</integer>
	<integer name=\"config_qs_rows_landscape\">$SUIQSRL</integer>
</resources>" > $QSCIAR/res/values/integers.xml

APKBUILDER "$QSCIAR" "$QSCIAR-$SUIQSC-$SUIQSCP-$SUIQSCL-$SUIQSRP-$SUIQSRL.apk"
done
done
done
done
done
}

} #

{ #AdBlock/Hosts

IPHF() {
if [ $BOOTMODE != true ] && [ -f $IPSE/hosts.bak ]; then
UIP -d "$MSGFI Hosts Files, Restore?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Restore Stock Hosts Files"
BUCKUPER -r "$IPSE/hosts"
UIP "$MSGDRS"
fi
else
UCSA -ent "AdBlock/Hosts" "IPHFS"
fi
}

IPHFS() {
UZTPN "Hosts"
UIP -d "Сhoose Hosts File" "$MSGVU Empty Hosts $VIPDAB" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then
UIP "Installing Hosts Files $IAMM"
if $MAGISK; then
PTMFI "$IDDAB" "AdAwayHosts hosts Hosts LuckyPatcherHosts SystemlessHostsUnified disableadblock systemless-hosts" "$MIPSE"
MMPR -vc "Disable Ad Blocker" "$VIPDAB" "$VCIPDAB" "DriffeX" "Restores stock hosts file for disable Ad Block"
echo -e "127.0.0.1 localhost\n::1 ip6-localhost" > $MODPATH/$MODID$MIPSE/hosts
else
BUCKUPER -s "$IPSE/hosts"
echo -e "127.0.0.1 localhost/n::1 ip6-localhost" > $IPSE/hosts
fi
SET_PERM_RM -msgdi
else
UIP -d "$MSGVU AdAway Hosts (12000+) $VIPVAAH" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then
UIP "Installing Hosts Files $IAMM"
HOSTSFILE="AdAway-hosts"
if $MAGISK; then
PTMFI "$IDVAAH" "AdAwayHosts hosts Hosts LuckyPatcherHosts SystemlessHostsUnified disableadblock systemless-hosts" "$MIPSE"
cp -f $TMPDIR/Hosts/$HOSTSFILE $MODPATH/$MODID$MIPSE/hosts
MMPR -v "AdAway Hosts" "$VIPVAAH" "Hosts From AdAway $MSGFMM"
else
BUCKUPER -s "$IPSE/hosts"; cp -f $TMPDIR/Hosts/$HOSTSFILE $IPSE/hosts
fi
SET_PERM_RM -msgdi
else
UIP -d "$MSGVU Systemless Hosts (90000+) $VIPVSH" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then
UIP "Installing Hosts Files $IAMM"
HOSTSFILE="Systemless-hosts"
if $MAGISK; then
PTMFI "$IDVSH" "AdAwayHosts hosts Hosts LuckyPatcherHosts SystemlessHostsUnified disableadblock systemless-hosts" "$MIPSE"
cp -f $TMPDIR/Hosts/$HOSTSFILE $MODPATH/$MODID$MIPSE/hosts
MMPR -vc "Systemless Hosts - Unified" "$VIPVSH" "$VCIPVSH" "gloeyisk" "An efficient ad blocker, with no user interface"
else
BUCKUPER -s "$IPSE/hosts"; cp -f $TMPDIR/Hosts/$HOSTSFILE $IPSE/hosts
fi
SET_PERM_RM -msgdi
else
UIP -d "$MSGVU Other Hosts Сompilation (190000+) $VIPVOH" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Installing Hosts Files $IAMM"
HOSTSFILE="Other-hosts"
if $MAGISK; then
PTMFI "$IDVOH" "AdAwayHosts hosts Hosts LuckyPatcherHosts SystemlessHostsUnified disableadblock systemless-hosts" "$MIPSE"
cp -f $TMPDIR/$MODID/$HOSTSFILE $MODPATH/$MODID$MIPSE/$MODID
MMPR -v "$MODID" "$VIPVOH" "$MODID Files $MSGFMM"
else
BUCKUPER -s "$IPSE/hosts"; cp -f $TMPDIR/Hosts/$HOSTSFILE $IPSE/hosts
fi
SET_PERM_RM -msgdi
fi
fi
fi
fi
}

} #

{ #Net: GPS/WIFI/TTL/DNS/APAUSBTF

IPGPSP() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/gpspatcher ]; then
UIP -d "$MSGFI GPS Patcher, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
BUCKUPER -r "$GPSCONF"
rm -f $AIOPFMDPH/gpspatcher
UIP "$MSGDRM"
fi
else
if $SNAPSOC && [ $ASDK -ge 27 ] && FINDER "$GPSCONF"; then
UCSA "Install GPS Patcher $VIPGPSP?" "IPGPSPS"
fi
fi
}

IPGPSPS() {
UIP "Installing GPS Patcher $IAMM"
[ -f $IPSE/gps.conf ] && cp -f $MAGISKMP$IPSE/gps.conf $TMPDIR/sgps.conf
[ -f $IPVE/gps.conf ] && cp -f $MAGISKMP$IPVE/gps.conf $TMPDIR/vgps.conf
EQCDFP="$TMPDIR/sgps.conf $TMPDIR/vgps.conf"
QCDFP "XTRA_SERVER_QUERY" "0" "# Whether to use the predefined XTRA servers below (XTRA_SERVER_), or to query them from the modem.\n# Values: 0 - use predefined, 1 - query modem"
QCDFP "XTRA_SERVER_1" "https://xtrapath1.izatcloud.net/xtra3grc.bin" "# The predefined XTRA servers 1 to be used if modem querying (XTRA_SERVER_QUERY) is off.\n# Values: URL"
QCDFP "XTRA_SERVER_2" "https://xtrapath2.izatcloud.net/xtra3grc.bin" "# The predefined XTRA servers 2 to be used if modem querying (XTRA_SERVER_QUERY) is off.\n# Values: URL"
QCDFP "XTRA_SERVER_3" "https://xtrapath3.izatcloud.net/xtra3grc.bin" "# The predefined XTRA servers 3 to be used if modem querying (XTRA_SERVER_QUERY) is off.\n# Values: URL"
QCDFP "XTRA_SERVER_4" "https://ssl.gpsonextra.net/xtra3grc.bin" "# The predefined XTRA servers 4 to be used if modem querying (XTRA_SERVER_QUERY) is off.\n# Values: URL"
QCDFP "XTRA_SERVER_5" "https://ssl.izatcloud.net/xtra3grc.bin" "# The predefined XTRA servers 5 to be used if modem querying (XTRA_SERVER_QUERY) is off.\n# Values: URL"
QCDFP "NTP_SERVER" "pool.ntp.org" "# The NTP servers used for time synchronisation.\n# Values: URL"
QCDFP "NTP_SERVER_1" "0.pool.ntp.org" "The NTP servers used for time synchronisation.\n# Values: URL"
QCDFP "NTP_SERVER_2" "1.pool.ntp.org" "The NTP servers used for time synchronisation.\n# Values: URL"
QCDFP "NTP_SERVER_3" "2.pool.ntp.org" "The NTP servers used for time synchronisation.\n# Values: URL"
QCDFP "NTP_SERVER_4" "3.pool.ntp.org" "The NTP servers used for time synchronisation.\n# Values: URL"
QCDFP "DEBUG_LEVEL" "0" "# Debugging\n# The Android logging level of the GPS service.\n# If commented out, then Android's default logging level will be used.\n# Values: 0 - none, 1 - error, 2 - warning, 3 - info, 4 - debug, 5 - verbose"
QCDFP "XTRA_CA_PATH" "/system/etc/security/cacerts" "# Certificates\n# Path to the CA certificates used to validate the XTRA data.\n# Values: correct path with certificates"
QCDFP "ERR_ESTIMATE" "0" "# Error estimation\n# Whether or not to use error estimation.\n# Values: 0 - don't use, 1 - use"
QCDFP "XTRA_VERSION_CHECK" "3" "#Version check for XTRA\n# The version of the XTRA data used. XTRA v3 supports digital signing and is advised.\n# Values: 0 - disable XTRA, 1 - automatic check, 2 - XTRA v2, 3 - XTRA v3"
QCDFP "XTRA_TEST_ENABLED" "1" "# Whether or not to test for XTRA support.\n# Values: 0 - don't test, 1 - test"
QCDFP "INTERMEDIATE_POS" "1" "Whether or not to report intermediate positions.\n# Values: 0 - don't report, 1 - report"
QCDFP "ACCURACY_THRES" "1" "# Accuracy threshold for intermediate positions.\n# Set to 0 to pass all positions.\n# Values: unknown"
QCDFP "GPS_LOCK" "0" "# Functionalities to switch off when GPS is disabled.\n# Default is to lock nothing for backward compatibility.\n# Bitmask: 0x1 - lock MO GPS, 0x2 - lock NI GPS"
QCDFP "NMEA_PROVIDER" "0" "# NMEA provider\n# Modem Processor - 1, Application Processor - 0)"
QCDFP "SGLTE_TARGET" "1" "# Whether the device supports being a SGLTE target.\n# Mark if it is a SGLTE target.\n# SGLTE - 1, nonSGLTE - 0"
QCDFP "SUPL_VER" "0x30000" "# The version of SUPL to be used.\n# Values: bitmask"
QCDFP "REPORT_POSITION_USE_SUPL_REFLOC" "1" "# Whether to report the reference SUPL location as the current position.\n# Values: 0 - don't report, 1 - report"
QCDFP "SUPL_ES" "1" "# Whether to use SUPL in an emergency situations (eg. calling emergency services).\n# Values: 0 - disable, 1 - enable"
QCDFP "USE_EMERGENCY_PDN_FOR_EMERGENCY_SUPL" "1" "# The PDN to ve used for emergency SUPL.\n# Values: 0 - emergency PDN, 1 - regular SUPL PDN"
QCDFP "SUPL_MODE" "0x2" "# Carrier-set GPS mode for SUPL.\n# If commented, will be taken from config.xml.\n# Bitmask: MSA - 0X2, MSB - 0X1"
QCDFP "SUPL_HOST" "supl.google.com" "# The SUPL server used.\n# Values: URL, IP"
QCDFP "SUPL_PORT" "7275" "# The port to connect to the SUPL server.\n# Values: port"
QCDFP "CAPABILITIES" "0x37" "# GPS features which are supported.\n# default = MSA | MSB | SCHEDULING | ON_DEMAND_TIME | GEOFENCING\n# Bitmask: 0x01 - SCHEDULING, 0x02 - MSB, 0x04 - MSA, 0x10 - ON_DEMAND_TIME, 0x20 - GEOFENCING"
QCDFP "ENABLE_WIPER" "1" "# Whether to use WiFi positioning.\n# Values: 0 - disable, 1 - enable"
QCDFP "AGPS_CERT_WRITABLE_MASK" "0" "# Bitmask of slots that are available for write/install to, where 1s indicate writable, and the default value is 0 where no slots are writable. For example, AGPS_CERT_WRITABLE_MASK of b1000001010 makes 3 slots available and the remaining 7 slots unwritable.\n# Values: bitmask"
QCDFP "AGPS_CONFIG_INJECT" "1" "# Whether to use A-GPS configuration injection: SUPL_VER, SUPL_HOST,SUPL_PORT, MO_SUPL_HOST, MO_SUPL_PORT, C2K_HOST, C2K_PORT, LPP_PROFILE, A_GLONASS_POS_PROTOCOL_SELECT\n# Values: 0 - disable, 1 - enable"
QCDFP "LPP_PROFILE" "3" "# LTE Positioning Profile Settings.\n# Values: 0 - RRLP, 1 - LPP_User_Plane, 2 - LPP_Control_Plane, 3 - LPP_Control_Plane and LPP_User_Plane"
QCDFP "A_GLONASS_POS_PROTOCOL_SELECT" "0x4" "# The A-GLONASS positioning protocol used.\n# Bitmask: 0x1 - RRC CPlane, 0x2 - RRLP UPlane, 0x4 - LLP Uplane"
QCDFP "LPPE_CP_TECHNOLOGY" "0x10" "# The LPPe control plane method.\n# Bitmask: 0x1 - DBH, 0x2 - WLAN AP measurements, 0x4 - SRN AP measurement, 0x8 - Sensor barometer measurement"
QCDFP "LPPE_UP_TECHNOLOGY" "0x10" "# The LPPe user plane method.\n# Bitmask: 0x1 - DBH, 0x2 - WLAN AP measurements, 0x4 - SRN AP measurement, 0x8 - Sensor barometer measurement"
QCDFP "AP_TIMESTAMP_UNCERTAINTY" "10" "# The AP coarse timestamp uncertainty until the GNSS receiver is able to acquire better timing information.\n# Values: 10"
QCDFP "AP_CLOCK_PPM" "100" "# Quality of APPS processor clock (in PPM).\n# Value specified is used for calculation of APPS time stamp uncertainty.\n# Values: PPM"
QCDFP "EXTERNAL_DR_ENABLED" "0" "# Whether to use the QDR configuration.\n# This settings enables QDR Configuration for automotive use case, if enabled then DR_AP_Service needs to be enabled in izat.conf\n# Recommended for automobile use cases. If used, the DR_AP_Service needs to be enabled.\n# Values: 0 - NO QDR (default), 1 - QDR enabled"
QCDFP "DR_SYNC_ENABLED" "0" "# This configuration enables the driver to make use of PPS events generated by DR_SYNC pulse Standard Linux PPS driver needs to be enabled.\n# Values: 0 - DR_SYNC pulse not available (default), 1 - DR_SYNC pulse available"
QCDFP "PPS_DEVICENAME" "/dev/pps0" "# The path to the Linux PPS device.\n# Values: path"
QCDFP "MISSING_PULSE_TIME_DELTA" "900" "# MAX ms difference to detect missing pulse.\n# Specifies time threshold in ms to validate any missing PPS pulses\n# Values: ms"
QCDFP "PROPAGATION_TIME_UNCERTAINTY" "1" "# Whether to use time uncertainty propagation logic in the case of missing PPS pulse.\n# Values: 0 - don't use, 1 - use"
if $MAGISK; then
PTMFI "$IDGPSP" "optmizedgpsconf" "$MIPSVE $MIPSE"
[ -f $TMPDIR/sgps.conf ] && cp -f $TMPDIR/sgps.conf $MODPATH/$MODID$MIPSVE/gps.conf
[ -f $TMPDIR/vgps.conf ] && cp -f $TMPDIR/vgps.conf $MODPATH/$MODID$MIPSE/gps.conf
MMPR -v "GPS Patcher" "$VIPGPSP" "GPS Patcher $MSGFMM"
else
BUCKUPER -s "$GPSCONF"
[ -f $TMPDIR/sgps.conf ] && cp -f $TMPDIR/sgps.conf $IPSE/gps.conf
[ -f $TMPDIR/vgps.conf ] && cp -f $TMPDIR/vgps.conf $IPVE/gps.conf
touch $AIOPFMDPH/gpspatcher
fi
SET_PERM_RM -msgdi
}

IPWIFIP() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/wifipatcher ]; then
UIP -d "$MSGFI Wifi Patcher, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
BUCKUPER -r "$WCNSQCCFGI"
rm -f $AIOPFMDPH/wifipatcher
UIP "$MSGDRM"
fi
else
if $SNAPSOC && [ $ASDK -ge 27 ] && FINDER "$WCNSQCCFGI"; then
UCSA "Install Wifi Patcher $VIPWIFIP?" "IPWIFIPS"
fi
fi
}

IPWIFIPS() {
UIP "Installing Wifi Patcher $IAMM"
if $MAGISK; then
PTMFI "$IDWIFIP" "wifi-bonding" "$MIPSVE/wifi"
MMPR -v "Wifi Patcher" "$VIPWIFIP" "Wifi Patcher $MSGFMM"
XTWIFICONF="$MODPATH/$MODID$MIPSVE/xtwifi.conf"
else
BUCKUPER -s "$WCNSQCCFGI"
touch  $AIOPFMDPH/wifipatcher
XTWIFICONF="$IPSVE/xtwifi.conf"
fi
if [ -f $IPSVE/xtwifi.conf ]; then
cp -f $MAGISKMP$IPSVE/xtwifi.conf $TMPDIR
else
touch $TMPDIR/xtwifi.conf 
fi
EQCDFP="$TMPDIR/xtwifi.conf"
QCDFP "XT_SERVER_ROOT_URL" "https://gtp1.izatcloud.net:443/uds/v2" "# ASN URI v2 to be used by some GTP AP modules that\n# need to run with ASN URI v2 protocol."
QCDFP "XT_SERVER_ROOT_URL_V3" "https://gtp1.izatcloud.net:443/uds/v3" "# ASN URI v3 to be used by GTP AP modules that\n# can support ASN URI v3 protocol."
QCDFP "SIZE_BYTE_TOTAL_CACHE" "5000000" "# size, in bytes, of the cache on device"
# QCDFP "GTP_AP_MODE" "4" "# 3: Wi-Fi APDB injection via Izat SDK. GTP server is not accessed for any GTP requests, instead notification is sent to Izat SDK.\n# WiFi crowdsourcing module is disabled.\n# 4: Wi-Fi APDB injection via Izat SDK. GTP server is not accessed for any GTP requests, instead notification is sent to Izat SDK.\n# WiFi crowdsourcing module is active, also accessed via Izat SDK."
# QCDFP "GTP_AP_NEEDED_BY_MP_CELL" "1" "# 1: MP cell features relies on GTP AP for either download or upload\n# 0: MP cell features does not rely on GTP AP"
QCDFP "DEBUG_GLOBAL_LOG_LEVEL" "0" "# Log verbosity control for most of the GTP WiFi system, including native and Java componenets\n# OFF = 0, ERROR = 1, WARNING = 2, INFO = 3, DEBUG = 4, VERBOSE = 5, ALL = 100"
QCDFP "OEM_ID_IN_REQUEST_TO_SERVER" "\"Qualcomm\"" "# this is used at the server side to distinguish uploads from different maker/model\n# default \"Qualcomm\""
QCDFP "MODEL_ID_IN_REQUEST_TO_SERVER" "\"UNKNOWN\"" "# this is used at the server side to distinguish uploads from different maker/model\n# default \"UNKNOWN\""
QCDFP "LARGE_ACCURACY_THRESHOLD_TO_FILTER_NLP_POSITION" "25000" "# Accuracy Threshold for NLP position. Position exceeds thsi threshold will be filtered out.\n# Default is 25000 meters."
cp -f $TMPDIR/xtwifi.conf $XTWIFICONF
cp -f $MAGISKMP$IPVE/wifi/WCNSS_qcom_cfg.ini $TMPDIR
EQCDFP="$TMPDIR/WCNSS_qcom_cfg.ini"
sed -i "/END/d" $EQCDFP
QCDFP "gChannelBondingMode24GHz" "1" "# Configures Channel Bonding in 24 GHz"
QCDFP "gChannelBondingMode5GHz" "1" "# Configures Channel Bonding in 5 GHz"
QCDFP "gForce1x1Exception" "0" "# 0: Disable force 1x1 on MTK solution AP\n# 1: Enable force 1x1 on MTK solution AP"
QCDFP "gEnablefwlog" "0" "# Firmware log mode\n# Valid values are 0,1,2\n# 0=Disable, 1=WMI, 2=DIAG"
QCDFP "gEnablePacketLog" "0" "# Enable pkt log\n# 1 - enable, 0 - disable"
echo -e "\nEND" >> $EQCDFP
cp -f $TMPDIR/WCNSS_qcom_cfg.ini $MODPATH/$MODID$MIPSVE/wifi
SET_PERM_RM -msgdi
}

IPTTLF() {
if $MAGISK; then
UCSA "Install TTL Fix $VIPTTLF?" "IPTTLFS"
fi
}

IPTTLFS() {
UIP "Installing Time To Live Fix $IAMM"
UZTPN "NFQTTL"
PTMFI -nmp "$IDTTLF"
MMPR -vc "Nfqttl" "$VIPTTLF" "$VCIPTTLF" "Cyborg-one" "Nfqttl is a module fix heder field ttl. github: https://github.com/cyborg-one/nfqttl"
echo "#!/sbin/sh
MODDIR=\${0%/*}
iptables -t mangle -I FORWARD -j DROP
ip6tables -t mangle -I FORWARD -j DROP
sleep 30
iptables -t mangle -D FORWARD -j DROP
ip6tables -t mangle -D FORWARD -j DROP
count=0
while true
do
if ps | grep \$MODDIR/nfqttl | grep -v grep | grep -q \$MODDIR/nfqttl
then
break
fi
if [ \"\$count\" -ge 8 ]
then
exit 1
fi
count=\$((\$count+1))
\$MODDIR/nfqttl -d -t64 -s4
sleep 5
done
iptables -t mangle -N nfqttli
iptables -t mangle -A nfqttli -m mark --mark 0x10000001 -j RETURN
iptables -t mangle -A nfqttli -m mark --mark 0x10000002 -j RETURN
iptables -t mangle -A nfqttli -j NFQUEUE --queue-num 0x1000
iptables -t mangle -N nfqttlo
iptables -t mangle -A nfqttlo -m mark --mark 0x10000001 -j RETURN
iptables -t mangle -A nfqttlo -m mark --mark 0x10000003 -j RETURN
iptables -t mangle -A nfqttlo -j NFQUEUE --queue-num 0x1000
iptables -t mangle -I PREROUTING -j nfqttli
iptables -t mangle -I POSTROUTING -j nfqttlo
ip6tables -t mangle -N nfqttli
ip6tables -t mangle -A nfqttli -m mark --mark 0x10000001 -j RETURN
ip6tables -t mangle -A nfqttli -m mark --mark 0x10000002 -j RETURN
ip6tables -t mangle -A nfqttli -j NFQUEUE --queue-num 0x1000
ip6tables -t mangle -N nfqttlo
ip6tables -t mangle -A nfqttlo -m mark --mark 0x10000001 -j RETURN
ip6tables -t mangle -A nfqttlo -m mark --mark 0x10000003 -j RETURN
ip6tables -t mangle -A nfqttlo -j NFQUEUE --queue-num 0x1000
ip6tables -t mangle -I PREROUTING -j nfqttli
ip6tables -t mangle -I POSTROUTING -j nfqttlo
exit 0" > $MODPATH/$MODID/service.sh
cp -f $TMPDIR/NFQTTL/nfqttl-$arch $MODPATH/$MODID/nfqttl
if $BOOTMODE; then
pkill -9 nfqttl
if $MODPATH/$MODID/nfqttl -d -s4 ; then
UIP "Run nfqttl Success!"
else
UIP "Run nfqttl Fail!"
fi
iptables -t mangle -D PREROUTING -j nfqttli
iptables -t mangle -D POSTROUTING -j nfqttlo
iptables -t mangle -F nfqttli
iptables -t mangle -X nfqttli
iptables -t mangle -F nfqttlo
iptables -t mangle -X nfqttlo
ip6tables -t mangle -D PREROUTING -j nfqttli
ip6tables -t mangle -D POSTROUTING -j nfqttlo
ip6tables -t mangle -F nfqttli
ip6tables -t mangle -X nfqttli
ip6tables -t mangle -F nfqttlo
ip6tables -t mangle -X nfqttlo
if iptables -t mangle -N nfqttli &&\
iptables -t mangle -A nfqttli -m mark --mark 0x10000001 -j RETURN &&\
iptables -t mangle -A nfqttli -m mark --mark 0x10000002 -j RETURN &&\
iptables -t mangle -A nfqttli -j NFQUEUE --queue-num 0x1000 &&\
iptables -t mangle -A PREROUTING -j nfqttli &&\
iptables -t mangle -N nfqttlo &&\
iptables -t mangle -A nfqttlo -m mark --mark 0x10000001 -j RETURN &&\
iptables -t mangle -A nfqttlo -m mark --mark 0x10000003 -j RETURN &&\
iptables -t mangle -A nfqttlo -j NFQUEUE --queue-num 0x1000 &&\
iptables -t mangle -I POSTROUTING -j nfqttlo &&\
ip6tables -t mangle -N nfqttli &&\
ip6tables -t mangle -A nfqttli -m mark --mark 0x10000001 -j RETURN &&\
ip6tables -t mangle -A nfqttli -m mark --mark 0x10000002 -j RETURN &&\
ip6tables -t mangle -A nfqttli -j NFQUEUE --queue-num 0x1000 &&\
ip6tables -t mangle -A PREROUTING -j nfqttli &&\
ip6tables -t mangle -N nfqttlo &&\
ip6tables -t mangle -A nfqttlo -m mark --mark 0x10000001 -j RETURN &&\
ip6tables -t mangle -A nfqttlo -m mark --mark 0x10000003 -j RETURN &&\
ip6tables -t mangle -A nfqttlo -j NFQUEUE --queue-num 0x1000 &&\
ip6tables -t mangle -I POSTROUTING -j nfqttlo ; then
UIP "Set Rule IpTables Success!"
else
UIP "Set Rule IpTables Fail!"
fi
else
SET_PERM_RM -msgdi
fi
}

IPNT() {
UCSA "Install Network Tweak $VIPNT?" "IPNTS"
}

IPNTS() {
NTOGoogle="8.8.8.8"; NTTGoogle="8.8.4.4"; NTOCloudFlare="1.1.1.1"; NTTCloudFlare="1.0.0.1"
UIP -d "Choose DNS Method:" "$MSGVU Google & CloudFlare DNS" "$MSGVD Google || CloudFlare DNS"
if $KEYFUNCTION; then
ONetworkTweak="$NTOGoogle"; TNetworkTweak="$NTOCloudFlare"
DNSSETPROP="setprop 2001:4860:4860::8.8.8.8
setprop 2606:4700:4700::1.1.1.1"
else
UIP -d "Choose DNS Method:" "$MSGVU Google DNS" "$MSGVD CloudFlare DNS"
if $KEYFUNCTION; then
ONetworkTweak="$NTOGoogle"; TNetworkTweak="$NTTGoogle"
DNSSETPROP="setprop 2001:4860:4860::8888
setprop 2001:4860:4860::8844"
else
ONetworkTweak="$NTOCloudFlare"; TNetworkTweak="$NTTCloudFlare"
DNSSETPROP="setprop 2606:4700:4700::1111
setprop 2606:4700:4700::1001"
fi
fi
UIP "Installing Network Tweak $IAMM"
if $MAGISK; then
PTMFI -nm "$IDNT" "$MIPSEID"
echo "#!$MIPSB/sh
MODDIR=\${0%/*}

# Set CF DNS servers address
setprop net.rmnet0.dns1 $ONetworkTweak
setprop net.rmnet0.dns2 $TNetworkTweak
setprop net.rmnet1.dns1 $ONetworkTweak
setprop net.rmnet1.dns2 $TNetworkTweak
setprop net.dns1 $ONetworkTweak
setprop net.dns2 $TNetworkTweak
setprop net.gprs.dns1 $ONetworkTweak
setprop net.gprs.dns2 $TNetworkTweak
setprop net.wcdma.dns1 $ONetworkTweak
setprop net.wcdma.dns2 $TNetworkTweak
setprop net.hspa.dns1 $ONetworkTweak
setprop net.hspa.dns2 $TNetworkTweak
setprop net.hsdpa.dns1 $ONetworkTweak
setprop net.hsdpa.dns2 $TNetworkTweak
setprop net.lte.dns1 $ONetworkTweak
setprop net.lte.dns2 $TNetworkTweak
setprop net.ltea.dns1 $ONetworkTweak
setprop net.ltea.dns2 $TNetworkTweak
setprop net.ppp0.dns1 $ONetworkTweak
setprop net.ppp0.dns2 $TNetworkTweak
setprop net.pdpbr1.dns1 $ONetworkTweak
setprop net.pdpbr1.dns2 $TNetworkTweak
setprop net.wlan0.dns1 $ONetworkTweak
setprop net.wlan0.dns2 $TNetworkTweak
setprop net.eth0.dns1 $ONetworkTweak
setprop net.eth0.dns2 $TNetworkTweak

$DNSSETPROP

# Edit the resolv conf file if it exist
if [ -a $MIPSE/resolv.conf ]; then
mkdir -p \$MODDIR$MIPSE
printf \"nameserver $ONetworkTweak\nnameserver $TNetworkTweak\" >> \$MODDIR$MIPSE/resolv.conf
chmod 644 \$MODDIR$MIPSE/resolv.conf
fi" > $MODPATH/$MODID/post-fs-data.sh
MSSERVICE -s "iptables -t nat -A OUTPUT -p tcp --dport 53 -j DNAT --to-destination $ONetworkTweak:53; iptables -t nat -A OUTPUT -p udp --dport 53 -j DNAT --to-destination $TNetworkTweak:53; iptables -t nat -I OUTPUT -p tcp --dport 53 -j DNAT --to-destination $ONetworkTweak:53; iptables -t nat -I OUTPUT -p udp --dport 53 -j DNAT --to-destination $TNetworkTweak:53"
MMPR -vc "Network Tweak" "$VIPNT" "$VCIPNT" "IMMIX" "Various Network Tweaks which will help to get better internet connectivity and low ping."
echo "#!$MIPSB/sh
echo \"0\" > /proc/sys/net/ipv4/tcp_timestamps
echo \"1\" > /proc/sys/net/ipv4/tcp_tw_reuse
echo \"1\" > /proc/sys/net/ipv4/tcp_sack
echo \"1\" > /proc/sys/net/ipv4/tcp_tw_recycle
echo \"1\" > /proc/sys/net/ipv4/tcp_window_scaling
echo \"5\" > /proc/sys/net/ipv4/tcp_keepalive_probes
echo \"30\" > /proc/sys/net/ipv4/tcp_keepalive_intvl
echo \"30\" > /proc/sys/net/ipv4/tcp_fin_timeout
echo \"404480\" > /proc/sys/net/core/wmem_max
echo \"404480\" > /proc/sys/net/core/rmem_max
echo \"256960\" > /proc/sys/net/core/rmem_default
echo \"256960\" > /proc/sys/net/core/wmem_default
echo \"4096,16384,404480\" > /proc/sys/net/ipv4/tcp_wmem
echo \"4096,87380,404480\" > /proc/sys/net/ipv4/tcp_rmem" > $MODPATH/$MODID/$MIPSEID/netspeed
PINT=$MODPATH/$MODID/system.prop
else
BUCKUPER -bp "$IPSBP"; PINT=$IPSBP
fi
echo "# Internet Tweaks
net.tcp.buffersize.default=4096,87380,256960,4096,16384,256960
net.tcp.buffersize.wifi=4096,87380,256960,4096,16384,256960
net.tcp.buffersize.lte=524288,1048576,2097152,524288,1048576,2097152
net.tcp.buffersize.umts=4096,87380,256960,4096,16384,256960
net.tcp.buffersize.evdo=4096,87380,563200,4096,16384,262144
net.tcp.buffersize.evdo_b=6144,262144,1048576,6144,262144,1048576
net.tcp.buffersize.gprs=4096,87380,256960,4096,16384,256960
net.tcp.buffersize.edge=4096,87380,256960,4096,16384,256960
net.tcp.buffersize.hsdpa=6144,87380,1048576,6144,87380,1048576
net.tcp.buffersize.hspa=6144,87380,524288,6144,16384,262144
net.tcp.buffersize.hspap=4096,87380,1220608,4096,16384,393216
net.tcp.buffersize.hsupa=4096,87380,704512,4096,16384,262144
ro.ril.hsxpa=2
ro.ril.hspa=2
ro.ril.lte=2
ro.ril.ltea=2
ro.ril.hep=0
ro.ril.def.agps.mode=2
ro.ril.enable.3g.prefix=1
ro.ril.enable.4g.prefix=1
ro.ril.htcmaskw1.bitmask=4294967295
ro.ril.htcmaskw1=14449
ro.ril.enable.dtm=1
ro.ril.hspaclass=15
ro.ril.lteclass=15
ro.ril.gprsclass=15
ro.ril.hsupa.category=10
ro.ril.hsdpa.category=30
ro.ril.lte.category=10
ro.ril.ltea.category=30
ro.ril.enable.a51=1
ro.ril.enable.a52=1
ro.ril.enable.a53=1
ro.ril.enable.a54=1
ro.ril.enable.a55=1

# Wireless + TCP Speed & Security Tweaks
net.core.wmem_max=1048576
net.core.rmem_max=1048576
net.core.rmem_default=262144
net.core.wmem_default=262144
net.core.optmem_max=20480
net.unix.max_dgram_qlen=50
net.ipv4.tcp_ecn=0
net.ipv4.route.flush=1
net.ipv4.tcp_rfc1337=1
net.ipv4.ip_no_pmtu_disc=0
net.ipv4.tcp_sack=1
net.ipv4.tcp_fack=1
net.ipv4.tcp_window_scaling=1
net.ipv4.tcp_timestamps=1
net.ipv4.tcp_rmem=4096 39000 187000
net.ipv4.tcp_wmem=4096 39000 187000
net.ipv4.tcp_mem=187000 187000 187000
net.ipv4.tcp_no_metrics_save=1
net.ipv4.tcp_moderate_rcvbuf=1
net.ipv6.tcp_ecn=0
net.ipv6.route.flush=1
net.ipv6.tcp_rfc1337=1
net.ipv6.ip_no_pmtu_disc=0
net.ipv6.tcp_sack=1
net.ipv6.tcp_fack=1
net.ipv6.tcp_window_scaling=1
net.ipv6.tcp_timestamps=1
net.ipv6.tcp_rmem=4096 39000 187000
net.ipv6.tcp_wmem=4096 39000 187000
net.ipv6.tcp_mem=187000 187000 187000
net.ipv6.tcp_no_metrics_save=1
net.ipv6.tcp_moderate_rcvbuf=1
net.tethering.noprovisioning=true

# DNS Tweaks
net.rmnet0.dns1=$ONetworkTweak
net.rmnet0.dns2=$TNetworkTweak
net.rmnet1.dns1=$ONetworkTweak
net.rmnet1.dns2=$TNetworkTweak
net.dns1=$ONetworkTweak
net.dns2=$TNetworkTweak
net.gprs.dns1=$ONetworkTweak
net.gprs.dns2=$TNetworkTweak
net.wcdma.dns1=$ONetworkTweak
net.wcdma.dns2=$TNetworkTweak
net.hspa.dns1=$ONetworkTweak
net.hspa.dns2=$TNetworkTweak
net.hsdpa.dns1=$ONetworkTweak
net.hsdpa.dns2=$TNetworkTweak
net.lte.dns1=$ONetworkTweak
net.lte.dns2=$TNetworkTweak
net.ltea.dns1=$ONetworkTweak
net.ltea.dns2=$TNetworkTweak
net.ppp0.dns1=$ONetworkTweak
net.ppp0.dns2=$TNetworkTweak
net.pdpbr1.dns1=$ONetworkTweak
net.pdpbr1.dns2=$TNetworkTweak
net.wlan0.dns1=$ONetworkTweak
net.wlan0.dns2=$TNetworkTweak
net.eth0.dns1=$ONetworkTweak
net.eth0.dns2=$TNetworkTweak

# Signal Tweaks
persist.cust.tel.eons=1
ro.config.hw_fast_dormancy=1
ro.config.combined_signal=true
telephony.lteOnCdmaDevice=1
ro.telephony.default_network=33,33

# Better call voice quality
ro.ril.enable.amr.wideband=1

# Bluetooth Bitrate
persist.bt.enableAptXHD=true
persist.service.btui.use_aptx=1
persist.vendor.bt.a2dp_offload_cap=sbc-aptx-aptxtws-aptxhd-aptxadaptive-aac-ldac
persist.bluetooth.a2dp_offload.cap=sbc-aptx-aptxtws-aptxhd-aptxadaptive-aac-ldac
persist.vendor.btstack.a2dp_offload_cap=sbc-aptx-aptxtws-aptxhd-aptxadaptive-aac-ldac
persist.vendor.qcom.bluetooth.a2dp_offload_cap=sbc-aptx-aptxtws-aptxhd-aptxadaptive-aac-ldac
persist.bluetooth.disableabsvol=true
persist.vendor.btstack.enable.splita2dp=true
persist.vendor.btstack.aac_frm_ctl.enabled=true
persist.vendor.btstack.enable.twsplus=true
persist.vendor.btstack.connect.peer_earbud=true
persist.vendor.btstack.enable.twsplussho=true
ro.bluetooth.emb_wp_mode=false
ro.bluetooth.wipower=false
ro.bluetooth.remote.autoconnect=true
ro.bluetooth.request.master=true
ro.vendor.bluetooth.wipower=false
persist.vendor.qcom.bluetooth.aac_frm_ctl.enabled=true
persist.vendor.qcom.bluetooth.twsp_state.enabled=false
persist.vendor.qcom.bluetooth.enable.splita2dp=true

# SMS APN Retry
ro.gsm.2nd_data_retry_config=max/_retries=3, 2000, 2000, 2000

# Support For IPV4 and IPV6
persist.telephony.support.ipv6=1
persist.telephony.support.ipv4=1" >> $PINT
SET_PERM_RM -msgdi
}

IPAPAUSBTF() {
if CHECK_DEVICE dipper && [ -d $IPDSNS ]; then
UCSA "Install AP & USB Tethering Fix $VIPAPAUSBTF?" "IPAPAUSBTFS"
fi
}

IPAPAUSBTFS() {
UIP "Installing AP & USB Tethering Fix $IAMM"
if $MAGISK; then
PTMFI -np "$IDAPAUSBTF" "USBTF"
MMPR -v "AP & USB Tethering Fix" "$VIPAPAUSBTF" "Access Point & USB Tethering Fix If Crash SUI Or If Rom Not Boot, Reboot & Etc"
MSSERVICE -s "rm -rf $IPDSNS/*; chmod 400 $IPDSNS"
fi
rm -rf $IPDSNS/*; chmod 400 $IPDSNS
UIP "$MSGDI"
}

} #

{ #Utilities: BB/SELC/CC/MMFR

IPBB() {
if [ $BOOTMODE != true ] && [ -f $SYSTEM/$BUSYBOX/busybox ]; then
UIP -d "$MSGFI Brutal BusyBox In $BUSYBOX, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Remove Symlinking BB Applets"
for applet in $($SYSTEM/$BUSYBOX/busybox --list); do
rm -f $SYSTEM/$BUSYBOX/$applet
done
UIP "Remove BB"
rm -f $SYSTEM/$BUSYBOX/busybox $AIOPFMDPH/busyboxbrutal
UIP "$MSGDRM"
fi
else
UCSA "Install Brutal Busybox $VIPBB?" "IPBBS"
fi
}

IPBBS() {
UIP "Installing Brutal BusyBox $IAMM"
if $MAGISK; then
PTMFI "$IDBB" "busybox-ndk" "$IPPSXBM"
MMPR -vc "Brutal Busybox" "$VIPBB" "$VCIPBB" "FeraVolt" "Brutal busybox with almost all available applets. Compiled with NDK clang + LTO + Ofast + llvm polly. Has all Android NDK patches. ARMv7/ARMv8, x86/x86-64."
FIPBB=$MODPATH/$MODID$IPPSXBM
if [ -d $IPSB ] && [ ! -d $IPSXB ]; then echo -e "#!$MIPSB/sh\nfor sd in $MIPSB/*; do\nrm -f $MODPATH/$MODID/\${sd};\ndone;" > $MODPATH/$MODID/post-fs-data.sh; fi
else
FIPBB=$IPPSXB
touch $AIOPFMDPH/busyboxbrutal
fi
cp -f $BB/busybox-$arch $FIPBB/busybox
UIP "Setting BB Permissions"
chmod 777 $FIPBB/busybox
UIP "Symlinking BB Applets"
$FIPBB/busybox --install -s $FIPBB
SET_PERM_RM -msgdi
UIP "Usage:" "Run \"su -c busybox\" In Terminal On BootMode"
}

IPSELC() {
if $MAGISK; then
UCSA "Install SELinux Changer $VIPSELC?" "IPSELCS"
fi
}

IPSELCS() {
PTMFI -nmp "$IDSELC"
SLSP="Permissive"; SLSE="Enforcing"
SELINUX_CHECKER
UIP "Change SELinux" "SELinux Now: $SELINUXS" "$MSGVU In $SLSP" "$MSGVD In $SLSE"
if $KEYFUNCTION; then SLSC=$SLSP; SLSCN=0; else SLSC=$SLSE; SLSCN=1; fi
MMPR -v "SELinux Changer" "$VIPSELC" "Switch SELinux To $SLSC"
echo -e "setenforce $SLSCN\necho -n $SLSCN > /sys/fs/selinux/enforce" > $MODPATH/$MODID/service.sh
if $BOOTMODE; then
setenforce $SLSCN
echo -n $SLSCN > /sys/fs/selinux/enforce
UIP "SELinux Will Now Be In $SLSC"
fi
SET_PERM_RM -msgdi
}

IPCC() {
if $MAGISK; then
UCSA "Install Cache Cleaner $VIPCC?" "IPCCS"
fi
}

IPCCS() {
UIP "Installing Cache Cleaner $IAMM"
PTMFI -nm "$IDCC" "$MIPSB"
MMPR -v "Cache Cleaner" "$VIPCC" "Cache Cleaner For Remove More Empty/TMP/Trash Folder & Files - Usage: Run \"su -c CC\" In Terminal On BootMode Or Run \"*/CC\" In Recovery Terminal"
$ECHO "#!$MIPSB/sh

Spinner() {
case \${_indicator} in
'|') _indicator='/';;
'/') _indicator='-';;
'-') _indicator='\\\';;
'\\\') _indicator='|';;
*) _indicator='\\\';;
esac
printf \"\r\${@} [\${_indicator}] \"
}

RMLOG() {
clear

KLRML=\"
$IPDM/Stats-data
$IPDS/dropbox
$IPDS/graphicsstats
$IPDS/log-files.xml
$IPDS/procstats
$IPDS/syncmanager-log
$IPDS/usagestats
$IPDSUDE/0/com.android.shell/files/bugreports
/data/anr
/data/log
/data/log_other_mode
/data/tombstones
/dev/log
\"

for kll in \$KLRML; do if [ -d \$kll ]; then echo \"$MSGSD Found Logs In \$kll\"; rm -rf \$kll; elif [ -f \$kll ]; then echo \"$MSGSD Found \$kll\"; rm -f \$kll; fi; done
echo \"$MSGSD Other Logs Not Found\"
}

CC() {
clear

if [ $MIUI != true ] && [ -d $STORAGE/MIUI ]; then
rm -rf $STORAGE/MIUI
fi

RMFILELIST=\"
baidu
camera_events/session.pb
dctp
did
dmesg.log
flamegapps_debug_logs.tar.gz
journal*.tmp
miad
open_gapps_debug.logs.tar.gz
open_gapps_log.txt
ramdump
zlsdk.bin
\"

RMFOLDERLIST=\"
.AICPROMStats
.DataStorage
.UTSystemConfig
.com.android.providers.downloads.ui
.gs_fs0
.temp
.thumbnails
.tmfs
.vdevdir
.xlDownload
Crash_Reports
cache
dalvik-cache
resource-cache
thumbs
package_cache
\"

echo \"$MSGSD Search In /data...\"

MSGCC=true
for FILECLEANER in \$RMFILELIST; do
Spinner && if \$MSGCC; then echo \"$MSGSD Remove Trash Files...\"; MSGCC=false; fi && find /data -depth -type f -name \$FILECLEANER -exec rm -f {} \;
done

MSGCC=true
for FOLDERCLEANER in \$RMFOLDERLIST; do
Spinner && if \$MSGCC; then echo \"$MSGSD Remove Trash/Cache/TMP Folders...\"; MSGCC=false; fi && find /data -depth -type d -name \$FOLDERCLEANER -exec rm -rf {} \;
done

CCSDAS=\$(ls $STORAGE/Android/data)
for CCF in \$CCSDAS; do
if find $IPDD/\$CCF -type d -name \$CCF; then
Spinner
else
Spinner && rm -rf $STORAGE/Android/data/\$CCF
fi
done

RMEF
echo \"$MSGSD Please, Reboot Device!\"
}

RMEF() {
Spinner && echo \"$MSGSD Remove Empty Files...\"
\$FIND $STORAGE/ -depth -type f -not -name .nomedia -empty -exec rm -f {} \;
Spinner && echo \"$MSGSD Remove Empty Folders...\"
case \$1 in
-l) RMEFP=\"$STORAGE/\";;
*) RMEFP=\"/data/\";;
esac
\$FIND \$RMEFP -depth -type d -empty -exec rmdir {} \;
echo \"$MSGSD Remove Done.\"
}

VMDL() {
VMDLTMP=\"\$(find $IPDA -type d -name \"vmdl*.tmp\" -o -name \"com.google.android.trichromelibrary*\")\"
for f in \$VMDLTMP; do
echo \"$MSGSD Found \$f\"
rm -rf \$f
echo \"$MSGSD Remove Done.\"
done
}

RMMB() {
clear
for rmmb in \$(ls /data); do
case \$rmmb in
magisk_backup_*) echo \"$MSGSD Remove \$rmmb\"; rm -rf /data/\$rmmb;;
esac
done
echo \"$MSGSD Other Magisk Backup Not Found\"
}

OPTIONS() {
[ ! -d $MODPATH/$IDBB ] && echo -e \"$MSGSD Brutal Busybox No Found!\n\"
[ -d $MODPATH/$IDBB$MIPSB ] && FIND=$MODPATH/$IDBB$MIPSB/find || FIND=$MODPATH/$IDBB$MIPSXB/find

MMB=false
for rmmb in \$(ls /data); do
case \$rmmb in
magisk_backup_*) MMB=true; break;;
esac
done
clear
echo \"$MSGSD Cache Cleaner $VIPCC\"
local opt=\"\"
while :; do
echo -n \"$MSGDELIMITER
$MSGSD Choose Varian:
$MSGDELIMITER
c) Cache Cleaner
e) Remove Empty Files/Folders (All In /data)
el) Remove Empty Files/Folders (Only In /sdcard)
l) Remove Logs
t) Remove VMDLTMP & Trash TrichromeLibrary\n\"
if \$MMB; then echo -e \"m) Remove All Magisk Backup\"; fi
echo \"r) Reboot Device
q) Quit
$MSGDELIMITER
?)\"
read opt
echo
case \$opt in
c | C) CC;;
e | E) clear; RMEF;;
el | EL) clear; RMEF -l;;
l | L) RMLOG;;
t | T) VMDL;;
m | M) if \$MMB; then RMMB; fi;;
r | R) reboot;;
q | Q) exit 0;;
*) OPTIONS;;
esac
break
done
echo -en \"\n$MSGSD Press <Enter> To Continue, \\\"q <Enter>\\\" To Quit \"
read opt
[ -z \"\$opt\" ] || exit 0
echo
OPTIONS
}
OPTIONS" | tee /data/CC $MODPATH/$MODID$MIPSB/CC > /dev/null
MSSERVICE -u "rm -f /data/CC" "CC"
sed -i "s/#!\/system\/bin\/sh/#!\/sbin\/sh/g" /data/CC
SET_PERM /data/CC 0 0 0700
SET_PERM_RM -msgdi
UIP "Usage:" "Run \"su -c CC\" In Terminal On BootMode" "Or Run \"*/CC\" In Recovery Terminal"
WCANFTP "-bb"
}

IPMMFR() {
if $MAGISK; then
UCSA "Install Magisk Manager For Recovery $VIPMMFR?" "IPMMFRS"
fi
}

IPMMFRS() {
UIP "Magisk Manager For Recovery $IAMM"
PTMFI "$IDMMFR" "mm" "$MIPSB"
$ECHO "#!/sbin/sh

MMODULES() { ls -1 \$MMFRP | grep -v 'lost+found' || echo \"$MSGSD <None>\"; }

MCHANGER() {
local input=\"\" MODULES=\"\"
local FILE=\"\$1\" PRESENT=\"\$2\" ABSENT=\"\$3\"
for MODULES in \$(MMODULES | grep -v \<None\> || :); do
echo -n \"$MSGSD \$MODULES [\"
[ -f \$MMFRP/\$MODULES/\$FILE ] && echo \"\$PRESENT]\" || echo \"\$ABSENT]\"
done
echo -en \"\n$MSGSD Input Pattern(s) (NAME Or GBoardThemes|GBoardT|GBoa):\"
read input
echo
for MODULES in \$(MMODULES | grep -v \<None\> || :); do
if echo \$MODULES | grep -Eq \"\${input:-_noMatch_}\"; then
[ -f \$MMFRP/\$MODULES/\$FILE ] && { rm \$MMFRP/\$MODULES/\$FILE; echo \"\$MODULES [\$ABSENT]\"; } \
|| { touch \$MMFRP/\$MODULES/\$FILE; echo \"\$MODULES [\$PRESENT]\"; }
fi
done
}

MMNT() {
echo -e \"$MSGSD Status Magisk Mount\n\"
[ -f $NVBASE/magisk.img ] && { MCHANGER auto_mount ON OFF || :; } \
|| MCHANGER skip_mount OFF ON
}

MDISABLE() {
echo -e \"$MSGSD Status ON/OFF\n\"
MCHANGER disable OFF ON
}

MREMOVE() {
echo -e \"$MSGSD Mark For Removal ([X])\n\"
MCHANGER remove X \" \"
}

MCORE() {
if [ \$MAGISKVC -le 20414 ]; then
if [ -f /cache/.disable_magisk ] || [ -f /data/cache/.disable_magisk ]; then
rm /data/cache/.disable_magisk /cache/.disable_magisk 2>/dev/null || :
echo \"$MSGSD Magisk Core [OFF]\"
else
touch /data/cache/.disable_magisk /cache/.disable_magisk 2>/dev/null || :
echo \"$MSGSD Magisk Core [ON]\"
fi
else
local MODULES=\"\"
if [ ! -f $NVBASE/magiskcore ]; then
for MODULES in \$(MMODULES | grep -v \<None\> || :); do
touch \$MMFRP/\$MODULES/disable
done
touch $NVBASE/magiskcore
echo \"$MSGSD Magisk Core [ON]\"
else
for MODULES in \$(MMODULES | grep -v \<None\> || :); do
rm -f \$MMFRP/\$MODULES/disable
done
rm -f $NVBASE/magiskcore
echo \"$MSGSD Magisk Core [OFF]\"
fi
fi
}

OPTIONS() {
MMFRP=$MODPATH
if [ -f /cache/.disable_magisk ] || [ -f /data/cache/.disable_magisk ] || [ -f $NVBASE/magiskcore ]; then MCS=\"[ON]\"; else MCS=\"[OFF]\"; fi
if [ -d /data/magisk ] && [ -f /data/magisk/util_functions.sh ]; then
MAGISKVC=\"\$(grep -m1 \"^MAGISK_VER_CODE=\" \"/data/magisk/util_functions.sh\")\"
elif [ -d $NVBASE/magisk ] && [ -f $NVBASE/magisk/util_functions.sh ]; then
MAGISKVC=\"\$(grep -m1 \"^MAGISK_VER_CODE=\" \"$NVBASE/magisk/util_functions.sh\")\"
else
echo -e \"$MSGSD No Magisk Installation Found Or Installed Version Is Not Supported!\n\"
exit 1
fi
clear
echo \"$MSGSD Magisk Manager For Recovery $VIPMMFR\"
local opt=\"\"
while :; do
echo -n \"$MSGDELIMITER
$MSGSD Choose Varian:
$MSGDELIMITER
l) List Installed Modules
c) Magisk Core \$MCS
m) Mount Modules
d) Disable Modules
r) Remove Modules
q) Quit
$MSGDELIMITER
?)\"
read opt
echo
case \$opt in
l | L) echo -e \"$MSGSD Installed Modules\n\"; MMODULES;;
c | C) MCORE;;
m | M) MMNT;;
d | D) MDISABLE;;
r | R) MREMOVE;;
q | Q) exit 0;;
*) OPTIONS;;
esac
break
done
echo -en \"\n$MSGSD Press <Enter> To Continue, \\\"q <Enter>\\\" To Quit \"
read opt
[ -z \"\$opt\" ] || exit 0
echo
OPTIONS
}

OPTIONS"  | tee /data/MMFR $MODPATH/$MODID$MIPSB/MMFR > /dev/null
sed -i "s/#!\/sbin\/sh/#!\/system\/bin\/sh/g" $MODPATH/$MODID$MIPSB/MMFR
SET_PERM /data/MMFR 0 0 0700
MMPR -v "Magisk Manager For Recovery" "$VIPMMFR" "Magisk Manager For Recovery - Usage: Run \"su -c MMFR\" In Terminal On BootMode Or Run \"*/MMFR\" In Recovery Terminal"
MSSERVICE -u "rm -f /data/MMFR" "MMFR"
SET_PERM_RM -msgdi
UIP "Usage:" "Run \"su -c MMFR\" In Terminal On BootMode" "Or Run \"*/MMFR\" In Recovery Terminal"
}

} #

{ #Other: FA/FSFM/UAA/SBU/GASL

IPFPA() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/pfpm ]; then
UIP -d "$MSGFI Fingerprint Actions, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
BUCKUPER -r "$IPSUKL/uinput-fpc.kl $IPSUKL/uinput-gf.kl $IPSUKL/uinput-goodix.kl $IPVUKL/uinput-fpc.kl $IPVUKL/uinput-gf.kl $IPVUKL/uinput-goodix.kl"
UIP "$MSGDRM"
fi
else
if [ -f $IPSUKL/uinput-fpc.kl ] || [ -f $IPSUKL/uinput-gf.kl ] || [ -f $IPSUKL/uinput-goodix.kl ] || [ -f $IPVUKL/uinput-fpc.kl ] || [ -f $IPVUKL/uinput-gf.kl ] || [ -f $IPVUKL/uinput-goodix.kl ]; then
UCSA -ent "Install Fingerprint Actions $VIPFPA?" "IPFPAS"
fi
fi
}

IPFPAS() {
MSGPF=true
for NAMEKEYFUNCTION in "POWER" "WAKEUP" "HOME" "MUSIC" "CAMERA" "EXPLORER" "BACK" "MENU" "APP_SWITCH" "MEDIA_PLAY_PAUSE" "VOICE_ASSIST" "CALENDAR" "CALL" "CONTACTS" "CALCULATOR" "ENDCALL" "HEADSETHOOK" "ENVELOPE"; do
MSGPFA="$MSGNIS"
case $NAMEKEYFUNCTION in
"POWER") APF="Button Power";; "WAKEUP") APF="Action Wake Up";; "HOME") APF="Action Home";; "MUSIC") APF="Launch Music Player";; "CAMERA") APF="Launch Camera";; "EXPLORER") APF="Launch Explorer";; "BACK") APF="Action Back";; "MENU") APF="Action Menu";; "APP_SWITCH") APF="Action App Switch/Recent/Split Screen";; "MEDIA_PLAY_PAUSE") APF="Action Media Play/Pause";; "VOICE_ASSIST") APF="Launch Voice Assistant";; "CALENDAR") APF="Launch Calendar";; "CALL") APF="Launch Dialer";; "CONTACTS") APF="Launch Contacts";; "CALCULATOR") APF="Launch Calculator";; "ENDCALL") APF="End Call";; "HEADSETHOOK") APF="Play/Pause/Open Music Player/End Call";; "ENVELOPE") APF="Launch Gmail/Mail" MSGPFA="$MSGNUS";; *) APF=false;;
esac
if $MSGPF; then
UIP -d "Сhoose Fingerprint Action Variant"
MSGPF=false
else
MSGDELIMITER
fi
UIP "$APF" "$MSGVU Yes" "$MSGVD No $MSGPFA"
if $KEYFUNCTION; then
FINGERVARIANT=true
break
else
FINGERVARIANT=false
fi
done
if $FINGERVARIANT; then
UIP "Installing Fingerprint Actions $IAMM"
mkdir -p $TMPDIR/FingerprintActions$MIPSVUKL $TMPDIR/FingerprintActions$MIPSUKL
cd $TMPDIR/FingerprintActions
FILESUINPUT="
.$MIPSUKL/uinput-fpc.kl
.$MIPSVUKL/uinput-fpc.kl
.$MIPSUKL/uinput-gf.kl
.$MIPSVUKL/uinput-gf.kl
.$MIPSUKL/uinput-goodix.kl
.$MIPSVUKL/uinput-goodix.kl
"
for ADDSTRING in $FILESUINPUT; do echo -e "key  96    $NAMEKEYFUNCTION\nkey  102   $NAMEKEYFUNCTION" >> $ADDSTRING; done
if $MAGISK; then
PTMFI -nmp "$IDFPA"
cp -rf $TMPDIR/$MODID/* $MODPATH/$MODID
MMPR -v "Fingerprint Actions" "$VIPFPA" "This Mod Makes The Fingerprint Scanner Work Like The Power Button - Lock/Unlock The Screen And Reboot Menu With A Long Press/etc."
else
BUCKUPER -s "$IPSUKL/uinput-fpc.kl $IPSUKL/uinput-gf.kl $IPSUKL/uinput-goodix.kl $IPVUKL/uinput-fpc.kl $IPVUKL/uinput-gf.kl $IPVUKL/uinput-goodix.kl"
cp -f $TMPDIR/FingerprintActions$MIPSVUKL/* $IPSUKL; cp -f $TMPDIR/FingerprintActions$MIPSUKL/* $IPVUKL
touch $AIOPFMDPH/pfpm
fi
MOVERPATH
SET_PERM_RM -msgdi
fi
}

IPFSLFM() {
if $MAGISK && [ $BOOTMODE != true ] && $MIUI; then
UCSA "Install Fix Softloop For Miui (If DPI 800+) $VIPFSLFM?" "IPFSLFMS"
fi
}

IPFSLFMS() {
UIP "Installing Fix Softloop For Miui $IAMM"
PTMFI -nmp "$IDFSLFM"
MSSERVICE -s "wm density reset; rm -rf $MODPATH/$MODID"
MMPR -v "Fix Softloop For Miui" "$VIPFSLFM" "Fix Softloop For Miui If DPI=800+"; SET_PERM_RM -msgdi
}

UFAAPP() {
if [ $BOOTMODE != true ]; then
if [ -f $IPDS/packages.xml ] || [ -f $IPDSU/package-restrictions.xml ]; then
UCSA "Unfreeze All Applications (If Frozen)?" "UFAAPPS"
fi
fi
}

UFAAPPS() {
UIP "Defrosting All Applications" "Patching $IPDS/packages.xml"
sed -i 's/enabled="false"/enabled="true"/g' $IPDS/packages.xml
sed -i 's/enabled="2"/enabled="1"/g' $IPDS/packages.xml
sed -i 's/enabled="3"/enabled="1"/g' $IPDS/packages.xml
UIP "Patching $IPDSU/package-restrictions.xml"
sed -i 's/enabled="2"/enabled="1"/g' $IPDSU/package-restrictions.xml
sed -i 's/enabled="3"/enabled="1"/g' $IPDSU/package-restrictions.xml
UIP "Defrosting Done"
}

SBATTERYUSAGE() {
if [ -f /sys/class/power_supply/battery/charge_full_design ] || [ -f /sys/class/power_supply/battery/constant_charge_current_max ]; then
UCSA "Show Battery Usage?" "SBATTERYUSAGES"
fi
}

SBATTERYUSAGES() {
cat /sys/class/power_supply/battery/uevent >> $TMPDIR/battery.stat
BATTERYREMAINING="$(GET_FILE_PROP "$TMPDIR/battery.stat" "POWER_SUPPLY_CHARGE_FULL")"
if [ -f /sys/class/power_supply/battery/charge_full_design ]; then
CURRENTMAXMAH="$(GET_FILE_PROP "$TMPDIR/battery.stat" "POWER_SUPPLY_CHARGE_FULL_DESIGN")"
elif [ -f /sys/class/power_supply/battery/constant_charge_current_max ]; then
CURRENTMAXMAH="$(GET_FILE_PROP "$TMPDIR/battery.stat" "POWER_SUPPLY_CONSTANT_CHARGE_CURRENT_MAX")"
fi
let LOSTMAH=$CURRENTMAXMAH-$BATTERYREMAINING; let LOSTMAHALT=$CURRENTMAXMAH"000"-$BATTERYREMAINING
MAHATTHEMOMENT="$(GET_FILE_PROP "$TMPDIR/battery.stat" "POWER_SUPPLY_CHARGE_COUNTER")"
MAHATTHEMOMENTCAPACITY="$(GET_FILE_PROP "$TMPDIR/battery.stat" "POWER_SUPPLY_CAPACITY")"
BATTERYCHARGECYCLE="$(GET_FILE_PROP "$TMPDIR/battery.stat" "POWER_SUPPLY_CYCLE_COUNT")"
UIP "Battery Remaining: $BATTERYREMAINING" "Lost mAh: $LOSTMAH Or $LOSTMAHALT" "mAh & % At The Moment: $MAHATTHEMOMENT ($MAHATTHEMOMENTCAPACITY%)" "Battery Charge Cycle: $BATTERYCHARGECYCLE"
}

GASL() {
if $BOOTMODE; then
UCSA "Get All Settings List?" "GASLS"
fi
}

GASLS() {
UIP "Getting All Settings List..."
settings list system > /sdcard/SystemList.sh
settings list secure > /sdcard/SecureList.sh
settings list global > /sdcard/GlobalList.sh
UIP "Done"
}

} #

{ #Riru/LSPosed

IPRIRU() {
if $MAGISK && [ "$ASDK" -ge 27 ]; then
UCSA "Install Riru Core $VIPRIRU?" "IPRIRUS"
fi
}

IPRIRUS() {
UIP "Installing Riru Core $IAMM"
UZTPN "Riru"
PTMFI -nm "$IDRIRU" "$MODPATH/$MODID/lib"
cp -f $TMPDIR/Riru/rirud.apk $MODPATH/$MODID
cp -rf $TMPDIR/Riru/system $MODPATH/$MODID
UIP "Copy arm Libraries"
mv $TMPDIR/Riru$MIPSL/libriru.so $MODPATH/$MODID/lib
mv $TMPDIR/Riru$MIPSL/libriruhide.so $MODPATH/$MODID/lib
mv $TMPDIR/Riru$MIPSL/libriruloader.so $MODPATH/$MODID/lib
if [ "$arch" = "arm64" ]; then
UIP "Copy arm64 Libraries"
mkdir -p $MODPATH/$MODID/lib64
mv $TMPDIR/Riru$MIPSL64/libriru.so $MODPATH/$MODID/lib64
mv $TMPDIR/Riru$MIPSL64/libriruhide.so $MODPATH/$MODID/lib64
mv $TMPDIR/Riru$MIPSL64/libriruloader.so $MODPATH/$MODID/lib64
fi
MMPR -vcrapi "Riru" "$VIPRIRU" "$VCIPRIRU" "Rikka, yujincheng08" "Inject into zygote and run codes from \"Riru\" modules in apps or the system server. Support modules which use Riru API v24+" "26" "24"
MSSERVICE -uc "if [ ! -d $NVBASE/riru/modules ]; then rm -rf $NVBASE/riru $SERVICED/RIRU.sh fi" "RIRU"
echo "#!$MIPSB/sh
MODDIR=\${0%/*}
if [ -z \"\$SHELL\" ]; then export SHELL=sh; fi
flock -n \"\$MODDIR/module.prop\" -c \"sed -Ei 's/^description=(\[.*][[:space:]]*)?/description=[ post-fs-data.sh fails to run. Magisk is broken on this device. ] /g' \\\"\$MODDIR/module.prop\\\"\"" > $MODPATH/$MODID/service.sh
echo "ro.dalvik.vm.native.bridge=libriruloader.so" > $MODPATH/$MODID/system.prop
echo "#!$MIPSB/sh
MODDIR=\${0%/*}
if [ -z \"\$SHELL\" ]; then export SHELL=sh; fi
sed -Ei 's/^description=(\[.*][[:space:]]*)?/description=[ app_process fails to run. ] /g' \"\$MODDIR/module.prop\"
export CLASSPATH=\$MODDIR/rirud.apk
cd \$MODDIR
flock \"module.prop\"
unshare -m sh -c \"$MIPSB/app_process -Djava.class.path=rirud.apk $MIPSB --nice-name=rirud riru.Daemon \$(magisk -V) \$(magisk --path) \$(getprop ro.dalvik.vm.native.bridge)&\"" > $MODPATH/$MODID/post-fs-data.sh
echo "RIRU_MIN_COMPATIBLE_API=9
RIRU_API=\"26\"
RIRU_VERSION_CODE=\"$VCIPRIRU\"
RIRU_VERSION_NAME=\"$VIPRIRU\"

abort_for_requires_new_version() {
ui_print \"*********************************************************\"
ui_print \"! This module requires Riru \$1 or above\"
ui_print \"! Please install (upgrade) Riru from Magisk Manager\"
ui_print \"! Or you can download zip from https://github.com/RikkaApps/Riru/releases\"
abort \"*********************************************************\"
}

abort_for_old_module() {
ui_print \"*********************************************************\"
ui_print \"! This module haven't support Riru v22.0+\"
ui_print \"! Please ask the developer of this module to make changes\"
abort \"*********************************************************\"
}

check_riru_version() {
ui_print \"- Riru: \$RIRU_VERSION_NAME (API \$RIRU_API)\"
[ \"\$RIRU_MODULE_API_VERSION\" -lt \"\$RIRU_MIN_COMPATIBLE_API\" ] && abort_for_old_module
[ \"\$RIRU_MODULE_MIN_API_VERSION\" -gt \"\$RIRU_API\" ] && abort_for_requires_new_version \"\$RIRU_MODULE_MIN_RIRU_VERSION_NAME\"
}

enforce_install_from_magisk_app() {
if \$BOOTMODE; then
ui_print \"- Installing from Magisk app\"
else
ui_print \"*********************************************************\"
ui_print \"! Install from recovery is NOT supported\"
ui_print \"! Some recovery has broken implementations, install with such recovery will finally cause Riru or Riru modules not working\"
ui_print \"! Please install from Magisk app\"
abort \"*********************************************************\"
fi
}" > $MODPATH/$MODID/util_functions.sh
if grep "ro.maple.enable=1" "$IPSBP"; then
UIP "Add ro.maple.enable=0"
echo "ro.maple.enable=0" >> $MODPATH/$MODID/system.prop
fi
UIP "Removing Old Files"
rm -rf $NVBASE/riru/bin $NVBASE/riru/native_bridge $NVBASE/riru/api_version.new $NVBASE/riru/version_code.new $NVBASE/riru/version_name.new $NVBASE/riru/enable_hide $NVBASE/riru/api_version $NVBASE/riru/util_functions.sh $IPDM/riru/api_version $IPDM/riru/version_code $IPDM/riru/version_name
SET_PERM_RM -msgdi
}

IPLSPOSEDR() {
if $MAGISK && [ "$ASDK" -ge 27 ]; then
if [ -d $MODPATH/$IDRIRU ] && [ ! -f $MODPATH/$IDRIRU/legacy ]; then
if $ZYGISK; then
UCSA "Install LSPosed Zygisk Or Riru?" "IPLSPOSEDS"
else
UCSA "Install LSPosed $VIPLSPOSEDR?" "IPLSPOSEDS"
fi
else
UCSA "Install LSPosed $VIPLSPOSEDZ?" "IPLSPOSEDS"
fi
fi
}

IPLSPOSEDS() {
if $ZYGISK; then
UIP -d "Install LSPosed Variant" "$MSGVU Zygisk $VIPLSPOSEDZ" "$MSGVD Riru $VIPLSPOSEDR"
if $KEYFUNCTION; then
LSPOSEDR=false; MODID="$IDLSPOSEDZ"
else
LSPOSEDR=true; MODID="$IDLSPOSEDR"
fi
else
LSPOSEDR=true; MODID="$IDLSPOSEDR"
fi
UIP "Installing LSPosed $IAMM"
UZTPN "LSPosed"
REMOVER -mm "$IDLSPOSEDR $IDLSPOSEDZ riru_edxposed"
UIP "Copy arm Libraries"
if $LSPOSEDR; then
mkdir -p $MODPATH/$MODID/riru $NVBASE/lspd/config
cp -rf $TMPDIR/LSPosed/$MODID$MIPSL $MODPATH/$MODID/riru
touch $MODPATH/$MODID/riru/lib/libriru_lspd
LSPFLAVOR=riru
else
mkdir -p $MODPATH/$MODID/zygisk
cp -f $TMPDIR/LSPosed/$MODID$MIPSL/libdaemon.so $MODPATH/$MODID
cp -f $TMPDIR/LSPosed/$MODID$MIPSL/liblspd.so $MODPATH/$MODID/zygisk/armeabi-v7a.so
LSPFLAVOR=zygisk
fi
cp -rf $TMPDIR/LSPosed/$MODID$MIPSFW $MODPATH/$MODID
if [ "$arch" = "arm64" ]; then
UIP "Copy arm64 Libraries"
if $LSPOSEDR; then
cp -rf $TMPDIR/LSPosed/$MODID$MIPSL64 $MODPATH/$MODID/riru
mv $MODPATH/$MODID/riru/lib64/libdaemon.so $MODPATH/$MODID
touch $MODPATH/$MODID/riru/lib64/libriru_lspd
rm -f $MODPATH/$MODID/riru/lib/libdaemon.so
else
cp -f $TMPDIR/LSPosed/$MODID$MIPSL64/libdaemon.so $MODPATH/$MODID
cp -f $TMPDIR/LSPosed/$MODID$MIPSL64/liblspd.so $MODPATH/$MODID/zygisk/arm64-v8a.so
fi
fi
if [ "$ASDK" -ge 29 ]; then
UIP "Copy dex2oat Binaries"
cp -rf $TMPDIR/LSPosed/bin $MODPATH/$MODID
UIP "Patching Binaries"
DEV_PATH=$(tr -dc 'a-f0-9' < /dev/urandom | head -c 16)
while [ -d "/dev/$DEV_PATH" ]; do
DEV_PATH=$(tr -dc 'a-f0-9' < /dev/urandom | head -c 16)
done
sed -i "s/placeholder_\/dev\/................/placeholder_\/dev\/$DEV_PATH/" "$MODPATH/$MODID/libdaemon.so"
sed -i "s/placeholder_\/dev\/................/placeholder_\/dev\/$DEV_PATH/" "$MODPATH/$MODID/bin/dex2oat32"
sed -i "s/placeholder_\/dev\/................/placeholder_\/dev\/$DEV_PATH/" "$MODPATH/$MODID/bin/dex2oat64"
else
echo "dalvik.vm.dex2oat-flags=--inline-max-code-units=0" > $MODPATH/$MODID/system.prop
fi
touch $MODPATH/$MODID/update
echo "#!$MIPSB/sh

dir=\${0%/*}
magiskPath=\$(magisk --path)
tmpLspdApk=\"$IPDLTMP/daemon.apk\"
debug=false

if [ -r \$tmpLspdApk ]; then
java_options=\"-Djava.class.path=\$tmpLspdApk\"
java_options=\"\$java_options -Dlsp.library.path=/data/local/tmp\"
debug=\"true\"
else
java_options=\"-Djava.class.path=\$dir/daemon.apk\"
java_options=\"\$java_options -Dlsp.library.path=\$dir\"
fi

if [ \$debug = \"true\" ]; then
os_version=\$(getprop ro.build.version.sdk)
if [ \"\$os_version\" -eq \"27\" ]; then
java_options=\"\$java_options -Xrunjdwp:transport=dt_android_adb,suspend=n,server=y -Xcompiler-option --debuggable\"
elif [ \"\$os_version\" -eq \"28\" ]; then
java_options=\"\$java_options -XjdwpProvider:adbconnection -XjdwpOptions:suspend=n,server=y -Xcompiler-option --debuggable\"
else
java_options=\"\$java_options -XjdwpProvider:adbconnection -XjdwpOptions:suspend=n,server=y\"
fi
fi

mount tmpfs -t tmpfs /data/resource-cache

if [ ! -S \"/dev/socket/zygote\" ]; then
timeout 0.5 inotifyd - /dev/socket:near | while read -r line; do
\$debug && log -p v -t \"LSPosed\" \"inotify: \$line\"
if [ -S \"/dev/socket/zygote\" ]; then
\$debug && log -p v -t \"LSPosed\" \"zygote started\"
touch /dev/socket&
exit
fi
done
fi
\$debug && log -p d -t \"LSPosed\" \"start $LSPFLAVOR daemon \$*\"

if [ \"\$(getprop ro.build.version.sdk)\" -ge 29 ]; then
umount /apex/com.android.art/bin/dex2oat*
mkdir \"\$magiskPath/dex2oat\"
cp -p /apex/com.android.art/bin/dex2oat32 \"\$magiskPath/dex2oat/dex2oat32\"
cp -p /apex/com.android.art/bin/dex2oat64 \"\$magiskPath/dex2oat/dex2oat64\"
chcon -R u:object_r:magisk_file:s0 \"\$magiskPath/dex2oat\"
mount --bind \"\$magiskPath/dex2oat/dex2oat32\" /apex/com.android.art/bin/dex2oat32
mount --bind \"\$magiskPath/dex2oat/dex2oat64\" /apex/com.android.art/bin/dex2oat64
fi

exec $MIPSB/app_process \$java_options $MIPSB --nice-name=lspd org.lsposed.lspd.Main \"\$@\" >/dev/null 2>&1" > $MODPATH/$MODID/daemon
if $LSPOSEDR; then
MMPR -vcuj "Riru - LSPosed" "$VIPLSPOSEDR" "$VCIPLSPOSEDR" "LSPosed Developers" "Another enhanced implementation of Xposed Framework. Supports Android 8.1 ~ 13 DP2. Requires Riru 25.0.1 or above installed." "https://lsposed.github.io/LSPosed/release/riru.json"
echo "allow system_server system_server process execmem" > $MODPATH/$MODID/sepolicy.rule
else
MMPR -vcuj "Zygisk - LSPosed" "$VIPLSPOSEDZ" "$VCIPLSPOSEDZ" "Another enhanced implementation of Xposed Framework. Supports Android 8.1 ~ 13 DP2. Requires Magisk 24.0+ and Zygisk enabled." "https://lsposed.github.io/LSPosed/release/zygisk.json"
fi
echo "#!$MIPSB/sh
MODDIR=\${0%/*}
MODNAME=\${MODDIR##*/}
MAGISK_PATH=\$(magisk --path)
rm -f \"$IPDLTMP/daemon.apk\"
cd \"\$MODDIR\"
if [ \"\$(getprop ro.build.version.sdk)\" -ge 29 ]; then
mount --bind \"\$MAGISK_PATH/.magisk/modules/\$MODNAME/bin/dex2oat32\" \"/apex/com.android.art/bin/dex2oat32\"
mount --bind \"\$MAGISK_PATH/.magisk/modules/\$MODNAME/bin/dex2oat64\" \"/apex/com.android.art/bin/dex2oat64\"
fi
unshare -m sh -c \"\$MODDIR/daemon &\"" > $MODPATH/$MODID/post-fs-data.sh
echo "#!$MIPSB/sh
MODDIR=\${0%/*}
cd \"\$MODDIR\"
unshare -m \"\$MODDIR/daemon\" --from-service \"\$@\"&" > $MODPATH/$MODID/service.sh
MSSERVICE -uc "if [ ! -d \"$MODPATH/riru_lsposed\" ] && [ ! -d \"$MODPATH/zygisk_lsposed\" ]; then rm -rf $NVBASE/lspd $NVBASE/riru/modules/lspd $SERVICED/LSP.sh; elif [ -f \"$MODPATH/riru_lsposed/remove\" ] || [ -f \"$MODPATH/zygisk_lsposed/remove\" ]; then rm -rf $NVBASE/lspd $NVBASE/riru/modules/lspd $SERVICED/LSP.sh; fi" "LSP"
UIP "Installing LSPosed Manager"
if $BOOTMODE; then
pm install -r $TMPDIR/LSPosed/manager.apk >/dev/null
else
mkdir -p $MODPATH/$MODID$MIPSA/LSPosedManager
cp -f $TMPDIR/LSPosed/manager.apk $MODPATH/$MODID$MIPSA/LSPosedManager/LSPosedManager.apk
fi
mkdir -p $NVBASE/lspd
cp -f $TMPDIR/LSPosed/manager.apk $NVBASE/lspd
cp -f $TMPDIR/LSPosed/daemon.apk $MODPATH/$MODID
SET_PERM_RM -msgdi
}

} #

{ #Tweaks: FGS/BP/LED/UGMSD/USGP/VS

IPFGS() {
if $MAGISK; then
if $BOOTMODE; then
MSGUC="Run Or Install Force Google Sync?"
else
MSGUC="Install Force Google Sync $VIPFGS?"
fi
UCSA "$MSGUC" "IPFGSS"
fi
}

IPFGSS() {
if $BOOTMODE; then
UIP "Force Google Sync In Progress, Wait..."
bmgr run >/dev/null
UIP "Running Incremental Backup For Requested Packages"
bmgr backupnow appdata >/dev/null
UIP "Running Incremental Backup For All Packages"
bmgr backupnow --all >/dev/null
UIP "Force Google Sync Done" "Check The Settings, After A Couple Of Minutes Everything Is In Sync"
UIP -d "Install Force Google Sync $VIPFGS?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
fi
if $KEYFUNCTION || [ $BOOTMODE != true ]; then
UIP "Installing Force Google Sync After Boot $IAMM"
PTMFI -nmp "$IDFGS"
MSSERVICE -s "bmgr run; bmgr backupnow appdata; bmgr backupnow --all"
MMPR -v "Force Google Sync" "$VIPFGS" "Force Google Sync After Boot $MSGFMM"; SET_PERM_RM -msgdi
fi
}

IPFEG() {
if $MAGISK && [ $MIUI != true ] && [ "$ASDK" -ge 29 ]; then
UCSA "Install Force Gestures $VIPFEG?" "IPFEGS"
fi
}

IPFEGS() {
UIP "Installing Force Gestures $IAMM"
PTMFI -nmp "$IDFEG"
if SP_CHECKER "$XMLSECURE" "navigation_mode"; then
UIP -d "Choose Method:" "$MSGVU CMD Overlay" "$MSGVD Settings Put"
if $KEYFUNCTION; then
MSSERVICE -s "cmd overlay enable com.android.internal.systemui.navbar.gestural"
else
MSSERVICE -s "$SPSECURE navigation_mode 2"
fi
else
MSSERVICE -s "cmd overlay enable com.android.internal.systemui.navbar.gestural"
fi
MMPR -v "Force Gestures" "$VIPFEG" "Force Gestures - If The Gesture Selection Item Disappeared After Installing Other Launchers Or Forced Hiding Gestures $MSGFMM"; SET_PERM_RM -msgdi
}

IPHAP() {
if $MAGISK && [ "$ASDK" -ge 30 ]; then
UCSA "Install Enabling Hidden Api Policy $VIPHAP?" "IPHAPS"
fi
}

IPHAPS() {
UIP "Installing Enabling Hidden Api Policy $IAMM"
PTMFI -nmp "$IDHAP"
if $BOOTMODE; then UIP "Enabling Hidden Api Policy Right Now"; $SPGLOBAL hidden_api_policy 1; $SPGLOBAL hidden_api_policy_pre_p_apps 1; $SPGLOBAL hidden_api_policy_p_apps 1; fi
MSSERVICE -s "$SPGLOBAL hidden_api_policy 1; $SPGLOBAL hidden_api_policy_pre_p_apps 1; $SPGLOBAL hidden_api_policy_p_apps 1"
MMPR -v "Enabling Hidden Api Policy" "$VIPHAP" "Enabling Hidden Api Policy $MSGFMM"; SET_PERM_RM -msgdi
}

IPAFUS() {
if $MAGISK && [ "$ASDK" -le 28 ] && SP_CHECKER "$XMLSECURE" "install_non_market_apps"; then UCSA "Force Install Apps From Unknown Sources $VIPAFUS?" "IPAFUSS"; fi
}

IPAFUSS() {
UIP "Installing AIOAFUS $IAMM"
if $BOOTMODE; then UIP "Enabling Install Apps From Unknown Sources Right Now"; $SPSECURE install_non_market_apps 1; fi
PTMFI -nmp "$IDAFUS"
MSSERVICE -s "$SPSECURE install_non_market_apps 1"
MMPR -v "Allow Installation Of Apps From Unknown Sources" "$VIPAFUS" "Force Allow Installation Of Apps From Unknown Sources $MSGFMM"; SET_PERM_RM -msgdi
}

IPBPT() {
UCSA "Install Build Prop Tweaks $VIPBPT?" "IPBPTS"
}

IPBPTS() {
UIP "Installing Build Prop Tweaks $IAMM"
if $MAGISK; then
PTMFI -nmp "$IDBPT"
MMPR -v "Build Prop Tweaks" "$VIPBPT" "Build Prop Tweaks $MSGFMM"; IPBPT="$MODPATH/$MODID/system.prop"
else
BUCKUPER -bp "$IPSBP"; IPBPT="$IPSBP"
fi

echo "# Enable 4K in YouTube
sys.display-size=3840x2160

# Animation AOD & LS Fix
debug.force_no_blanking=true

# Disable Safemedia
audio.safemedia.bypass=true" >> $IPBPT
SET_PERM_RM -msgdi
}

IPKL() {
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/killlogger ]; then
UIP -d "$MSGFI Kill Logger, Remove?" "$MSGVU Yes $MSGEEFTC" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Restore Stock Files"
RSKL=$(ls $AIOPFMDPH/KL)
cp -f $AIOPFMDPH/KL/* $IPSB
for f in $RSKL; do chmod 777 $IPSB/$f; done
rm -rf $AIOPFMDPH/KL $AIOPFMDPH/killlogger
UIP "$MSGDRS"
fi
else
UCSA "Install Kill Logger $VIPKL?" "IPKLS"
fi
}

IPKLS() {
UIP "Installing Kill Logger $IAMM"
if $MAGISK; then
PTMFI -nm "$IDKL" "$MIPSB"
MMPR -vc "KillLogger" "$VIPKL" "$VCIPKL" "mrfrost475" "This module deletes the files responsible for the dump, logcat, and bug reports also prescribes logcat ban in build.prop"
KLIPP=$MODPATH/$MODID/system.prop
if SP_CHECKER "$XMLGLOBAL" "activity_starts_logging_enabled"; then MSSERVICE -s "$SPGLOBAL activity_starts_logging_enabled 0"; fi
else
BUCKUPER -bp "$IPSBP"; KLIPP=$IPSBP; touch $AIOPFMDPH/killlogger
fi
if [ -f $IPSB/logcat ]; then UIP -d "You Need logcat?" "$MSGVU Yes, Need" "$MSGVD No Need"; if $KEYFUNCTION; then :; else if $MAGISK; then echo '' > $MODPATH/$MODID$MIPSB/logcat; else mkdir -p $AIOPFMDPH/KL; cp -f $IPSB/logcat $AIOPFMDPH/KL; echo '' > $IPSB/logcat; fi; fi; fi
if [ -f $IPSB/dumpsys ]; then UIP -d "You Need dumpsys?" "$MSGVU Yes, Need" "$MSGVD No Need"; if $KEYFUNCTION; then :; else if $MAGISK; then echo '' > $MODPATH/$MODID$MIPSB/dumpsys; else mkdir -p $AIOPFMDPH/KL; cp -f $IPSB/dumpsys $AIOPFMDPH/KL; echo '' > $IPSB/dumpsys; fi; fi; fi
UIP "Create Daemons Dummy Files In $MIPSB"
KLDL="
DumpSystemInfo
atrace
bugreport
bugreportz
cnss_diag
cplog
crash_dump32
crash_dump64
debuggerd
debuggerd64
dexdump
diag_socket_log
dmesg
dmlog
dumpstate
emdlogger1
emdlogger3
log
logd
loggerlauncher
logwrapper
lpdump
lpdumpd
memorydumper
mobile_log_d
outdump
subsystem_ramdump
tcpdump
wpdiagd
xlog
"
for kll in $KLDL; do if $MAGISK; then touch $MODPATH/$MODID$MIPSB/$kll; else if [ -f $IPSB/$kll ]; then mkdir -p $AIOPFMDPH/KL; cp -f $IPSB/$kll $AIOPFMDPH/KL; echo '' > $IPSB/$kll; fi; fi; done
UIP "Clearing All Logs"
KLRML="
$IPDM/Stats-data
$IPDS/dropbox
$IPDS/graphicsstats
$IPDS/log-files.xml
$IPDS/procstats
$IPDS/syncmanager-log
$IPDS/usagestats
$IPDSUDE/0/com.android.shell/files/bugreports
$STORAGE/MIUI/debug_log
/data/anr
/data/log
/data/log_other_mode
/data/tombstones
/dev/log
"
for kll in $KLRML; do if [ -d $kll ]; then UIP "Found Logs In $kll"; rm -rf $kll; elif [ -f $kll ]; then UIP "Found $kll"; rm -f $kll; fi; done
if $MIUI; then touch $STORAGE/MIUI/debug_log; fi
echo -e "\n# KillLogger
av.debug.disable.pers.cache=true
dalvik.vm.checkjni=false
dalvik.vm.verify-bytecode=false
debug_test=0
debugtool.anrhistory=0
libc.debug.malloc=0
log.cffdump=0
log.cffdump_no_memzero=0
log.cffdump_with_ifh=0
log.dumpx=0
log.pm4=0
log.pm4mem=0
log.primitives=0
log.resolves=0
log.sc_dev=0
log.shaders=0
log.tag.EDEN=OFF
log.tag.NPUC=OFF
log_ao=0
log_audiodecnode=0
log_audiooutput=0
log_basedecnode=0
log_datapath=0
log_fps_interval=0
log_frame_info=0
log_metadatadriver=0
log_mp4dectime=0
log_mp4parsernode=0
log_omxmp4=0
log_outputnode=0
log_outputnodeinputport=0
log_playerdriver=0
log_playerengine=0
log_posttime=0
log_profile=0
log_surfaceoutput=0
log_videodecnode=0
logcat.live=disable
net.ipv4.tcp_no_metrics_save=1
persist.android.strictmode=0
persist.vendor.ssr.enable_ramdumps=0
profiler.debugmonitor=false
profiler.force_disable_err_rpt=1
profiler.force_disable_ulog=1
profiler.hung.dumpdobugreport=false
profiler.launch=false
ro.config.ksm.support=false
ro.config.nocheckin=1
ro.kernel.android.checkjni=0
ro.kernel.checkjni=0
ro.logd.size=OFF" >> $KLIPP
if $MAGISK; then MSSERVICE -s "echo \"0\" > /sys/block/mmcblk0/queue/iostats; echo \"0\" > /sys/block/mmcblk1/queue/iostats"; fi
SET_PERM_RM -msgdi
}

IPFMSAAS() {
UCSA "Install Force 4X MSAA Switcher $VIPFMSAAS?" "IPFMSAASS"
}

IPFMSAASS() {
UIP "Installing Force 4X MSAA Switcher $IAMM"
if $MAGISK; then
PTMFI -nmp "$IDFMSAAS"
echo "debug.egl.force_msaa=true" > $MODPATH/$MODID/system.prop
MMPR -v "Force MSAA Switcher" "$VIPFMSAAS" "Force 4X MSAA Switcher $MSGFMM"
else
BUCKUPER -bp "$IPSBP"
echo -e "\n# Force 4X MSAA Switcher\ndebug.egl.force_msaa=true" >> $IPSBP
fi
SET_PERM_RM -msgdi
}

IPFDHWO() {
if $MAGISK; then
UCSA "Install Force Disable HW Overlays $VIPFDHWO?" "IPFDHWOS"
fi
}

IPFDHWOS() {
UIP "Installing Force Disable HW Overlays $IAMM"
PTMFI -nmp "$IDFDHWO"
MSSERVICE -s "service call SurfaceFlinger 1008 i32 1"
MMPR -v "Force Disable HW Overlays" "$VIPFDHWO" "Force Disable HW Overlays $MSGFMM"; SET_PERM_RM -msgdi
}

IPFDEVADB() {
if $MAGISK && SP_CHECKER "$XMLGLOBAL" "development_settings_enabled adb_enabled adb_wifi_enabled verifier_verify_adb_installs"; then UCSA "Install Force Activate DEV & ADB $VIPFDEVADB?" "IPFDEVADBS"; fi
}

IPFDEVADBS() {
UIP "Installing Force Activate DEV & ADB $IAMM"
PTMFI -nmp "$IDFDEVADB"
MSSERVICE -s "$SPGLOBAL development_settings_enabled 1; $SPGLOBAL adb_enabled 1; $SPGLOBAL adb_wifi_enabled 1; $SPGLOBAL verifier_verify_adb_installs 0"
echo "persist.security.adbinput=1
persist.security.adbinstall=1
persist.service.adb.enable=1
persist.service.debuggable=1
persist.sys.usb.config=mtp,adb
ro.debuggable=1
service.adb.tcp.port=5555" > $MODPATH/$MODID/system.prop
MMPR -v "Force DEV & ADB" "$VIPFDEVADB" "Force Activate DEV & ADB $MSGFMM"; SET_PERM_RM -msgdi
}

IPFMTP() {
if $MAGISK && $LEGACYMODE && [ "$ASDK" -le 30 ]; then
UCSA "Install Force Activate MTP $VIPFMTP?" "IPFMTPS"
fi
}

IPFMTPS() {
UIP "Installing Force Activate MTP $IAMM"
mkdir -p $IPDSDE/0
PTMFI -nmp "$IDFMTP"
MSSERVICE -s "echo \"<?xml version='1.0' encoding='utf-8' standalone='yes' ?>\n<map>\n    <string name=\\\"usb-screen-unlocked-config-0\\\">mtp</string>\n</map>\" > $IPDSDE/0/UsbDeviceManagerPrefs.xml"
MMPR -v "Force MTP" "$VIPFMTP" "Force Activate MTP $MSGFMM"
echo "<?xml version='1.0' encoding='utf-8' standalone='yes' ?>
<map>
    <string name=\"usb-screen-unlocked-config-0\">mtp</string>
</map>" > $IPDSDE/0/UsbDeviceManagerPrefs.xml
SET_PERM_RM -msgdi
}

IPSOOOFUIRC() {
if CHECK_DEVICE dipper || CHECK_DEVICE beryllium; then
if [ $BOOTMODE != true ] && [ -f $AIOPFMDPH/sooofuirc ]; then UIP -d "$MSGFI On/Off Face UnLock IR Camera, Remove?" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
UIP "Removing..."
BUCKUPER -r "$IPPVO/FaceUnlockService__auto_generated_rro_vendor.apk"
rm -f $AIOPFMDPH/sooofuirc
UIP "$MSGDRM"
fi
else
if [ $MIUI != true ] && [ -f $IPSEP/com.motorola.faceunlock.xml ] || [ -f $IPSEP/privapp-permissions-org.pixelexperience.faceunlock.xml ] || [ -f $IPSEP/privapp-permissions-com.crdroid.faceunlock.xml ] || [ -f $IPSEP/privapp-permissions-com.aospextended.faceunlock.xml ]; then
UCSA "Switch On/Off Face UnLock IR Camera $VIPSOOOFUIRC?" "IPSOOOFUIRCS"
fi
fi
fi
}

IPSOOOFUIRCS() {
UZTPN "SOOOFUIRC"
UIP -d "Switching" "$MSGVU On" "$MSGVD Off"
if [ -f $IPSEP/com.motorola.faceunlock.xml ]; then if $KEYFUNCTION; then SWITCHIR=5; MSGSWITCHIR=On; else SWITCHIR=; MSGSWITCHIR=Off; fi; else if $KEYFUNCTION; then MSGSWITCHIR=On; else MSGSWITCHIR=Off; fi; fi
UIP "Installing Switch $MSGSWITCHIR Face UnLock IR Camera $IAMM"
if $MAGISK; then
PTMFI -nmp "$IDSOOOFUIRC"
if [ -f $IPSEP/com.motorola.faceunlock.xml ]; then
echo -e "vendor.camera.aux.packagelist=org.codeaurora.snapcam,com.android.camera,org.lineageos.snap,com.motorola.faceunlock\nro.face.moto_unlock_service.cam_id=$SWITCHIR" > $MODPATH/$MODID/system.prop
else
mkdir -p $MODPATH/$MODID/$MIPPVO
if [ -f $IPSEP/privapp-permissions-org.pixelexperience.faceunlock.xml ]; then
echo "vendor.camera.aux.packagelist=org.codeaurora.snapcam,com.android.camera,org.lineageos.snap,org.pixelexperience.faceunlock" > $MODPATH/$MODID/system.prop
cp -f $TMPDIR/SOOOFUIRC/FaceUnlockService-org.pixelexperience.faceunlock-$MSGSWITCHIR.apk $MODPATH/$MODID/$MIPPVO/FaceUnlockService__auto_generated_rro_vendor.apk
elif [ -f $IPSEP/privapp-permissions-com.crdroid.faceunlock.xml ]; then
echo "vendor.camera.aux.packagelist=org.codeaurora.snapcam,com.android.camera,org.lineageos.snap,com.crdroid.faceunlock" > $MODPATH/$MODID/system.prop
cp -f $TMPDIR/SOOOFUIRC/FaceUnlockService-com.crdroid.faceunlock-$MSGSWITCHIR.apk $MODPATH/$MODID/$MIPPVO/FaceUnlockService__auto_generated_rro_vendor.apk
else
echo "vendor.camera.aux.packagelist=org.codeaurora.snapcam,com.android.camera,org.lineageos.snap,com.aospextended.faceunlock" > $MODPATH/$MODID/system.prop
cp -f $TMPDIR/SOOOFUIRC/FaceUnlockService-com.aospextended.faceunlock-$MSGSWITCHIR.apk $MODPATH/$MODID/$MIPPVO/FaceUnlockService__auto_generated_rro_vendor.apk
fi
fi
MMPR -v "Switch $MSGSWITCHIR Face UnLock IR Camera" "$VIPSOOOFUIRC" "Switch $MSGSWITCHIR Face UnLock IR Camera $MSGFMM"
else
BUCKUPER -bp "$IPSBP"
if [ -f $IPSEP/com.motorola.faceunlock.xml ]; then
echo -e "vendor.camera.aux.packagelist=org.codeaurora.snapcam,com.android.camera,org.lineageos.snap,com.motorola.faceunlock\nro.face.moto_unlock_service.cam_id=$SWITCHIR" >> $IPSBP
else
touch $AIOPFMDPH/sooofuirc
BUCKUPER -s "$IPPVO/FaceUnlockService__auto_generated_rro_vendor.apk"
if [ -f $IPSEP/privapp-permissions-org.pixelexperience.faceunlock.xml ]; then
cp -f $TMPDIR/SOOOFUIRC/FaceUnlockService-org.pixelexperience.faceunlock-$MSGSWITCHIR.apk $IPPVO/FaceUnlockService__auto_generated_rro_vendor.apk
echo "vendor.camera.aux.packagelist=org.codeaurora.snapcam,com.android.camera,org.lineageos.snap,org.pixelexperience.faceunlock" >> $IPSBP
elif [ -f $IPSEP/privapp-permissions-com.crdroid.faceunlock.xml ]; then
echo "vendor.camera.aux.packagelist=org.codeaurora.snapcam,com.android.camera,org.lineageos.snap,com.crdroid.faceunlock" >> $IPSBP
cp -f $TMPDIR/SOOOFUIRC/FaceUnlockService-com.crdroid.faceunlock-$MSGSWITCHIR.apk $IPPVO/FaceUnlockService__auto_generated_rro_vendor.apk
else
echo "vendor.camera.aux.packagelist=org.codeaurora.snapcam,com.android.camera,org.lineageos.snap,com.aospextended.faceunlock" >> $IPSBP
cp -f $TMPDIR/SOOOFUIRC/FaceUnlockService-com.aospextended.faceunlock-$MSGSWITCHIR.apk $IPPVO/FaceUnlockService__auto_generated_rro_vendor.apk
fi
fi
fi
SET_PERM_RM -msgdi
}

IPFDM() {
if [ "$ASDK" -ge 27 ]; then
UCSA "Install Force Dark Theme $VIPFDM?" "IPFDMS"
fi
}

IPFDMS() {
UIP "Installing Force Dark Mode $IAMM"
if $MAGISK; then
PTMFI -nmp "$IDFDM"
echo "debug.hwui.force_dark=true" > $MODPATH/$MODID/system.prop
MMPR -v "Force Dark Mode" "$VIPFDM" "Force Dark Mode $MSGFMM"
else
BUCKUPER -bp "$IPSBP"
echo -e "\n# Force Dark\ndebug.hwui.force_dark=true" >> $IPSBP
fi
SET_PERM_RM -msgdi
}

IPFDPP() {
if $MAGISK && SP_CHECKER "$XMLGLOBAL" "upload_apk_enable package_verifier_enable package_verifier_user_consent verifier_verify_adb_installs"; then UCSA "Install Force Disabling Play Protect $VIPFDPP?" "IPFDPPS"; fi
}

IPFDPPS() {
UIP "Installing Force Disabling Play Protect $IAMM"
PTMFI -nmp "$IDFDPP"
MSSERVICE -s "$SPGLOBAL upload_apk_enable 0; $SPGLOBAL package_verifier_enable 0; $SPGLOBAL package_verifier_user_consent -1; $SPGLOBAL verifier_verify_adb_installs 0"
MMPR -v "Force Disabling Play Protect" "$VIPFDPP" "Force Disabling Play Protect $MSGFMM"; SET_PERM_RM -msgdi
}

IPFI() {
if $MAGISK && $LEGACYMODE; then UCSA "Install Force Idle $VIPFI?" "IPFIS"; fi
}

IPFIS() {
UIP "Installing Force Idle $IAMM"
PTMFI -nmp "$IDFI"
if [ -f $MODPATH/killlogger$MIPSB/dumpsys ]; then UIP "Found dumpsys In KillLogger - Removing dumpsys"; fi
if SP_CHECKER "$XMLGLOBAL" "aggressive_idle_enabled aggressive_standby_enabled"; then MSSERVICE -s "$SPGLOBAL aggressive_idle_enabled 1; $SPGLOBAL aggressive_standby_enabled 1; dumpsys deviceidle force-idle; dumpsys deviceidle enable"; else MSSERVICE -s "dumpsys deviceidle force-idle; dumpsys deviceidle enable"; fi
MMPR -v "Force Idle" "$VIPFI" "Force Idle $MSGFMM"; SET_PERM_RM -msgdi
}

IPCLEDLO() {
if $MAGISK; then
if [ -f $LEDMBRED ] || [ -f $LEDMBGREEN ] || [ -f $LEDMBBLUE ] || [ -f $LEDMBWHITE ]; then
UCSA "Install Charging LED Light Off $VIPCLEDLO?" "IPCLEDLOS"
fi
fi
}

IPCLEDLOS() {
UIP "Installing Charging LED Light Off $IAMM"
PTMFI -np "$IDCLEDLO" "ChargingLedLightOff"
echo "$LEDLSC; while true; do echo \"0\" | tee $LEDMBRED $LEDMBGREEN $LEDMBBLUE $LEDMBWHITE; done" > $MODPATH/$MODID/service.sh
MMPR -v "Charging Led Light Off" "$VIPCLEDLO" "Charging Led Light Off $MSGFMM"; SET_PERM_RM -msgdi
}

IPLEDLA() {
if $MAGISK; then
if [ -f $LEDRED ] || [ -f $LEDGREEN ] || [ -f $LEDBLUE ] || [ -f $LEDWHITE ] || [ -f $FLASHLIGHT ] || [ -f $BUTTONBACKLIGHT ]; then
UCSA -ent "Install LED Light Animation $VIPLEDLA?" "IPLEDLAS"
fi
fi
}

IPLEDLAS() {

LEDSTANDART="if [ -f $LEDWHITE ]; then
ANIMSPEED=\"0 1 2 3 4 5 6 7 8 9 10 9 8 7 6 5 4 3 2 1 0\"
ANIMCOUNT=\"\$(seq 10)\"
elif [ -f $LEDRED ] || [ -f $LEDGREEN ] || [ -f $LEDBLUE ]; then
ANIMSPEED=\"0 1 0 0 1 0 0 1 0\"
ANIMCOUNT=\"\$(seq 10)\"
fi"

mkdir -p $TMPDIR/LEDLightAnimation
echo "$LEDLSC
$LEDSTANDART
for STARTADDSTRING in \$ANIMCOUNT; do
for ADDSTRING in \$ANIMSPEED; do
if [ -f $LEDWHITE ]; then
sleep 0.1
echo \$ADDSTRING | tee $LEDWHITE $FLASHLIGHT $BUTTONBACKLIGHT
fi
if [ -f $LEDRED ]; then
sleep 0.1
echo \$ADDSTRING | tee $LEDRED $FLASHLIGHT $BUTTONBACKLIGHT
fi
if [ -f $LEDGREEN ]; then
sleep 0.1
echo \$ADDSTRING | tee $LEDGREEN $FLASHLIGHT $BUTTONBACKLIGHT
fi
if [ -f $LEDBLUE ]; then
sleep 0.1
echo \$ADDSTRING | tee $LEDBLUE $FLASHLIGHT $BUTTONBACKLIGHT
fi
done
done" > $TMPDIR/LEDLightAnimation/serviceledflashbutton.sh

echo "$LEDLSC
$LEDSTANDART
for STARTADDSTRING in \$ANIMCOUNT; do
for ADDSTRING in \$ANIMSPEED; do
if [ -f $LEDWHITE ]; then
sleep 0.1
echo \$ADDSTRING | tee $LEDWHITE $FLASHLIGHT
fi
if [ -f $LEDRED ]; then
sleep 0.1
echo \$ADDSTRING | tee $LEDRED $FLASHLIGHT
fi
if [ -f $LEDGREEN ]; then
sleep 0.1
echo \$ADDSTRING | tee $LEDGREEN $FLASHLIGHT
fi
if [ -f $LEDBLUE ]; then
sleep 0.1
echo \$ADDSTRING | tee $LEDBLUE $FLASHLIGHT
fi
done
done" > $TMPDIR/LEDLightAnimation/serviceledflash.sh

echo "$LEDLSC
$LEDSTANDART
for STARTADDSTRING in \$ANIMCOUNT; do
for ADDSTRING in \$ANIMSPEED; do
if [ -f $LEDWHITE ]; then
sleep 0.1
echo \$ADDSTRING | tee $LEDWHITE $BUTTONBACKLIGHT
fi
if [ -f $LEDRED ]; then
sleep 0.1
echo \$ADDSTRING | tee $LEDRED $BUTTONBACKLIGHT
fi
if [ -f $LEDGREEN ]; then
sleep 0.1
echo \$ADDSTRING | tee $LEDGREEN $BUTTONBACKLIGHT
fi
if [ -f $LEDBLUE ]; then
sleep 0.1
echo \$ADDSTRING | tee $LEDBLUE $BUTTONBACKLIGHT
fi
done
done" > $TMPDIR/LEDLightAnimation/serviceledbutton.sh

echo "$LEDLSC
$LEDSTANDART
for STARTADDSTRING in \$ANIMCOUNT; do
for ADDSTRING in \$ANIMSPEED; do
if [ -f $LEDWHITE ]; then
sleep 0.1
echo \$ADDSTRING > $LEDWHITE
elif [ -f $LEDRED ] || [ -f $LEDGREEN ] || [ -f $LEDBLUE ]; then
sleep 0.1
echo \$ADDSTRING > $LEDRED
sleep 0.1
echo \$ADDSTRING > $LEDGREEN
sleep 0.1
echo \$ADDSTRING > $LEDBLUE
fi
done
done" > $TMPDIR/LEDLightAnimation/serviceled.sh

echo "$LEDLSC
ANIMSPEED=\"0 1 0 0 0 1 0 0 0 1 0\"
ANIMCOUNT=\"\$(seq 10)\"
for STARTADDSTRING in \$ANIMCOUNT; do
for ADDSTRING in \$ANIMSPEED; do
sleep 0.1
echo \$ADDSTRING | tee $FLASHLIGHT $BUTTONBACKLIGHT
done
done" > $TMPDIR/LEDLightAnimation/serviceflashbutton.sh

echo "$LEDLSC
ANIMSPEED=\"0 1 0 0 0 1 0 0 0 1 0\"
ANIMCOUNT=\"\$(seq 10)\"
for STARTADDSTRING in \$ANIMCOUNT; do
for ADDSTRING in \$ANIMSPEED; do
sleep 0.1
echo \$ADDSTRING > $FLASHLIGHT
done
done" > $TMPDIR/LEDLightAnimation/serviceflash.sh

echo "$LEDLSC
ANIMSPEED=\"0 1 0 0 1 0 0 1 0\"
ANIMCOUNT=\"\$(seq 10)\"
for STARTADDSTRING in \$ANIMCOUNT; do
for ADDSTRING in \$ANIMSPEED; do
sleep 0.1
echo \$ADDSTRING > $BUTTONBACKLIGHT
done
done" > $TMPDIR/LEDLightAnimation/servicebutton.sh

UIP -d "Test Or Flash?" "$MSGVU Test" "$MSGVD Flash"
if $KEYFUNCTION; then TEST=true; else TEST=false; fi
PTMFI -nmp "$IDLEDLA"
UIP -d "Сhoose Animation Variant"
if [ -f $LEDRED ] || [ -f $LEDGREEN ] || [ -f $LEDBLUE ] || [ -f $LEDWHITE ]; then
UIP "(Only LED)" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then
ANIMATIONVARIANT=true
else
ANIMATIONVARIANT=false
fi
else
ANIMATIONVARIANT=false
fi
if $ANIMATIONVARIANT; then
if $TEST; then
UIP "Please Wait..."
sh $TMPDIR/$MODID/serviceled.sh
UIP -d "Flash Or Next?" "$MSGVU Flash" "$MSGVD Next"
if $KEYFUNCTION; then
NEXTTEST=true
else
NEXTTEST=false
ANIMATIONVARIANT=false
fi
if $NEXTTEST; then
cp -f $TMPDIR/$MODID/serviceled.sh $MODPATH/$MODID/service.sh
fi
else
cp -f $TMPDIR/$MODID/serviceled.sh $MODPATH/$MODID/service.sh
fi
fi

if [ $ANIMATIONVARIANT != true ]; then
if [ -f $FLASHLIGHT ]; then
UIP -d "(Only Flash)" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then
ANIMATIONVARIANT=true
else
ANIMATIONVARIANT=false
fi
else
ANIMATIONVARIANT=false
fi
if $ANIMATIONVARIANT; then
if $TEST; then
UIP "Please Wait..."
sh $TMPDIR/$MODID/serviceflash.sh
UIP -d "Flash Or Next?" "$MSGVU Flash" "$MSGVD Next"
if $KEYFUNCTION; then
NEXTTEST=true
else
NEXTTEST=false
ANIMATIONVARIANT=false
fi
if $NEXTTEST; then
cp -f $TMPDIR/$MODID/serviceflash.sh $MODPATH/$MODID/service.sh
fi
else
cp -f $TMPDIR/$MODID/serviceflash.sh $MODPATH/$MODID/service.sh
fi
fi
fi

if [ $ANIMATIONVARIANT != true ]; then
if [ -f $BUTTONBACKLIGHT ]; then
UIP -d "(Only Buttons)" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then
ANIMATIONVARIANT=true
else
ANIMATIONVARIANT=false
fi
else
ANIMATIONVARIANT=false
fi
if $ANIMATIONVARIANT; then
if $TEST; then
UIP "Please Wait..."
sh $TMPDIR/$MODID/servicebutton.sh
UIP -d "Flash Or Next?" "$MSGVU Flash" "$MSGVD Next"
if $KEYFUNCTION; then
NEXTTEST=true
else
NEXTTEST=false
ANIMATIONVARIANT=false
fi
if $NEXTTEST; then
cp -f $TMPDIR/$MODID/servicebutton.sh $MODPATH/$MODID/service.sh
fi
else
cp -f $TMPDIR/$MODID/servicebutton.sh $MODPATH/$MODID/service.sh
fi
fi
fi

if [ $ANIMATIONVARIANT != true ]; then
if [ -f $FLASHLIGHT ]; then
if [ -f $LEDRED ] || [ -f $LEDGREEN ] || [ -f $LEDBLUE ] || [ -f $LEDWHITE ]; then
UIP -d "(LED And Flash)" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then
ANIMATIONVARIANT=true
else
ANIMATIONVARIANT=false
fi
else
ANIMATIONVARIANT=false
fi
if $ANIMATIONVARIANT; then
if $TEST; then
UIP "Please Wait..."
sh $TMPDIR/$MODID/serviceledflash.sh
UIP -d "Flash Or Next?" "$MSGVU Flash" "$MSGVD Next"
if $KEYFUNCTION; then
NEXTTEST=true
else
NEXTTEST=false
ANIMATIONVARIANT=false
fi
if $NEXTTEST; then
cp -f $TMPDIR/$MODID/serviceledflash.sh $MODPATH/$MODID/service.sh
fi
else
cp -f $TMPDIR/$MODID/serviceledflash.sh $MODPATH/$MODID/service.sh
fi
fi
fi
fi

if [ $ANIMATIONVARIANT != true ]; then
if [ -f $FLASHLIGHT ] && [ -f $BUTTONBACKLIGHT ]; then
UIP -d "(Flash And Buttons)" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then
ANIMATIONVARIANT=true
else
ANIMATIONVARIANT=false
fi
else
ANIMATIONVARIANT=false
fi
if $ANIMATIONVARIANT; then
if $TEST; then
UIP "Please Wait..."
sh $TMPDIR/$MODID/serviceflashbutton.sh
UIP -d "Flash Or Next?" "$MSGVU Flash" "$MSGVD Next"
if $KEYFUNCTION; then
NEXTTEST=true
else
NEXTTEST=false
ANIMATIONVARIANT=false
fi
if $NEXTTEST; then
cp -f $TMPDIR/$MODID/serviceflashbutton.sh $MODPATH/$MODID/service.sh
fi
else
cp -f $TMPDIR/$MODID/serviceflashbutton.sh $MODPATH/$MODID/service.sh
fi
fi
fi

if [ $ANIMATIONVARIANT != true ]; then
if [ -f $BUTTONBACKLIGHT ]; then
if [ -f $LEDRED ] || [ -f $LEDGREEN ] || [ -f $LEDBLUE ] || [ -f $LEDWHITE ]; then
UIP -d "(LED And Buttons)" "$MSGVU Yes" "$MSGVD No $MSGNIS"
if $KEYFUNCTION; then
ANIMATIONVARIANT=true
else
ANIMATIONVARIANT=false
fi
else
ANIMATIONVARIANT=false
fi
if $ANIMATIONVARIANT; then
if $TEST; then
UIP "Please Wait..."
sh $TMPDIR/$MODID/serviceledbutton.sh
UIP -d "Flash Or Next?" "$MSGVU Flash" "$MSGVD Next"
if $KEYFUNCTION; then
NEXTTEST=true
else
NEXTTEST=false
ANIMATIONVARIANT=false
fi
if $NEXTTEST; then
cp -f $TMPDIR/$MODID/serviceledbutton.sh $MODPATH/$MODID/service.sh
fi
else
cp -f $TMPDIR/$MODID/serviceledbutton.sh $MODPATH/$MODID/service.sh
fi
fi
fi
fi

if [ $ANIMATIONVARIANT != true ]; then
if [ -f $FLASHLIGHT ] && [ -f $BUTTONBACKLIGHT ]; then
if [ -f $LEDRED ] || [ -f $LEDGREEN ] || [ -f $LEDBLUE ] || [ -f $LEDWHITE ]; then
UIP -d "(LED, Flash, Buttons)" "$MSGVU Yes" "$MSGVD No $MSGNUS"
if $KEYFUNCTION; then
ANIMATIONVARIANT=true
else
ANIMATIONVARIANT=false
fi
else
ANIMATIONVARIANT=false
fi
if $ANIMATIONVARIANT; then
if $TEST; then
UIP "Please Wait..."
sh $TMPDIR/$MODID/serviceledflashbutton.sh
UIP -d "Flash Or Next?" "$MSGVU Flash" "$MSGVD Next"
if $KEYFUNCTION; then
NEXTTEST=true
else
NEXTTEST=false
ANIMATIONVARIANT=false
fi
if $NEXTTEST; then
cp -f $TMPDIR/$MODID/serviceledflashbutton.sh $MODPATH/$MODID/service.sh
fi
else
cp -f $TMPDIR/$MODID/serviceledflashbutton.sh $MODPATH/$MODID/service.sh
fi
fi
fi
fi

if $ANIMATIONVARIANT; then
UIP "Installing LED Light Animation Mod $IAMM"
MMPR -v "LED Light Animation" "$VIPLEDLA" "LED Light Animation At Boot Time $MSGFMM"
SET_PERM_RM -msgdi
else
REMOVER -mm "$MODID"
fi
}

IPUGMSD() {
if $MAGISK && $FINDGAPPS && [ $ASDK -ge 23 ]; then
UCSA "Install Universal GMS Doze $VIPUGMSD?" "IPUGMSDS"
fi
}

IPUGMSDS() {
UIP "Installing Universal GMS Doze $IAMM"
PTMFI "$IDUGMSD" "universal-gms-doze" "$IPPSXBM"
UIP "Patching Needed Files..."
GMS=$(xml=$(find $SYSTEM $VENDOR -name "*.xml"); for i in $xml; do if grep -q 'allow-in-power-save package="com.google.android.gms"' $MAGISKMP$i 2>/dev/null; then echo "$i"; fi; done)
IMS=$(xml=$(find $SYSTEM $VENDOR -name "*.xml"); for i in $xml; do if grep -q 'allow-in-power-save package="com.google.android.ims"' $MAGISKMP$i 2>/dev/null; then echo "$i"; fi; done)
PST=$(xml=$(find $SYSTEM $VENDOR -name "*.xml"); for i in $xml; do if grep -q 'allow-in-power-save package="com.google.android.apps.safetyhub"' $MAGISKMP$i 2>/dev/null; then echo "$i"; fi; done)
TRB=$(xml=$(find $SYSTEM $VENDOR -name "*.xml"); for i in $xml; do if grep -q 'allow-in-power-save package="com.google.android.apps.turbo"' $MAGISKMP$i 2>/dev/null; then echo "$i"; fi; done)
for i in $GMS $IMS $PST $TRB; do
if [ ! -f $MODPATH/$MODID/$i ]; then
UIP "Found $i" "Patching..."
mkdir -p `dirname $MODPATH/$MODID/$i`
cp -f $i $MODPATH/$MODID/$i
sed -i '/allow-in-power-save package="com.google.android.gms"/d;/allow-in-data-usage-save package="com.google.android.gms"/d' $MODPATH/$MODID/$i
sed -i '/allow-in-power-save package="com.google.android.ims"/d;/allow-in-data-usage-save package="com.google.android.ims"/d' $MODPATH/$MODID/$i
sed -i '/allow-in-power-save package="com.google.android.apps.safetyhub"/d;/allow-in-data-usage-save package="com.google.android.apps.safetyhub"/d' $MODPATH/$MODID/$i
sed -i '/allow-in-power-save package="com.google.android.apps.turbo"/d;/allow-in-data-usage-save package="com.google.android.apps.turbo"/d' $MODPATH/$MODID/$i
UIP "Files Found And Patched"
fi
done
conflict=$(xml=$(find $NVBASE -name "*.xml"); for i in $xml; do if grep -q 'allow-in-power-save package="com.google.android.gms"' $i 2>/dev/null; then echo "$i"; fi; done)
for i in $conflict; do
search=$(echo "$i" | sed -e 's/\// /g' | awk '{print $4}')
UIP "Conflicting Modules Detected" "Module: $search" "Found $i"
sed -i '/allow-in-power-save package="com.google.android.gms"/d;/allow-in-data-usage-save package="com.google.android.gms"/d' $i
UIP "Files Found And Patched"
done
echo "#!$MIPSB/sh
conflict=\$(xml=\$(find $NVBASE -iname \"*.xml\");for i in \$xml; do if grep -q 'allow-in-power-save package=\"com.google.android.gms\"' \$i 2>/dev/null; then echo \"\$i\"; fi; done)
for i in \$conflict; do
sed -i '/allow-in-power-save package=\"com.google.android.gms\"/d;/allow-in-data-usage-save package=\"com.google.android.gms\"/d' \$i
done" > $MODPATH/$MODID/post-fs-data.sh
MSSERVICE -s "for i in \$(ls /data/user/); do pm disable com.google.android.gms/com.google.android.gms.auth.managed.admin.DeviceAdminReceiver; pm disable com.google.android.gms/com.google.android.gms.mdm.receivers.MdmDeviceAdminReceiver; done"
echo "gms='dumpsys deviceidle whitelist | grep -o com.google.android.gms | head -n 1'
if [ \"\$gms\" = \"com.google.android.gms\" ]; then
echo \"\033[0;31m Google Play services is Not Optimized \033[0m\"
else
echo \"\033[0;32m Google Play services is Optimized \033[0m\"
fi" > $MODPATH/$MODID/$IPPSXBM/gmsc
MMPR -vc "Universal GMS Doze" "$VIPUGMSD" "$VCIPUGMSD" "gloeyisk" "Patches Google Play services app and its background processes to be able using battery optimization. Pre-caution, this may leads to unpredictable battery usage as certain scripts blocking its functions."
MOVERPATH; SET_PERM_RM -msgdi
}

SUGMSDO() {
if $BOOTMODE; then
if [ -d $MODPATH/UniversalGMSDoze ] || [ -d $MODPATH/universal-gms-doze ]; then
UCSA "Show Universal GMS Doze Optimized?" "SUGMSDOS"
fi
fi
}

SUGMSDOS() {
MSGDELIMITER
gms="dumpsys deviceidle whitelist | grep -o com.google.android.gms | head -n 1"
if [ "$gms" = com.google.android.gms ]; then UIP "Google Play Services Is Not Optimized"; else UIP "Google Play Services Is Optimized"; fi
}

IPUSGP() {
if [ $ASDK -ge 28 ]; then
UCSA "Install Unlimited Storage For GPhotos $VIPUSGP?" "IPUSGPS"
fi
}

IPUSGPS() {
UIP "Installing USGP $IAMM"
mkdir -p $TMPDIR/USGP
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<!-- Copyright (C) 2015 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the \"License\");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an \"AS IS\" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- The OMA DM service must be whitelisted so they are always able to run. -->
<config>
    <allow-in-power-save package=\"com.android.omadm.service\" />
</config>" > $TMPDIR/USGP/allowlist_com.android.omadm.service.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<!-- Copyright (C) 2014 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the \"License\");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an \"AS IS\" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- These are configurations that must exist on all GMS devices. -->
<config>
    <!-- These are the standard packages that are white-listed to always have internet
         access while in power save mode, even if they aren't in the foreground. -->

    <!-- GmsCore must always have network access for GCM and other things. -->
    <allow-in-power-save package=\"com.google.android.gms\" />
    <allow-in-data-usage-save package=\"com.google.android.gms\" />
    <allow-unthrottled-location package=\"com.google.android.gms\" />
    <allow-ignore-location-settings package=\"com.google.android.gms\" />

    <!-- OobConfig must always have network access to fetch enterprise and carrier lock config. -->
    <allow-in-power-save-except-idle package=\"com.google.android.apps.work.oobconfig\" />
    <allow-in-data-usage-save package=\"com.google.android.apps.work.oobconfig\" />

    <!-- Turbo must not have App Standby restrictions in order to push new
         App Standby buckets to the platform periodically -->
    <allow-in-power-save-except-idle package=\"com.google.android.apps.turbo\" />

    <!-- Certain broadcasts must still go to legacy implicit receivers -->
    <allow-implicit-broadcast action=\"com.google.android.checkin.CHECKIN_COMPLETE\" />
    <allow-implicit-broadcast action=\"com.google.gservices.intent.action.GSERVICES_CHANGED\" />
    <allow-implicit-broadcast action=\"com.google.gservices.intent.action.GSERVICES_OVERRIDE\" />
    <allow-implicit-broadcast action=\"com.google.android.c2dm.intent.RECEIVE\" />
    <!-- TODO: This is a temporary workaround for allowing GmsCore to receive this broadcast.
         This can be removed once OneTimeInitializer functionality is moved to GmsCore. -->
    <allow-implicit-broadcast action=\"com.google.android.onetimeinitializer.ONE_TIME_INITIALIZED\" />

    <!-- Play Store likewise must have network access to support other applications. -->
    <allow-in-power-save-except-idle package=\"com.android.vending\" />

    <!-- If the volta app is pre-installed (for monitoring power use), let it do checkins. -->
    <allow-in-power-save package=\"com.google.android.volta\" />

    <!-- If GoogleCellBroadcastServiceModule is installed, let it run in the background -->
    <allow-in-power-save package=\"com.google.android.cellbroadcastreceiver\" />

    <!-- If CarrierServices is installed, it must always have network access to
         reliably receive IMS messages. -->
    <allow-in-power-save package=\"com.google.android.ims\" />
    <allow-in-data-usage-save package=\"com.google.android.ims\" />

    <!-- These Google applications all handle URLs to their websites by default -->

    <!-- Apps below are required on all GMS devices -->
    <app-link package=\"com.android.vending\" />
    <app-link package=\"com.google.android.apps.maps\" />
    <app-link package=\"com.google.android.youtube\" />
    <app-link package=\"com.google.android.apps.docs\" />
    <app-link package=\"com.google.android.talk\" />
    <app-link package=\"com.google.android.apps.photos\" />
    <app-link package=\"com.google.android.apps.youtube.music\" />

    <!-- Apps below are optional on GMS devices -->
    <app-link package=\"com.google.android.apps.tycho\" />
    <app-link package=\"com.google.android.apps.plus\" />
    <app-link package=\"com.google.android.apps.docs.editors.sheets\" />
    <app-link package=\"com.google.android.apps.docs.editors.slides\" />
    <app-link package=\"com.google.android.apps.docs.editors.docs\" />
    <app-link package=\"com.google.android.talk\" />
    <app-link package=\"com.google.android.videos\" />
    <app-link package=\"com.google.android.calendar\" />
    <app-link package=\"com.google.android.apps.wallpaper\" />

    <!-- These are the packages that are white-listed to be able to run as system user -->
    <system-user-whitelisted-app package=\"com.android.vending\" />
    <system-user-whitelisted-app package=\"com.google.android.gms\" />
    <system-user-whitelisted-app package=\"com.google.android.gms.policy_auth\" />
    <system-user-whitelisted-app package=\"com.google.android.play.games\" />
    <system-user-whitelisted-app package=\"com.google.android.tts\" />

    <!-- These are the packages that are uninstalled for system user -->
    <!-- Apps below are required on all GMS devices -->
    <system-user-blacklisted-app package=\"com.google.android.googlequicksearchbox\" />
    <!-- Apps below are optional on GMS devices -->
    <system-user-blacklisted-app package=\"com.google.android.launcher\" />

    <!-- Whitelist of what components are permitted as backup data transports.  The
         'service' attribute here is a flattened ComponentName string. -->
    <backup-transport-whitelisted-service
        service=\"com.google.android.gms/.backup.BackupTransportService\" />
    <backup-transport-whitelisted-service
        service=\"com.google.android.gms/.backup.component.D2dTransportService\" />

    <!-- Specify the explicit set of other applications that AI services are allowed to
         interact with, including the providers that back the implementation of the APIs
         provided by the package. -->
    <allow-association target=\"com.google.android.as\" allowed=\"com.android.bluetooth\" />
    <allow-association target=\"com.google.android.as\" allowed=\"com.android.providers.contacts\" />
    <allow-association target=\"com.google.android.as\" allowed=\"com.android.providers.media\" />
    <allow-association target=\"com.google.android.as\" allowed=\"com.android.providers.telephony\" />
    <allow-association target=\"com.google.android.as\" allowed=\"com.android.systemui\" />
    <allow-association target=\"com.google.android.as\" allowed=\"com.google.android.providers.media.module\" />

    <!-- Specify the explicit set of other applications whose app data directories are
        accessible by other applications. -->
    <app-data-isolation-whitelisted-app package=\"com.google.android.gms\" />

    <!-- Whitelist of packages that eligible for rollback -->
    <rollback-whitelisted-app package=\"com.android.vending\" />
</config>" > $TMPDIR/USGP/google.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<!-- Copyright (C) 2014 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the \"License\");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an \"AS IS\" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- These are configurations that should exist on Google's own Nexus and GPe devices. -->
<config>
    <feature name=\"com.google.android.feature.GOOGLE_BUILD\" />
    <!-- This should be added to all Nexus and GPe devices -->
    <feature name=\"com.google.android.feature.GOOGLE_EXPERIENCE\" />
    <!-- This should declare the version of Exchange that ships -->
    <feature name=\"com.google.android.feature.EXCHANGE_6_2\" />
</config>" > $TMPDIR/USGP/google_build.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<!--
  ~ Copyright (C) 2018 The Android Open Source Project
  ~
  ~ Licensed under the Apache License, Version 2.0 (the \"License\");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an \"AS IS\" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License
  -->

<!--
This XML file declares which platform apps that need to access internal APIs.
-->
<config>
  <hidden-api-whitelisted-app package=\"android.car.cluster.maserati\" />
  <hidden-api-whitelisted-app package=\"com.android.apps.tag\" />
  <hidden-api-whitelisted-app package=\"com.android.auto.embedded.cts.verifier\" />
  <hidden-api-whitelisted-app package=\"com.android.car.bugreport\" />
  <hidden-api-whitelisted-app package=\"com.android.car.carlauncher\" />
  <hidden-api-whitelisted-app package=\"com.android.car.home\" />
  <hidden-api-whitelisted-app package=\"com.android.car.retaildemo\" />
  <hidden-api-whitelisted-app package=\"com.android.car.settingslib.robotests\" />
  <hidden-api-whitelisted-app package=\"com.android.car.setupwizardlib.robotests\" />
  <hidden-api-whitelisted-app package=\"com.android.cardock\" />
  <hidden-api-whitelisted-app package=\"com.android.connectivity.metrics\" />
  <hidden-api-whitelisted-app package=\"com.android.facelock\" />
  <hidden-api-whitelisted-app package=\"com.android.google.gce.gceservice\" />
  <hidden-api-whitelisted-app package=\"com.android.hotwordenrollment.okgoogle\" />
  <hidden-api-whitelisted-app package=\"com.android.hotwordenrollment.tgoogle\" />
  <hidden-api-whitelisted-app package=\"com.android.hotwordenrollment.xgoogle\" />
  <hidden-api-whitelisted-app package=\"com.android.inputmethod.latin\" />
  <hidden-api-whitelisted-app package=\"com.android.media.update\" />
  <hidden-api-whitelisted-app package=\"com.android.netspeed\" />
  <hidden-api-whitelisted-app package=\"com.android.onemedia\" />
  <hidden-api-whitelisted-app package=\"com.android.pixellogger\" />
  <hidden-api-whitelisted-app package=\"com.android.ramdump\" />
  <hidden-api-whitelisted-app package=\"com.android.settingslib.robotests\" />
  <hidden-api-whitelisted-app package=\"com.android.simappdialog\" />
  <hidden-api-whitelisted-app package=\"com.android.statsd.dogfood\" />
  <hidden-api-whitelisted-app package=\"com.android.statsd.loadtest\" />
  <hidden-api-whitelisted-app package=\"com.android.systemui.shared\" />
  <hidden-api-whitelisted-app package=\"com.android.test.power\" />
  <hidden-api-whitelisted-app package=\"com.android.test.voiceenrollment\" />
  <hidden-api-whitelisted-app package=\"com.android.tv.provision\" />
  <hidden-api-whitelisted-app package=\"com.google.SSRestartDetector\" />
  <hidden-api-whitelisted-app package=\"com.google.android.apps.nexuslauncher\" />
  <hidden-api-whitelisted-app package=\"com.google.android.apps.wallpaper\" />
  <hidden-api-whitelisted-app package=\"com.google.android.asdiv\" />
  <hidden-api-whitelisted-app package=\"com.google.android.athome.globalkeyinterceptor\" />
  <hidden-api-whitelisted-app package=\"com.google.android.car.defaultstoragemonitoringcompanionapp\" />
  <hidden-api-whitelisted-app package=\"com.google.android.car.diagnosticrecorder\" />
  <hidden-api-whitelisted-app package=\"com.google.android.car.diagnosticverifier\" />
  <hidden-api-whitelisted-app package=\"com.google.android.car.diskwriteapp\" />
  <hidden-api-whitelisted-app package=\"com.google.android.car.flashapp\" />
  <hidden-api-whitelisted-app package=\"com.google.android.car.kitchensink\" />
  <hidden-api-whitelisted-app package=\"com.google.android.car.obd2app\" />
  <hidden-api-whitelisted-app package=\"com.google.android.car.setupwizard\" />
  <hidden-api-whitelisted-app package=\"com.google.android.car.usb.aoap.host\" />
  <hidden-api-whitelisted-app package=\"com.google.android.car.vms.subscriber\" />
  <hidden-api-whitelisted-app package=\"com.google.android.carrier\" />
  <hidden-api-whitelisted-app package=\"com.google.android.carriersetup\" />
  <hidden-api-whitelisted-app package=\"com.google.android.connectivitymonitor\" />
  <hidden-api-whitelisted-app package=\"com.google.android.edu.harnesssettings\" />
  <hidden-api-whitelisted-app package=\"com.google.android.ext.services\" />
  <hidden-api-whitelisted-app package=\"com.google.android.factoryota\" />
  <hidden-api-whitelisted-app package=\"com.google.android.feedback\" />
  <hidden-api-whitelisted-app package=\"com.google.android.gsf\" />
  <hidden-api-whitelisted-app package=\"com.google.android.hardwareinfo\" />
  <hidden-api-whitelisted-app package=\"com.google.android.hiddenmenu\" />
  <hidden-api-whitelisted-app package=\"com.google.android.onetimeinitializer\" />
  <hidden-api-whitelisted-app package=\"com.google.android.permissioncontroller\" />
  <hidden-api-whitelisted-app package=\"com.google.android.partner.provisioning\" />
  <hidden-api-whitelisted-app package=\"com.google.android.partnersetup\" />
  <hidden-api-whitelisted-app package=\"com.google.android.pixel.setupwizard\" />
  <hidden-api-whitelisted-app package=\"com.google.android.preloaded_drawable_viewer\" />
  <hidden-api-whitelisted-app package=\"com.google.android.printservice.recommendation\" />
  <hidden-api-whitelisted-app package=\"com.google.android.sampledeviceowner\" />
  <hidden-api-whitelisted-app package=\"com.google.android.apps.scone\" />
  <hidden-api-whitelisted-app package=\"com.google.android.sdksetup\" />
  <hidden-api-whitelisted-app package=\"com.google.android.setupwizard\" />
  <hidden-api-whitelisted-app package=\"com.google.android.storagemanager\" />
  <hidden-api-whitelisted-app package=\"com.google.android.tag\" />
  <hidden-api-whitelisted-app package=\"com.google.android.tungsten.setupwraith\" />
  <hidden-api-whitelisted-app package=\"com.google.android.tv.bugreportsender\" />
  <hidden-api-whitelisted-app package=\"com.google.android.tv.frameworkpackagestubs\" />
  <hidden-api-whitelisted-app package=\"com.google.android.tv.pairedsetup\" />
  <hidden-api-whitelisted-app package=\"com.google.android.vendorloggingservice\" />
  <hidden-api-whitelisted-app package=\"com.google.android.volta\" />
  <hidden-api-whitelisted-app package=\"com.google.android.wfcactivation\" />
  <hidden-api-whitelisted-app package=\"com.google.mds\" />
  <hidden-api-whitelisted-app package=\"com.google.modemservice\" />
  <hidden-api-whitelisted-app package=\"com.htc.omadm.trigger\" />
  <hidden-api-whitelisted-app package=\"com.qualcomm.qcrilmsgtunnel\" />
  <hidden-api-whitelisted-app package=\"com.ustwo.lwp\" />
  <hidden-api-whitelisted-app package=\"org.chromium.arc.accessibilityhelper\" />
  <hidden-api-whitelisted-app package=\"org.chromium.arc.apkcacheprovider\" />
  <hidden-api-whitelisted-app package=\"org.chromium.arc.applauncher\" />
  <hidden-api-whitelisted-app package=\"org.chromium.arc.backup_settings\" />
  <hidden-api-whitelisted-app package=\"org.chromium.arc.cast_receiver\" />
  <hidden-api-whitelisted-app package=\"org.chromium.arc.crash_collector\" />
  <hidden-api-whitelisted-app package=\"org.chromium.arc.file_system\" />
  <hidden-api-whitelisted-app package=\"org.chromium.arc.gms\" />
  <hidden-api-whitelisted-app package=\"org.chromium.arc.home\" />
  <hidden-api-whitelisted-app package=\"org.chromium.arc.intent_helper\" />
  <hidden-api-whitelisted-app package=\"org.chromium.arc.tts\" />
</config>" > $TMPDIR/USGP/google-hiddenapi-package-whitelist.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<!--
  ~ Copyright (C) 2018 The Android Open Source Project
  ~
  ~ Licensed under the Apache License, Version 2.0 (the \"License\");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an \"AS IS\" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License
  -->

<!--
This XML file declares packages eligible for rollback.
-->
<config>
  <!-- Mainline modules (apk or apex) go here. -->
  <rollback-whitelisted-app package=\"com.google.android.adbd\" />
  <rollback-whitelisted-app package=\"com.google.android.angle\" />
  <rollback-whitelisted-app package=\"com.google.android.captiveportallogin\" />
  <rollback-whitelisted-app package=\"com.google.android.cellbroadcast\" />
  <rollback-whitelisted-app package=\"com.google.android.conscrypt\" />
  <rollback-whitelisted-app package=\"com.google.android.documentsui\" />
  <rollback-whitelisted-app package=\"com.google.android.ext.services\" />
  <rollback-whitelisted-app package=\"com.google.android.extservices\" />
  <rollback-whitelisted-app package=\"com.google.android.ipsec\" />
  <rollback-whitelisted-app package=\"com.google.android.media\" />
  <rollback-whitelisted-app package=\"com.google.android.media.swcodec\" />
  <rollback-whitelisted-app package=\"com.google.android.mediaprovider\" />
  <rollback-whitelisted-app package=\"com.google.android.modulemetadata\" />
  <rollback-whitelisted-app package=\"com.google.android.networkstack\" />
  <rollback-whitelisted-app package=\"com.google.android.networkstack.permissionconfig\" />
  <rollback-whitelisted-app package=\"com.google.android.neuralnetworks\" />
  <rollback-whitelisted-app package=\"com.google.android.os.statsd\" />
  <rollback-whitelisted-app package=\"com.google.android.permission\" />
  <rollback-whitelisted-app package=\"com.google.android.permissioncontroller\" />
  <rollback-whitelisted-app package=\"com.google.android.resolv\" />
  <rollback-whitelisted-app package=\"com.google.android.sdkext\" />
  <rollback-whitelisted-app package=\"com.google.android.tethering\" />
  <rollback-whitelisted-app package=\"com.google.android.tzdata\" />
  <rollback-whitelisted-app package=\"com.google.android.tzdata2\" />
  <rollback-whitelisted-app package=\"com.google.android.wifi\" />
  <rollback-whitelisted-app package=\"com.google.mainline.telemetry\" />
  <!-- Mainline modules as apk-in-apex go here. -->
  <rollback-whitelisted-app package=\"com.android.cellbroadcastreceiver\" />
  <rollback-whitelisted-app package=\"com.android.cellbroadcastservice\" />
  <rollback-whitelisted-app package=\"com.android.networkstack.tethering\" />
  <rollback-whitelisted-app package=\"com.google.android.cellbroadcastreceiver\" />
  <rollback-whitelisted-app package=\"com.google.android.cellbroadcastservice\" />
  <rollback-whitelisted-app package=\"com.google.android.hotspot2.osulogin\" />
  <rollback-whitelisted-app package=\"com.google.android.networkstack.tethering\" />
  <rollback-whitelisted-app package=\"com.google.android.providers.media.module\" />
  <rollback-whitelisted-app package=\"com.google.android.wifi.resources\" />
</config>" > $TMPDIR/USGP/google-rollback-package-whitelist.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>

<!--
 This XML file declares installer eligible for committing stage install.
-->
<config>
  <whitelisted-staged-installer package=\"com.android.vending\" />
</config>" > $TMPDIR/USGP/google-staged-installer-whitelist.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>

<!-- These are configurations that should exist on Google's 2016 and newer Nexus devices. -->
<config>
    <!-- This is meant to be the canonical feature identifying 2016 and newer Nexus devices. -->
    <feature name=\"com.google.android.feature.PIXEL_EXPERIENCE\" />

    <!-- Both versions of this string are needed due to a miscommunication. b/29978934 -->
    <feature name=\"com.google.android.apps.photos.NEXUS_PRELOAD\" />
    <feature name=\"com.google.android.apps.photos.nexus_preload\" />

    <!-- Enable Zero Touch Provisioning support for 2016 and newer Nexus devices. -->
    <feature name=\"com.google.android.feature.ZERO_TOUCH\" />

    <!-- Allow Google unbundled tethering entitlement app in background -->
    <allow-in-power-save package=\"com.google.android.tetheringentitlement\" />

    <!-- Allow ssr detector service in background -->
    <allow-in-power-save package=\"com.google.SSRestartDetector\" />

    <!-- Allow ramdump uploader service in background -->
    <allow-in-power-save package=\"com.android.ramdump\" />

    <!-- These are telephony components that need to run in the background -->
    <allow-in-power-save package=\"com.qualcomm.atfwd\" />
    <allow-in-power-save package=\"com.qualcomm.embms\" />
    <allow-in-power-save package=\"com.qualcomm.qti.telephonyservice\" />
    <allow-in-power-save package=\"com.qulacomm.qcrilmsgtunnel\" />
    <allow-in-power-save package=\"com.qualcomm.qti.ims\" />
    <allow-in-power-save package=\"com.qualcomm.qti.radioconfiginterface\" />
</config>" > $TMPDIR/USGP/nexus.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>

<!-- These are configurations that should exist on devices that support Next Generation Assistant -->
<config>
    <!-- This feature is meant to be the feature identifying devices that support NGA -->
    <feature name=\"com.google.android.feature.NEXT_GENERATION_ASSISTANT\" />
</config>" > $TMPDIR/USGP/nga.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>

<!-- These are configurations that should exist on Google's 2016 Pixel devices. -->
<config>
    <!-- Both versions of this string are needed due to a miscommunication. b/29978934 -->
    <feature name=\"com.google.android.apps.photos.NEXUS_PRELOAD\" />
    <feature name=\"com.google.android.apps.photos.nexus_preload\" />
</config>" > $TMPDIR/USGP/pixel_2016_exclusive.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>

<!-- These are configurations that should exist on Google's 2017 and newer Nexus devices. -->
<config>
    <!-- This is meant to be the canonical feature identifying 2017 and newer Nexus devices. -->
    <feature name=\"com.google.android.feature.PIXEL_2017_EXPERIENCE\" />

    <!-- Allow SCONE JobIntentService & Services to run in background -->
    <allow-in-power-save package=\"com.google.android.apps.scone\" />

    <!-- Allow Flipendo in power save. Will be present on pre-2020 devices for dogfooding. -->
    <allow-in-power-save-except-idle package=\"com.google.android.flipendo\" />

    <!-- Allow Better Bug to take bug report. -->
    <bugreport-whitelisted package=\"com.google.android.apps.betterbug\" />
    <bugreport-whitelisted package=\"com.google.android.apps.internal.betterbug\" />
    <bugreport-whitelisted package=\"com.google.android.apps.betterbug.partners\" />

    <!-- Allow Pixel modem service to run in background -->
    <allow-in-power-save package=\"com.google.modemservice\" />

    <!-- Allow MDS ExperimentService to run in background -->
    <allow-in-power-save package=\"com.google.mds\" />

    <!-- Hide DocumentsUi Launcher/Downloads intent handling. DocumentsUi
         PrebootReceiver does not properly hide the launcher in work profile,
         so we need to include this as well. -->
    <component-override package=\"com.google.android.documentsui\" >
        <component class=\"com.android.documentsui.LauncherActivity\" enabled=\"false\" />
        <component class=\"com.android.documentsui.ViewDownloadsActivity\" enabled=\"false\" />
    </component-override>

    <!-- ACTION_MANAGE_STORAGE handled by Files by Google -->
    <component-override package=\"com.google.android.storagemanager\" >
        <component class=\"com.android.storagemanager.deletionhelper.DeletionHelperActivity\" enabled=\"false\" />
    </component-override>

    <!-- Make sure photos/video previews are handled by Photos. -->
    <component-override package=\"com.google.android.apps.nbu.files\" >
        <component class=\"com.google.android.apps.nbu.files.gateway.preview.PreviewActivity\" enabled=\"false\" />
    </component-override>

    <component-override package=\"com.android.settings\" >
        <!-- Display regulatory info in settings. -->
        <component class=\".RegulatoryInfoDisplayActivity\" enabled=\"true\" />
    </component-override>

    <!-- Stub for Fi to request bug reports, disabled until a Fi SIM is added.
         Included for all in-market devices receiving the R OTA as well as
         devices launching with R. -->
    <disabled-until-used-preinstalled-carrier-associated-app
        package=\"com.google.android.apps.nova.bugreportwrapper\"
        carrierAppPackage=\"com.google.android.apps.tycho\"
        addedInSdk=\"30\" />
    <!-- Allow access to BugreportManager. -->
    <bugreport-whitelisted package=\"com.google.android.apps.nova.bugreportwrapper\" />

    <!-- Feature flag on RVC builds for AER requirements, b/159247801 -->
    <feature name=\"com.google.android.feature.AER_OPTIMIZED\" />

</config>" > $TMPDIR/USGP/pixel_experience_2017.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>

<!-- These are configurations that should exist on Google's 2018 and newer Pixel devices. -->
<config>
    <!-- Allow Pixel modem service in background -->
    <allow-in-power-save package=\"com.google.modemservice\" />

    <!-- Allow PixelLogger LoggingService to run in background -->
    <allow-in-power-save package=\"com.android.pixellogger\" />

    <!-- Allow Flipendo in power save. Will be present on pre-2020 devices for dogfooding. -->
    <allow-in-power-save-except-idle package=\"com.google.android.flipendo\" />

    <!-- This is meant to be the canonical feature identifying 2018 and newer Pixel devices. -->
    <feature name=\"com.google.android.feature.PIXEL_2018_EXPERIENCE\" />
</config>" > $TMPDIR/USGP/pixel_experience_2018.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>

<!-- These are configurations that should exist on Google's 2019 and newer devices. -->
<config>
    <!-- This is meant to be the canonical feature identifying 2019 and newer devices. -->
    <feature name=\"com.google.android.feature.PIXEL_2019_EXPERIENCE\" />

    <!-- Allow Flipendo in power save. Will be present on pre-2020 devices for dogfooding. -->
    <allow-in-power-save-except-idle package=\"com.google.android.flipendo\" />
</config>" > $TMPDIR/USGP/pixel_experience_2019.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>

<!-- These are configurations that should exist on Google's 2019 mid year and newer devices. -->
<config>
    <!-- This is meant to be the canonical feature identifying 2019 mid year and newer devices. -->
    <feature name=\"com.google.android.feature.PIXEL_2019_MIDYEAR_EXPERIENCE\" />

    <!-- Allow Flipendo in power save. Will be present on pre-2020 devices for dogfooding. -->
    <allow-in-power-save-except-idle package=\"com.google.android.flipendo\" />
</config>" > $TMPDIR/USGP/pixel_experience_2019_midyear.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>

<!-- These are configurations that should exist on Google's 2020 and newer devices. -->
<config>
    <!-- This is meant to be the canonical feature identifying 2020 and newer devices. -->
    <feature name=\"com.google.android.feature.PIXEL_2020_EXPERIENCE\" />

    <!-- Allow Flipendo in power save. -->
    <allow-in-power-save-except-idle package=\"com.google.android.flipendo\" />
</config>" > $TMPDIR/USGP/pixel_experience_2020.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>

<!-- These are configurations that should exist on Google's 2020 mid year and newer devices. -->
<config>
    <!-- This is meant to be the canonical feature identifying 2020 mid year and newer devices. -->
    <feature name=\"com.google.android.feature.PIXEL_2020_MIDYEAR_EXPERIENCE\" />

    <!-- Allow Flipendo in power save. -->
    <allow-in-power-save-except-idle package=\"com.google.android.flipendo\" />
</config>" > $TMPDIR/USGP/pixel_experience_2020_midyear.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<!-- Copyright (C) 2019 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the \"License\");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an \"AS IS\" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<!-- System packages to preinstall on all devices with handheld_product, per user type.
     Documentation at frameworks/base/data/etc/preinstalled-packages-platform.xml
-->
<config>
    <install-in-user-type package=\"com.android.wallpapercropper\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
</config>" > $TMPDIR/USGP/preinstalled-packages-platform-handheld-product.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<!-- Copyright (C) 2019 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the \"License\");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an \"AS IS\" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<!-- System packages to preinstall on all devices with frameworks-base-overlays, per user type.
     Documentation at frameworks/base/data/etc/preinstalled-packages-platform.xml
-->
<config>
    <install-in-user-type package=\"com.android.internal.display.cutout.emulation.corner\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
    <install-in-user-type package=\"com.android.internal.display.cutout.emulation.double\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
    <install-in-user-type package=\"com.android.internal.display.cutout.emulation.tall\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
    <install-in-user-type package=\"com.android.internal.systemui.navbar.gestural\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
    <install-in-user-type package=\"com.android.internal.systemui.navbar.gestural_extra_wide_back\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
    <install-in-user-type package=\"com.android.internal.systemui.navbar.gestural_narrow_back\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
    <install-in-user-type package=\"com.android.internal.systemui.navbar.gestural_wide_back\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
    <install-in-user-type package=\"com.android.internal.systemui.navbar.threebutton\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
    <install-in-user-type package=\"com.android.internal.systemui.navbar.twobutton\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
</config>" > $TMPDIR/USGP/preinstalled-packages-platform-overlays.xml
echo "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<!-- System packages to preinstall on Pixel 2017-and-newer devices, per user type.
     Documentation at frameworks/base/data/etc/preinstalled-packages-platform.xml
-->
<config>
    <install-in-user-type package=\"com.android.wallpaper.livepicker\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
    <install-in-user-type package=\"com.google.android.apps.nexuslauncher\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
    <install-in-user-type package=\"com.google.android.apps.wallpaper\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
    <install-in-user-type package=\"com.google.android.apps.wallpaper.nexus\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
    <install-in-user-type package=\"com.google.android.calculator\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
    <install-in-user-type package=\"com.google.android.deskclock\">
        <install-in user-type=\"FULL\" />
    </install-in-user-type>
</config>" > $TMPDIR/USGP/preinstalled-packages-product-pixel-2017-and-newer.xml
if $MAGISK; then
PTMFI -nm "$IDUSGP" "$MIPSES $MIPSSPES"
cp -f $TMPDIR/$MODID/* $MODPATH/$MODID$MIPSES
cp -f $TMPDIR/$MODID/* $MODPATH/$MODID$MIPSSPES
MMPR -v "$MODID" "$VIPUSGP" "Activating Unlimited Storage For Google Photos (Maybe)"; IPUSGP=$MODPATH/$MODID/system.prop
else
BUCKUPER -bp "$IPSBP"; IPUSGP=$IPSBP
touch $AIOPFMDPH/USGP
[ -d $IPSES ] && cp -f $TMPDIR/USGP/* $IPSES
[ -d $IPSSPES ] && cp -f $TMPDIR/USGP/* $IPSSPES
fi
echo -e "\n# Activating Unlimited Storage For Google Photos (Maybe)\nro.com.google.clientidbase=android-google\nro.opa.eligible_device=true" >> $IPUSGP
SET_PERM_RM -msgdi
}

IPAS() {
if $MAGISK && SP_CHECKER "$XMLGLOBAL" "window_animation_scale transition_animation_scale animator_duration_scale"; then UCSA "Install Animation Scale $VIPAS?" "IPASS"; fi
}

IPASS() {
UCSA -a "0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0" "Choose Animation Scale:" "Animation Scale" "1.0"
if $UCSFNM; then
UIP "Installing Animation Scale $IAMM"
PTMFI -nmp "$IDAS"
MSSERVICE -s "$SPGLOBAL window_animation_scale $UCSFNMC; $SPGLOBAL transition_animation_scale $UCSFNMC; $SPGLOBAL animator_duration_scale $UCSFNMC"
if $BOOTMODE; then UIP "Enabling Animation Scale Right Now"; $SPGLOBAL window_animation_scale $UCSFNMC; $SPGLOBAL transition_animation_scale $UCSFNMC; $SPGLOBAL animator_duration_scale $UCSFNMC; fi
MMPR -v "Animation Scale" "$VIPAS" "Animation Scale - Set On $UCSFNMC $MSGFMM"; SET_PERM_RM -msgdi
fi
}

IPGPUR() {
if [ "$ASDK" -ge 29 ]; then
UCSA -ent "Install GPU Rendering $VIPGPUR?" "IPGPURS"
fi
}

IPGPURS() {
MSGGPURVR=true
for GPURVR in "OpenGL (Default)" "OpenGL Skia (Faster)" "OpenGL Skia Vulkan (Very Fast)"; do
MSGVGPURVR="$MSGNIS"
case $GPURVR in
"OpenGL (Default)") GPURV="debug.hwui.renderer=opengl";; "OpenGL Skia (Faster)") GPURV="debug.hwui.renderer=skiagl";; "OpenGL Skia Vulkan (Very Fast)") GPURV="debug.hwui.renderer=skiavk"; MSGVGPURVR="$MSGNUS";; *) VGPUR=false;;
esac
if $MSGGPURVR; then
UIP -d "Сhoose GPU Rendering"
MSGGPURVR=false
else
MSGDELIMITER
fi
UIP "$MSGVU $GPURVR" "$MSGVD No $MSGVGPURVR"
if $KEYFUNCTION; then
VGPUR=true
break
else
VGPUR=false
fi
done
if $VGPUR; then
UIP "Installing GPU Rendering $IAMM"
if $MAGISK; then
PTMFI -nmp "$IDGPUR"
echo "$GPURV" > $MODPATH/$MODID/build.prop
MMPR -v "GPU Rendering" "$VIPGPUR" "GPU Rendering - Set In $GPURVR"
else
BUCKUPER -bp "$IPSBP"
echo -e "# GPU Rendering\n$GPURV" >> $IPSBP
fi
SET_PERM_RM -msgdi
fi
}

IPVS() {
if [ $ENDMODE != true ]; then MSGNUS="$MSGEND"; fi; UCSA -ent "Install Volume Steps $VIPVS?" "IPVSS"
}

IPVSS() {
UIP -d "$MSGFI Choose Variant:" "$MSGVU Edit All Lines Together" "$MSGVD Edit All Lines Separately"
MSGVS=true; SETMEDIAVOLUMESTEPS=false; SETCALLVOLUMESTEPS=false; SETSYSTEMVOLUMESTEPS=false; SETALARMVOLUMESTEPS=false; MSGVSA="$MSGNIS"
if $KEYFUNCTION; then
for VS in $(seq 10 5 50); do
MSGVSA="$MSGNIS"
case $VS in
"40") MSGVSA="$MSGNUS";;
esac
if $MSGVS; then
UIP -d "Choose Volume Steps:"
MSGVS=false
else
MSGDELIMITER
fi
UIP "Step Set On ($VS)" "$MSGVU Yes" "$MSGVD No $MSGVSA"
if $KEYFUNCTION; then
VOLUMESTEPSC=true; SETMEDIAVOLUMESTEPS=true; SETCALLVOLUMESTEPS=true; SETSYSTEMVOLUMESTEPS=true; SETALARMVOLUMESTEPS=true; MEDIAVOLUMESTEPS="$VS"; CALLVOLUMESTEPS="$VS"; SYSTEMVOLUMESTEPS="$VS"; ALARMVOLUMESTEPS="$VS"
break
else
VOLUMESTEPSC=false
fi
done
else
for ALLVVS in "Media" "Call" "System" "Alarm"; do
case $ALLVVS in "Alarm") MSGVSA="$MSGNUS";; esac
UIP -d "Set For $ALLVVS" "$MSGVU Yes" "$MSGVD No $MSGVSA"
if $KEYFUNCTION; then
for VS in $(seq 10 5 50); do
MSGVSA="$MSGNIS"
case $VS in "50") MSGVSA="$MSGNUS";; esac
if $MSGVS; then
UIP -d "Choose Volume Steps:"
MSGVS=false
else
MSGDELIMITER
fi
UIP "Step For $ALLVVS Set On ($VS)" "$MSGVU Yes" "$MSGVD No $MSGVSA"
if $KEYFUNCTION; then
VOLUMESTEPSC=true
case $ALLVVS in
"Media") SETMEDIAVOLUMESTEPS=true; MEDIAVOLUMESTEPS="$VS";; "Call") SETCALLVOLUMESTEPS=true; CALLVOLUMESTEPS="$VS";; "System") SETSYSTEMVOLUMESTEPS=true; SYSTEMVOLUMESTEPS="$VS";; "Alarm") SETALARMVOLUMESTEPS=true; ALARMVOLUMESTEPS="$VS";;
esac
break
fi
done
fi
done
fi
if $VOLUMESTEPSC; then
UIP "Installing Volume Steps $IAMM"
if $MAGISK; then
PTMFI -nmp "$IDVS"
MMPR -v "Volume Steps" "$VIPVS" "Volume Steps $MSGFMM - Set On: Media $MEDIAVOLUMESTEPS, Call $CALLVOLUMESTEPS, System $SYSTEMVOLUMESTEPS, Alarm $ALARMVOLUMESTEPS"; IPVS=$MODPATH/$MODID/system.prop
else
BUCKUPER -bp "$IPSBP"; IPVS=$IPSBP
fi
if $SETMEDIAVOLUMESTEPS; then echo "ro.config.media_vol_steps=$MEDIAVOLUMESTEPS" >> $IPVS; fi
if $SETCALLVOLUMESTEPS; then echo "ro.config.vc_call_vol_steps=$CALLVOLUMESTEPS" >> $IPVS; fi
if $SETSYSTEMVOLUMESTEPS; then echo "ro.config.system_vol_steps=$SYSTEMVOLUMESTEPS" >> $IPVS; fi
if $SETALARMVOLUMESTEPS; then echo "ro.config.alarm_vol_steps=$ALARMVOLUMESTEPS" >> $IPVS; fi
SET_PERM_RM -msgdi
fi
}

} #

} #

{ #Presets

UI_PRESETS() {
IPPO
IPPCO
IPPHO
IPPSHNB
IPBGD
IPGBNBS
IPGBRC
IPGBT
IPGBSTE
IPSBINNI
IPGPPM
IPRUI
IPBIP
IPNSP
IPSBIS
IPSBCS
IPSUE
IPSBP
IPQSCP
IPSUIRSRS
IPQSCIAR
IPEBB
IPBA
IPIOSEMOJI
IPMUIS
IPFDNI
IPWFAMDQSSC
}

APPS_PRESETS() {
IPSL
IPAPP
}

AUDIO_PRESETS() {
IPVFX
IPVFXP
IPNLS
IPAIST
IPSAQ
IPIB
IPAML
}

REMOVAL_PRESETS() {
RPASSF
RSWIFTO
GTRRRM
GTRMFL
RWFS
RRTPXML
RAPEXA
}

TEST_COMING_SOON_PRESETS() {
if $TESTMODE; then
RoundedUIC
PillsOverlayC
SBINNIC
SHNB
QuickStepC
BIPC
FaceUnlockServiceC
NSPC
SBPC
COSBCS
CSBIS
QSCIARC
fi
}

NET_PRESETS() {
IPGPSP
IPWIFIP
IPTTLF
IPNT
IPAPAUSBTF
}

UTILITIES_PRESETS() {
IPBB
IPSELC
IPCC
IPMMFR
}

OTHER_PRESETS() {
IPFPA
IPFSLFM
UFAAPP
SBATTERYUSAGE
GASL
}

RIRU_AND_LSPOSED_PRESETS() {
IPRIRU
IPLSPOSEDR
}

TWEAKS_PRESETS() {
IPFGS
IPFEG
IPHAP
IPAFUS
IPBPT
IPKL
IPFMSAAS
IPFDHWO
IPFDEVADB
IPFMTP
IPSOOOFUIRC
IPFDM
IPFDPP
IPFI
IPCLEDLO
IPLEDLA
IPUGMSD
SUGMSDO
IPUSGP
IPAS
IPGPUR
IPVS
}

PRESETS() {
if [ -d $MODPATH ] && [ $MAGISKFIRSTTIME != true ] && $MAGISK && $MMUPDC; then for mmc in $(ls $MODPATH); do if [ -d "$MODPATH/$mmc" ]; then UCSA -ent "Checking Update?" "MMUPD_LIST" && break; fi; done; fi
if $PDESIGN; then
UIP -d "UI: Pills/NavBar/Gboard/Themes/BA/Sounds" "$MSGVU Yes $MSGEFTC" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then UI_PRESETS; fi
if $MIUI && [ -d $STORAGE/Applications ] && find $STORAGE/Applications -type f -name "*.apk" >/dev/null; then IPAPP; elif [ "$ASDK" -ge 32 ] && [ -d $STORAGE/Applications ] && find $STORAGE/Applications -type f -name "*.apk" >/dev/null; then IPAPP; else UIP -d "Apps: Lawnchair/Shady/IA" "$MSGVU Yes $MSGEFTC" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then APPS_PRESETS; fi; fi
UIP -d "Audio: VFX(P)/NL/AIST/SAQ/IB/AML" "$MSGVU Yes $MSGEFTC" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then AUDIO_PRESETS; fi
if $BOOTMODE; then REMOVAL_PRESETS; else UIP -d "Removal: RSL/RSO/RSTA/RWFSB" "$MSGVU Yes $MSGEFTC" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then REMOVAL_PRESETS; fi; fi
if $TESTMODE; then UIP -d "Test/Coming Soon" "$MSGVU Yes $MSGEFTC" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then TEST_COMING_SOON_PRESETS; fi; fi
UIP -d "Net: GPS/WIFI/TTL/DNS/APAUSBTF" "$MSGVU Yes $MSGEFTC" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then NET_PRESETS; fi
UIP -d "Utilities: BB/SELC/CC/MMFR" "$MSGVU Yes $MSGEFTC" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then UTILITIES_PRESETS; fi
UIP -d "Other: FA/FSFM/UAA/SBU/GASL" "$MSGVU Yes $MSGEFTC" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then OTHER_PRESETS; fi
IPHF
if $MAGISK; then if [ "$ASDK" -ge 27 ]; then UIP -d "Riru/LSPosed" "$MSGVU Yes $MSGEFTC" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then RIRU_AND_LSPOSED_PRESETS; fi; fi; fi
if [ $ENDMODE != true ]; then MSGNUS="$MSGEND"; fi
UIP -d "Tweaks: FGS/BP/LED/UGMSD/USGP/VS" "$MSGVU Yes $MSGEFTC" "$MSGVD No $MSGNUS"; if $KEYFUNCTION; then MSGNUS="(/)"; TWEAKS_PRESETS; fi
else
UI_PRESETS
APPS_PRESETS
AUDIO_PRESETS
REMOVAL_PRESETS
TEST_COMING_SOON_PRESETS
NET_PRESETS
UTILITIES_PRESETS
OTHER_PRESETS
IPHF
SAFETY_NET_PRESETS
RIRU_AND_LSPOSED_PRESETS
TWEAKS_PRESETS
fi
}

} #

BOOT_DETECTED
APMSGASD
PARTITION_AND_MOUNTS
IMPORTANT_VARIABLES
APP_LIST
MIUI_CHECKER
BB_CHECKER
ARCH_CHECKER
SOC_CHECKER
GAPPS_CHECKER
PATCHMODE
AIOPFMD
CHECK_AVERSION
CHECK_DEVICE -x
KEYCHECK
MAGISK_CHECKER
PRESETS
END